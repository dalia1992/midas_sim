
R version 2.11.1 (2010-05-31)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R est un logiciel libre livr'e sans AUCUNE GARANTIE.
Vous pouvez le redistribuer sous certaines conditions.
Tapez 'license()' ou 'licence()' pour plus de d'etails.

R est un projet collaboratif avec de nombreux contributeurs.
Tapez 'contributors()' pour plus d'information et
'citation()' pour la facon de le citer dans les publications.

Tapez 'demo()' pour des d'emonstrations, 'help()' pour l'aide
en ligne ou 'help.start()' pour obtenir l'aide au format HTML.
Tapez 'q()' pour quitter R.

[1] "fr_FR/fr_FR/fr_FR/C/fr_FR/C"
[Sauvegarde de la session précédente restaurée]


 Started working: Mon May  2 13:32:35 2011 
> rm(list=ls())
> 
> source("10code.R")
> sim3 <- sim.Y.finite(100,3,5,tfun=theta.216,xfun=sim.X,lambda=c(1,2,-3))
Erreur dans sim.Y.finite(100, 3, 5, tfun = theta.216, xfun = sim.X, lambda = c(1,  : 
  impossible de trouver la fonction "%do%"
> 
> source("10code.R")
> library(foreach)
Le chargement a nécessité le package : iterators
Le chargement a nécessité le package : codetools
foreach: simple, scalable parallel programming from REvolution Computing
Use REvolution R for scalability, fault tolerance and more.
http://www.revolution-computing.com
> 
> sim3 <- sim.Y.finite(100,3,5,tfun=theta.216,xfun=sim.X,lambda=c(1,2,-3))
> 
> modl <- gen.k(sim3,17)
> k <- which.min(sapply(modl,KZ.k))-1
> bb <- prep.nls.finite(sim3,5)
> 
> summary(nls(that~theta.216(index,lambda),data=bb,start=list(lambda=c(1,1,1))))

Formula: that ~ theta.216(index, lambda)

Parameters:
        Estimate Std. Error t value Pr(>|t|)    
lambda1  0.97809    0.04659  20.995 1.56e-12 ***
lambda2  2.14968    0.36224   5.934 2.74e-05 ***
lambda3 -3.11303    0.35654  -8.731 2.89e-07 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 0.09437 on 15 degrees of freedom

Number of iterations to convergence: 1 
Achieved convergence tolerance: 7.506e-08 

> object.size(sim3)
8016 bytes
> length(sim3)
[1] 7
> length(sim3$X)
[1] 300
> length(sim3$x)
[1] 318
> sim3$theta
          [,1]
 [1,] 0.000000
 [2,] 1.250000
 [3,] 1.333333
 [4,] 1.312500
 [5,] 1.280000
 [6,] 1.250000
 [7,] 1.224490
 [8,] 1.203125
 [9,] 1.185185
[10,] 1.170000
[11,] 1.157025
[12,] 1.145833
[13,] 1.136095
[14,] 1.127551
[15,] 1.120000
[16,] 1.113281
[17,] 1.107266
[18,] 1.101852
> plot(sim3$theta)
> 
> sim3.100 <- foreach(i=1:100,.combine=c) %do% {
+     sim.Y.finite(100,3,5,tfun=theta.216,xfun=sim.X,lambda=c(1,2,-3))
+ }
> 
> pnls3.100.1 <- lapply(sim3.100,prep.nls.finite,k=1)
Erreur dans UseMethod("reflow") : 
  pas de méthode pour 'reflow' applicable pour un objet de classe "c('double', 'numeric')"
> 
> sim3.100 <- foreach(i=1:100,.combine=c) %do% {
+     list(sim.Y.finite(100,3,5,tfun=theta.216,xfun=sim.X,lambda=c(1,2,-3)))
+ }
> 
> pnls3.100.1 <- lapply(sim3.100,prep.nls.finite,k=1)
> 
> nls3.100.1 <- lapply(pnls3.100.1,function(l){
+     nls(that~theta.216(index,lambda),data=ll,start=list(lambda=c(1,1,1)))
+ })
Erreur dans nls(that ~ theta.216(index, lambda), data = ll, start = list(lambda = c(1,  : 
  objet 'll' introuvable
> 
> nls3.100.1 <- lapply(pnls3.100.1,function(l){
+     nls(that~theta.216(index,lambda),data=l,start=list(lambda=c(1,1,1)))
+ })
> sapply(nls3.100.1,coef)
             [,1]       [,2]       [,3]      [,4]      [,5]      [,6]      [,7]
lambda1  2.807342 -0.2975058  2.2844731  2.757006  2.649933  2.574415  2.933872
              [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
lambda1   3.292736  3.155881  2.404853  3.814145  1.681560  2.168881  1.626061
            [,15]     [,16]      [,17]     [,18]      [,19]     [,20]     [,21]
lambda1  2.113308  3.341194  0.3285328  1.821054  1.6802482  3.364167  3.752815
            [,22]     [,23]     [,24]     [,25]     [,26]      [,27]
lambda1  2.605169  3.644633  2.613716  3.002841  1.017974   3.314847
              [,28]      [,29]     [,30]      [,31]     [,32]     [,33]
lambda1  -0.2465612   4.272331  2.275681  0.2847683  3.071479  2.799839
            [,34]      [,35]     [,36]     [,37]     [,38]      [,39]
lambda1  1.504225  2.1108115  2.502616  3.149863  1.235721  2.2077015
             [,40]     [,41]      [,42]     [,43]      [,44]     [,45]
lambda1  1.5015429  4.059516  3.0507606  2.978861  0.6688254  1.680002
            [,46]     [,47]     [,48]      [,49]      [,50]     [,51]     [,52]
lambda1  2.879374  1.408860  2.727460  1.3094730  1.7704324  3.285514  1.306380
             [,53]      [,54]     [,55]      [,56]     [,57]     [,58]
lambda1  2.2699844  2.2912758  2.774768  1.9526682  1.521225  2.659223
             [,59]       [,60]      [,61]     [,62]      [,63]     [,64]
lambda1  1.5785228  2.48255259  0.5718911  1.836362   3.534656  2.271403
            [,65]     [,66]     [,67]      [,68]     [,69]      [,70]
lambda1  2.618980  2.041506  3.093451  0.3363113  2.410879   4.438019
             [,71]     [,72]     [,73]     [,74]      [,75]     [,76]     [,77]
lambda1  1.8902459  2.441062  0.658837  3.675728  2.1929628  1.918372  3.039867
             [,78]     [,79]     [,80]     [,81]     [,82]      [,83]     [,84]
lambda1  0.6585282  2.392274  2.919128  2.842958  2.954411  1.8038108  2.965654
            [,85]      [,86]      [,87]     [,88]     [,89]     [,90]
lambda1  3.164056  1.5124079  0.5592688  3.135304  2.896683  1.579585
             [,91]     [,92]      [,93]     [,94]     [,95]      [,96]
lambda1  2.3621079  2.796158  2.2445254  2.403737  3.153235  0.1870515
            [,97]     [,98]     [,99]    [,100]
lambda1  3.808404  3.458006  2.411589  1.902224
 [getOption("max.print") est atteint -- 2 lignes omises ]]
> dim(sapply(nls3.100.1,coef))
[1]   3 100
> aa <- sapply(nls3.100.1,coef)
> aa[1,]
  [1]  2.8073420 -0.2975058  2.2844731  2.7570060  2.6499326  2.5744147
  [7]  2.9338718  3.2927362  3.1558812  2.4048534  3.8141451  1.6815599
 [13]  2.1688814  1.6260607  2.1133084  3.3411939  0.3285328  1.8210544
 [19]  1.6802482  3.3641667  3.7528153  2.6051688  3.6446328  2.6137161
 [25]  3.0028409  1.0179740  3.3148475 -0.2465612  4.2723314  2.2756806
 [31]  0.2847683  3.0714789  2.7998387  1.5042249  2.1108115  2.5026163
 [37]  3.1498634  1.2357209  2.2077015  1.5015429  4.0595163  3.0507606
 [43]  2.9788613  0.6688254  1.6800019  2.8793741  1.4088601  2.7274599
 [49]  1.3094730  1.7704324  3.2855140  1.3063796  2.2699844  2.2912758
 [55]  2.7747684  1.9526682  1.5212249  2.6592234  1.5785228  2.4825526
 [61]  0.5718911  1.8363623  3.5346561  2.2714032  2.6189797  2.0415058
 [67]  3.0934510  0.3363113  2.4108788  4.4380195  1.8902459  2.4410620
 [73]  0.6588370  3.6757280  2.1929628  1.9183715  3.0398667  0.6585282
 [79]  2.3922744  2.9191284  2.8429578  2.9544113  1.8038108  2.9656545
 [85]  3.1640555  1.5124079  0.5592688  3.1353041  2.8966832  1.5795854
 [91]  2.3621079  2.7961581  2.2445254  2.4037366  3.1532345  0.1870515
 [97]  3.8084044  3.4580065  2.4115891  1.9022240
> aa[2,]
  [1]  -4.8625877   9.3478800  -2.1905219  -6.5977009  -4.8899038  -4.1422075
  [7]  -6.0559445 -10.2927055  -8.3259382  -6.2718205  -8.2313527   1.0873896
 [13]  -4.0731430   1.3203297  -4.2513849  -8.0474018   6.3434960  -2.0430347
 [19]  -1.7683752  -7.3595083  -9.6924478  -3.9014131  -7.1232502  -3.6730484
 [25]  -7.7430122   1.3885688 -10.0754817   9.9955215 -12.0669593  -3.6487361
 [31]   7.8599436  -6.4634280  -7.4758121   1.2428934  -0.9309741  -4.9221087
 [37]  -6.2089465   1.3378756  -1.9941454   0.9741672  -9.5769090  -4.4900366
 [43]  -7.1834037   2.9148191   1.1004744  -7.8217230   1.4136433  -5.1997387
 [49]   0.7837986  -1.2805635  -6.9939668   4.1206422   0.8257351  -2.6739401
 [55]  -6.1094092  -0.9512113   3.3984666  -4.6728664  -2.5648518  -1.9535749
 [61]   5.2145315  -1.5300596 -10.1057311  -3.9039722  -4.2205780   2.9942820
 [67]  -8.4984592   4.1930913  -4.1705851 -11.0575740  -1.9595903  -3.5402764
 [73]   6.5064376  -9.4230098  -2.9940057   1.0323852  -6.3231967   3.7957840
 [79]  -4.2294707  -5.9855134  -5.4182558  -5.3651142  -0.9347848  -4.7538484
 [85]  -6.8795999  -1.9394072   6.0025473  -8.6440018  -6.8910272   1.2683922
 [91]  -3.5490903  -6.5799520  -1.2329437  -6.1789972  -8.9818787   4.4341472
 [97]  -8.1338512  -6.2720262  -3.0123563   2.0789068
> aa[3,]
  [1]   1.86675232  -9.59475032  -0.50062010   5.51277372   2.10642052
  [6]   1.86525420   4.14103257   7.38854621   6.35068980   3.60543981
 [11]   4.33935731  -2.61014060   2.20392981  -3.01702910   1.64418082
 [16]   4.43018496  -7.32487517   1.09753079   0.18596954   4.42742866
 [21]   6.25277314   1.43501017   2.78305837   1.55820419   6.94864941
 [26]  -2.10694153   7.53625814 -11.22257464   9.69938904   2.68120842
 [31]  -9.13334881   4.20682394   4.72906904  -2.81606169  -1.18559479
 [36]   3.46628621   2.81656736  -2.47398803   0.32628342  -2.58009008
 [41]   7.01280350   0.87211512   5.37579782  -3.86668993  -3.31920671
 [46]   5.39455548  -3.52605685   2.92577991  -2.40296915  -0.45717051
 [51]   4.63298451  -6.82470544  -4.60051500  -0.34685030   3.45401652
 [56]  -1.33724006  -5.43347011   3.84292735   0.97212755  -0.02444125
 [61]  -7.32841220   0.16393201   8.04762692   1.80462889   2.70679425
 [66]  -5.21037015   4.82828793  -5.38500558   3.05656704   6.25911110
 [71]  -0.10204268   1.25317744  -6.90767888   6.72398562   0.73045390
 [76]  -3.01221406   4.20347457  -3.88745386   2.42692191   3.20944898
 [81]   3.05665066   2.96357923  -0.45974011   1.68798129   2.57300937
 [86]   0.27870349  -6.82087751   7.01889019   4.79293677  -2.75639663
 [91]   0.24749387   3.85211159  -0.98450716   4.30392635   6.67135676
 [96]  -5.90534704   4.83082702   3.45818989   1.06692000  -4.74819207
> hist(aa[3,])
> hist(aa[2,])
> hist(aa[1,])
> summary(nls3.100.1[[1]])

Formula: that ~ theta.216(index, lambda)

Parameters:
        Estimate Std. Error t value Pr(>|t|)
lambda1    2.807      1.227   2.288    0.106
lambda2   -4.863      5.728  -0.849    0.458
lambda3    1.867      4.762   0.392    0.721

Residual standard error: 0.7087 on 3 degrees of freedom

Number of iterations to convergence: 1 
Achieved convergence tolerance: 1.273e-08 

> sapply(pnls3.100.1,function(l)l$that)
         [,1]       [,2]       [,3]       [,4]       [,5]      [,6]      [,7]
X1 -0.2135241 -0.6388087 -0.4088824  1.6668964 -0.1300558 0.2158977 0.9863364
          [,8]      [,9]      [,10]      [,11]     [,12]     [,13]      [,14]
X1  0.37205963  1.121452 -0.2923112 -0.1350445 0.1083986 0.3253778 -0.1732296
        [,15]       [,16]      [,17]     [,18]     [,19]     [,20]      [,21]
X1 -0.5029270 -0.24514809 -0.6916221 0.8443703 0.1237352 0.4287346 0.33793324
        [,22]      [,23]     [,24]     [,25]     [,26]       [,27]     [,28]
X1 0.08640577 -0.6947342 0.4790484 2.2499152 0.2750173  0.79992845 -1.600369
       [,29]      [,30]       [,31]     [,32]      [,33]      [,34]      [,35]
X1 1.9145515  1.2231328 -1.09584258 0.8530263  0.1008517 -0.1152858 -0.0355171
      [,36]      [,37]      [,38]     [,39]      [,40]     [,41]      [,42]
X1 1.021908 -0.2459776 0.03728353 0.4604444 -0.1654907 1.5399538 -0.5996733
       [,43]      [,44]      [,45]      [,46]      [,47]     [,48]      [,49]
X1 1.1928146 -0.3826023 -0.5871910 0.42876972 -0.7711324 0.4670136 -0.3474820
          [,50]     [,51]      [,52]     [,53]      [,54]      [,55]      [,56]
X1 -0.003444798 0.9572784 -1.4251320 -1.592916 -0.7327941 0.09586702 -0.4104687
        [,57]     [,58]        [,59]     [,60]      [,61]     [,62]     [,63]
X1 -0.6231445 1.7781655 -0.005390182 0.4495144 -1.5909580 0.4262666 1.5005897
       [,64]     [,65]      [,66]      [,67]      [,68]    [,69]      [,70]
X1 0.1277330 1.0963446 -0.2720114 -0.5994718 -0.8682305 1.291718 -0.3648736
        [,71]     [,72]       [,73]     [,74]      [,75]      [,76]     [,77]
X1 -0.1669288 0.1197707  0.11637897 0.9967722 -0.1323034 -0.1281955 0.9099961
        [,78]      [,79]       [,80]     [,81]      [,82]      [,83]      [,84]
X1  0.4783156  0.6365032  0.15257625 0.4809867  0.4882474  0.3321348 -0.1322165
        [,85]      [,86]      [,87]       [,88]     [,89]      [,90]      [,91]
X1 -1.1616853 -0.1703646 -0.3638085  1.52643231 0.8015634 0.06942399 -0.9810860
         [,92]       [,93]      [,94]     [,95]      [,96]     [,97]     [,98]
X1  0.10714561 -0.02556766  0.5063733 0.8585134 -1.3434476 0.4825202 0.6535340
         [,99]     [,100]
X1  0.45681871 -0.8228965
 [getOption("max.print") est atteint -- 5 lignes omises ]]
> aa <- sapply(pnls3.100.1,function(l)l$that)
> dim(aa)
[1]   6 100
> apply(aa,1,mean)
       X1        X2        X3        X4        X5        X6 
0.1356855 1.2325300 1.2640188 1.4051358 1.2956972 2.3821176 
> sapply(sim3.100,function(l)l$theta)
          [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8]
 [1,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
          [,9]    [,10]    [,11]    [,12]    [,13]    [,14]    [,15]    [,16]
 [1,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
         [,17]    [,18]    [,19]    [,20]    [,21]    [,22]    [,23]    [,24]
 [1,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
         [,25]    [,26]    [,27]    [,28]    [,29]    [,30]    [,31]    [,32]
 [1,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
         [,33]    [,34]    [,35]    [,36]    [,37]    [,38]    [,39]    [,40]
 [1,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
         [,41]    [,42]    [,43]    [,44]    [,45]    [,46]    [,47]    [,48]
 [1,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
         [,49]    [,50]    [,51]    [,52]    [,53]    [,54]    [,55]    [,56]
 [1,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
         [,57]    [,58]    [,59]    [,60]    [,61]    [,62]    [,63]    [,64]
 [1,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
         [,65]    [,66]    [,67]    [,68]    [,69]    [,70]    [,71]    [,72]
 [1,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
         [,73]    [,74]    [,75]    [,76]    [,77]    [,78]    [,79]    [,80]
 [1,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
         [,81]    [,82]    [,83]    [,84]    [,85]    [,86]    [,87]    [,88]
 [1,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
         [,89]    [,90]    [,91]    [,92]    [,93]    [,94]    [,95]    [,96]
 [1,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
         [,97]    [,98]    [,99]   [,100]
 [1,] 0.000000 0.000000 0.000000 0.000000
 [getOption("max.print") est atteint -- 17 lignes omises ]]
> apply(sapply(sim3.100,function(l)l$theta),1,sd)
 [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
> sim3.100.1[[1]]$theta
Erreur : objet 'sim3.100.1' introuvable
> sim3.100[[1]]$theta
          [,1]
 [1,] 0.000000
 [2,] 1.250000
 [3,] 1.333333
 [4,] 1.312500
 [5,] 1.280000
 [6,] 1.250000
 [7,] 1.224490
 [8,] 1.203125
 [9,] 1.185185
[10,] 1.170000
[11,] 1.157025
[12,] 1.145833
[13,] 1.136095
[14,] 1.127551
[15,] 1.120000
[16,] 1.113281
[17,] 1.107266
[18,] 1.101852
> aa <- sapply(pnls3.100.1,function(l)l$that)
> apply(aa,1,mean)
       X1        X2        X3        X4        X5        X6 
0.1356855 1.2325300 1.2640188 1.4051358 1.2956972 2.3821176 
> apply(aa,1,mean)-sim3.100[[1]]$theta
             [,1]
 [1,]  0.13568554
 [2,] -0.01746995
 [3,] -0.06931452
 [4,]  0.09263584
 [5,]  0.01569724
 [6,]  1.13211759
 [7,] -1.08880425
 [8,]  0.02940505
 [9,]  0.07883363
[10,]  0.23513584
[11,]  0.13867245
[12,]  1.23628425
[13,] -1.00040913
[14,]  0.10497903
[15,]  0.14401881
[16,]  0.29185459
[17,]  0.18843081
[18,]  1.28026574
> aa
         [,1]       [,2]       [,3]       [,4]       [,5]      [,6]      [,7]
X1 -0.2135241 -0.6388087 -0.4088824  1.6668964 -0.1300558 0.2158977 0.9863364
          [,8]      [,9]      [,10]      [,11]     [,12]     [,13]      [,14]
X1  0.37205963  1.121452 -0.2923112 -0.1350445 0.1083986 0.3253778 -0.1732296
        [,15]       [,16]      [,17]     [,18]     [,19]     [,20]      [,21]
X1 -0.5029270 -0.24514809 -0.6916221 0.8443703 0.1237352 0.4287346 0.33793324
        [,22]      [,23]     [,24]     [,25]     [,26]       [,27]     [,28]
X1 0.08640577 -0.6947342 0.4790484 2.2499152 0.2750173  0.79992845 -1.600369
       [,29]      [,30]       [,31]     [,32]      [,33]      [,34]      [,35]
X1 1.9145515  1.2231328 -1.09584258 0.8530263  0.1008517 -0.1152858 -0.0355171
      [,36]      [,37]      [,38]     [,39]      [,40]     [,41]      [,42]
X1 1.021908 -0.2459776 0.03728353 0.4604444 -0.1654907 1.5399538 -0.5996733
       [,43]      [,44]      [,45]      [,46]      [,47]     [,48]      [,49]
X1 1.1928146 -0.3826023 -0.5871910 0.42876972 -0.7711324 0.4670136 -0.3474820
          [,50]     [,51]      [,52]     [,53]      [,54]      [,55]      [,56]
X1 -0.003444798 0.9572784 -1.4251320 -1.592916 -0.7327941 0.09586702 -0.4104687
        [,57]     [,58]        [,59]     [,60]      [,61]     [,62]     [,63]
X1 -0.6231445 1.7781655 -0.005390182 0.4495144 -1.5909580 0.4262666 1.5005897
       [,64]     [,65]      [,66]      [,67]      [,68]    [,69]      [,70]
X1 0.1277330 1.0963446 -0.2720114 -0.5994718 -0.8682305 1.291718 -0.3648736
        [,71]     [,72]       [,73]     [,74]      [,75]      [,76]     [,77]
X1 -0.1669288 0.1197707  0.11637897 0.9967722 -0.1323034 -0.1281955 0.9099961
        [,78]      [,79]       [,80]     [,81]      [,82]      [,83]      [,84]
X1  0.4783156  0.6365032  0.15257625 0.4809867  0.4882474  0.3321348 -0.1322165
        [,85]      [,86]      [,87]       [,88]     [,89]      [,90]      [,91]
X1 -1.1616853 -0.1703646 -0.3638085  1.52643231 0.8015634 0.06942399 -0.9810860
         [,92]       [,93]      [,94]     [,95]      [,96]     [,97]     [,98]
X1  0.10714561 -0.02556766  0.5063733 0.8585134 -1.3434476 0.4825202 0.6535340
         [,99]     [,100]
X1  0.45681871 -0.8228965
 [getOption("max.print") est atteint -- 5 lignes omises ]]
> hist(aa[6,])
> sd(aa[6,])
[1] 0.8931407
> mean(aa[6,])
[1] 2.382118
> median(aa[6,])
[1] 2.358554
> bb <- lapply(sim3.100,prep.nls.finite,k=0)
> cc <- sapply(bb,function(l)l$that)
> apply(cc,1,mean)
       X1        X2        X3 
0.1486333 1.2364522 2.5700803 
> bb <- lapply(sim3.100,prep.nls.finite,k=5)
> cc <- sapply(bb,function(l)l$that)
> apply(cc,1,mean)
           X1            X2            X3            X4            X5 
-0.0004105123  1.2490140069  1.3294415656  1.3215652846  1.2798333793 
           X6            X7            X8            X9           X10 
 1.2452970770  1.2395502435  1.1799299368  1.1837817933  1.1909850155 
          X11           X12           X13           X14           X15 
 1.1398107886  1.1669273537  1.1266831388  1.1228182403  1.1408204693 
          X16           X17           X18 
 1.1212435234  1.0970365025  1.1070235231 
> bb <- lapply(sim3.100,prep.nls.finite,k=6)
> cc <- sapply(bb,function(l)l$that)
> apply(cc,1,mean)
          X1           X2           X3           X4           X5           X6 
0.0062574115 1.2436190713 1.3356591195 1.3213514163 1.2767852239 1.2450886533 
          X7           X8           X9          X10          X11          X12 
1.2393694271 1.1807219802 1.1810647639 1.1826192538 1.1453966333 1.1651267746 
         X13          X14          X15          X16          X17          X18 
1.1286610493 1.1230123331 1.1392502630 1.1190851366 1.1003419606 1.1020958219 
         X19          X20          X21 
0.0001132790 0.0083657905 0.0083327360 
> 
> kk <- lapply(sim3.100,gen.k,kmax=17)
> modl3.100 <- kk
> length(kk)
[1] 100
> length(kk[[1]])
[1] 18
> kk[[1]]
[[1]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
      X1        X2        X3  
-0.04051   1.16987   2.47549  


[[2]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
     X1       X2       X3       X4       X5       X6  
-0.2135   0.9908   1.5345   1.4099   1.0978   2.8953  


[[3]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
     X1       X2       X3       X4       X5       X6       X7       X8  
-0.5013   1.0038   0.6088   1.6258   0.9808   1.8391   1.6397   1.3524  
     X9  
 2.6431  


[[4]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
     X1       X2       X3       X4       X5       X6       X7       X8  
-0.0959   0.8870   0.7455   1.2861   1.0298   1.0034   1.6223   1.2342  
     X9      X10      X11      X12  
 1.7383   1.4228   1.2429   2.4379  


[[5]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
     X1       X2       X3       X4       X5       X6       X7       X8  
-0.2654   1.1145   0.9912   1.4977   0.9169   1.1464   1.3377   1.2644  
     X9      X10      X11      X12      X13      X14      X15  
 1.0654   1.4163   1.1542   1.7226   1.0212   1.0528   1.9549  


[[6]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
     X1       X2       X3       X4       X5       X6       X7       X8  
-0.1815   1.2599   1.2840   1.2580   1.0732   1.3496   1.2504   1.0869  
     X9      X10      X11      X12      X13      X14      X15      X16  
 1.1410   1.2169   1.0778   1.1407   1.1992   1.0558   1.1235   1.1527  
    X17      X18  
 1.2978   1.2659  


[[7]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
     X1       X2       X3       X4       X5       X6       X7       X8  
-0.1765   1.2512   1.2727   1.2308   1.0823   1.3383   1.2882   1.0486  
     X9      X10      X11      X12      X13      X14      X15      X16  
 1.1324   1.1938   1.0800   1.1383   1.1746   1.0584   1.1036   1.2065  
    X17      X18      X19      X20      X21  
 1.3127   1.1965   0.1102   0.1296  -0.2002  


[[8]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
      X1        X2        X3        X4        X5        X6        X7        X8  
-0.19059   1.23342   1.28116   1.21683   1.10368   1.31606   1.34155   1.05364  
      X9       X10       X11       X12       X13       X14       X15       X16  
 1.12040   1.16147   1.12019   1.13779   1.19590   1.04498   1.10827   1.22838  
     X17       X18       X19       X20       X21       X22       X23       X24  
 1.31738   1.21143   0.03996   0.12193  -0.13024  -0.06567  -0.20025   0.18360  


[[9]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
      X1        X2        X3        X4        X5        X6        X7        X8  
-0.22760   1.24690   1.28921   1.23496   1.10756   1.30296   1.33665   1.06629  
      X9       X10       X11       X12       X13       X14       X15       X16  
 1.11890   1.14689   1.11326   1.11618   1.22418   1.02304   1.10113   1.23007  
     X17       X18       X19       X20       X21       X22       X23       X24  
 1.33010   1.19016   0.05764   0.11382  -0.09597  -0.06783  -0.19053   0.22774  
     X25       X26       X27  
-0.07550  -0.01405  -0.08837  


[[10]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
       X1         X2         X3         X4         X5         X6         X7  
-0.153713   1.253117   1.270360   1.175415   1.157070   1.346095   1.345685  
       X8         X9        X10        X11        X12        X13        X14  
 1.094094   1.120092   1.136609   1.101456   1.196306   1.091597   0.992584  
      X15        X16        X17        X18        X19        X20        X21  
 1.104476   1.298743   1.237293   1.221688   0.044791   0.170803  -0.134242  
      X22        X23        X24        X25        X26        X27        X28  
-0.054549  -0.215860   0.256234   0.030637  -0.004709  -0.088087  -0.069855  
      X29        X30  
 0.166688  -0.304760  


[[11]]
  ^C ^C
> 
> k3.100 <- lapply(modl3.100,function(l)which.min(sapply(l,KZ.k))-1)
> k3.100
[[1]]
[1] 5

[[2]]
[1] 5

[[3]]
[1] 11

[[4]]
[1] 5

[[5]]
[1] 5

[[6]]
[1] 5

[[7]]
[1] 5

[[8]]
[1] 5

[[9]]
[1] 5

[[10]]
[1] 5

[[11]]
[1] 5

[[12]]
[1] 5

[[13]]
[1] 5

[[14]]
[1] 5

[[15]]
[1] 5

[[16]]
[1] 5

[[17]]
[1] 5

[[18]]
[1] 5

[[19]]
[1] 5

[[20]]
[1] 5

[[21]]
[1] 5

[[22]]
[1] 5

[[23]]
[1] 5

[[24]]
[1] 5

[[25]]
[1] 6

[[26]]
[1] 5

[[27]]
[1] 5

[[28]]
[1] 5

[[29]]
[1] 5

[[30]]
[1] 5

[[31]]
[1] 6

[[32]]
[1] 5

[[33]]
[1] 5

[[34]]
[1] 5

[[35]]
[1] 5

[[36]]
[1] 5

[[37]]
[1] 5

[[38]]
[1] 5

[[39]]
[1] 5

[[40]]
[1] 5

[[41]]
[1] 5

[[42]]
[1] 5

[[43]]
[1] 5

[[44]]
[1] 5

[[45]]
[1] 5

[[46]]
[1] 5

[[47]]
[1] 6

[[48]]
[1] 5

[[49]]
[1] 5

[[50]]
[1] 5

[[51]]
[1] 6

[[52]]
[1] 5

[[53]]
[1] 5

[[54]]
[1] 5

[[55]]
[1] 6

[[56]]
[1] 5

[[57]]
[1] 5

[[58]]
[1] 5

[[59]]
[1] 5

[[60]]
[1] 5

[[61]]
[1] 5

[[62]]
[1] 6

[[63]]
[1] 5

[[64]]
[1] 5

[[65]]
[1] 5

[[66]]
[1] 5

[[67]]
[1] 5

[[68]]
[1] 5

[[69]]
[1] 5

[[70]]
[1] 5

[[71]]
[1] 6

[[72]]
[1] 5

[[73]]
[1] 5

[[74]]
[1] 5

[[75]]
[1] 5

[[76]]
[1] 7

[[77]]
[1] 7

[[78]]
[1] 5

[[79]]
[1] 5

[[80]]
[1] 5

[[81]]
[1] 8

[[82]]
[1] 9

[[83]]
[1] 5

[[84]]
[1] 5

[[85]]
[1] 5

[[86]]
[1] 5

[[87]]
[1] 5

[[88]]
[1] 5

[[89]]
[1] 5

[[90]]
[1] 10

[[91]]
[1] 5

[[92]]
[1] 5

[[93]]
[1] 5

[[94]]
[1] 5

[[95]]
[1] 5

[[96]]
[1] 5

[[97]]
[1] 5

[[98]]
[1] 5

[[99]]
[1] 5

[[100]]
[1] 5

> sapply(k3.100,function(l)l[[1]])
  [1]  5  5 11  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  6
 [26]  5  5  5  5  5  6  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  6  5  5  5
 [51]  6  5  5  5  6  5  5  5  5  5  5  6  5  5  5  5  5  5  5  5  6  5  5  5  5
 [76]  7  7  5  5  5  8  9  5  5  5  5  5  5  5 10  5  5  5  5  5  5  5  5  5  5
> table(sapply(k3.100,function(l)l[[1]]))

 5  6  7  8  9 10 11 
87  7  2  1  1  1  1 
>  lapply(modl3.100,function(l)which.min(sapply(l,BIC))-1)
Erreur dans match.fun(FUN) : objet 'BIC' introuvable
> library(stats4)
> vv <- lapply(modl3.100,function(l)which.min(sapply(l,BIC))-1)
> vv <- sapply(modl3.100,function(l)which.min(sapply(l,BIC))-1)
> vv
  [1]  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5 17  5  5  5  5  5  5  6
 [26]  5  5  5  5  5  6  5  5  5  5  5  5  5  5  5  5  5  5  6  5  5  6  5  5  5
 [51]  6  5  5  5  6  5  5  5  5  5  5  6  5  5  5  5  5  5  5  5  5  5  5  5  5
 [76]  5  6  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5
> table(vv)
vv
 5  6 17 
91  8  1 
> theta.216(1:18,lambda=c(1,2,-3))
          [,1]
 [1,] 1.250000
 [2,] 1.333333
 [3,] 1.312500
 [4,] 1.280000
 [5,] 1.250000
 [6,] 1.224490
 [7,] 1.203125
 [8,] 1.185185
 [9,] 1.170000
[10,] 1.157025
[11,] 1.145833
[12,] 1.136095
[13,] 1.127551
[14,] 1.120000
[15,] 1.113281
[16,] 1.107266
[17,] 1.101852
[18,] 1.096953
> theta.216(1:18-1,lambda=c(1,2,-3))
          [,1]
 [1,] 0.000000
 [2,] 1.250000
 [3,] 1.333333
 [4,] 1.312500
 [5,] 1.280000
 [6,] 1.250000
 [7,] 1.224490
 [8,] 1.203125
 [9,] 1.185185
[10,] 1.170000
[11,] 1.157025
[12,] 1.145833
[13,] 1.136095
[14,] 1.127551
[15,] 1.120000
[16,] 1.113281
[17,] 1.107266
[18,] 1.101852
> theta.216(1:18-1,lambda=c(-1,2,-3))
            [,1]
 [1,] -2.0000000
 [2,] -0.7500000
 [3,] -0.6666667
 [4,] -0.6875000
 [5,] -0.7200000
 [6,] -0.7500000
 [7,] -0.7755102
 [8,] -0.7968750
 [9,] -0.8148148
[10,] -0.8300000
[11,] -0.8429752
[12,] -0.8541667
[13,] -0.8639053
[14,] -0.8724490
[15,] -0.8800000
[16,] -0.8867188
[17,] -0.8927336
[18,] -0.8981481
> theta.216(1:18-1,lambda=c(-0.5,0.5,-0.5))
            [,1]
 [1,] -0.5000000
 [2,] -0.3750000
 [3,] -0.3888889
 [4,] -0.4062500
 [5,] -0.4200000
 [6,] -0.4305556
 [7,] -0.4387755
 [8,] -0.4453125
 [9,] -0.4506173
[10,] -0.4550000
[11,] -0.4586777
[12,] -0.4618056
[13,] -0.4644970
[14,] -0.4668367
[15,] -0.4688889
[16,] -0.4707031
[17,] -0.4723183
[18,] -0.4737654
> theta.216(1:18-1,lambda=c(-0.5,10,-0.5))
            [,1]
 [1,] 9.00000000
 [2,] 4.37500000
 [3,] 2.77777778
 [4,] 1.96875000
 [5,] 1.48000000
 [6,] 1.15277778
 [7,] 0.91836735
 [8,] 0.74218750
 [9,] 0.60493827
[10,] 0.49500000
[11,] 0.40495868
[12,] 0.32986111
[13,] 0.26627219
[14,] 0.21173469
[15,] 0.16444444
[16,] 0.12304688
[17,] 0.08650519
[18,] 0.05401235
> theta.216(1:18-1,lambda=c(-0.5,3,-0.5))
             [,1]
 [1,]  2.00000000
 [2,]  0.87500000
 [3,]  0.44444444
 [4,]  0.21875000
 [5,]  0.08000000
 [6,] -0.01388889
 [7,] -0.08163265
 [8,] -0.13281250
 [9,] -0.17283951
[10,] -0.20500000
[11,] -0.23140496
[12,] -0.25347222
[13,] -0.27218935
[14,] -0.28826531
[15,] -0.30222222
[16,] -0.31445312
[17,] -0.32525952
[18,] -0.33487654
> theta.216(1:18-1,lambda=c(-0.5,3,-4))
             [,1]
 [1,] -1.50000000
 [2,]  0.00000000
 [3,]  0.05555556
 [4,]  0.00000000
 [5,] -0.06000000
 [6,] -0.11111111
 [7,] -0.15306122
 [8,] -0.18750000
 [9,] -0.21604938
[10,] -0.24000000
[11,] -0.26033058
[12,] -0.27777778
[13,] -0.29289941
[14,] -0.30612245
[15,] -0.31777778
[16,] -0.32812500
[17,] -0.33737024
[18,] -0.34567901
> theta.216(1:18-1,lambda=c(-0.5,3,-1))
             [,1]
 [1,]  1.50000000
 [2,]  0.75000000
 [3,]  0.38888889
 [4,]  0.18750000
 [5,]  0.06000000
 [6,] -0.02777778
 [7,] -0.09183673
 [8,] -0.14062500
 [9,] -0.17901235
[10,] -0.21000000
[11,] -0.23553719
[12,] -0.25694444
[13,] -0.27514793
[14,] -0.29081633
[15,] -0.30444444
[16,] -0.31640625
[17,] -0.32698962
[18,] -0.33641975
> theta.216(1:18-1,lambda=c(-0.5,3,-2))
             [,1]
 [1,]  0.50000000
 [2,]  0.50000000
 [3,]  0.27777778
 [4,]  0.12500000
 [5,]  0.02000000
 [6,] -0.05555556
 [7,] -0.11224490
 [8,] -0.15625000
 [9,] -0.19135802
[10,] -0.22000000
[11,] -0.24380165
[12,] -0.26388889
[13,] -0.28106509
[14,] -0.29591837
[15,] -0.30888889
[16,] -0.32031250
[17,] -0.33044983
[18,] -0.33950617
> plot(theta.216(1:18-1,lambda=c(-0.5,3,-2)))
> plot(theta.214(1:18-1,lambda=c(-0.5,3)))
> theta.214(1:18-1,lambda=c(-0.5,3))
      [,1]
 [1,]    0
 [2,]    0
 [3,]    0
 [4,]    0
 [5,]    0
 [6,]    0
 [7,]    0
 [8,]    0
 [9,]    0
[10,]    0
[11,]    0
[12,]    0
[13,]    0
[14,]    0
[15,]    0
[16,]    0
[17,]  NaN
[18,]  NaN
> theta.214(1:18-1,lambda=c(-0.5,3))
      [,1]
 [1,]    0
 [2,]    0
 [3,]    0
 [4,]    0
 [5,]    0
 [6,]    0
 [7,]    0
 [8,]    0
 [9,]    0
[10,]    0
[11,]    0
[12,]    0
[13,]    0
[14,]    0
[15,]    0
[16,]  NaN
[17,]  NaN
[18,]  NaN
> theta.214(1:18-1,lambda=c(-0.5,0.3))
              [,1]
 [1,] 4.058337e-39
 [2,] 6.054327e-39
 [3,] 1.645737e-38
 [4,] 8.151387e-38
 [5,] 7.356638e-37
 [6,] 1.209773e-35
 [7,] 3.624976e-34
 [8,] 1.979170e-32
 [9,] 1.968964e-30
[10,] 3.569185e-28
[11,] 1.178900e-25
[12,] 7.095152e-23
[13,] 7.780779e-20
[14,] 1.554752e-16
[15,] 5.660775e-13
[16,] 3.755496e-09
[17,] 4.539787e-05
[18,] 9.999546e-01
> theta.214(1:18-1,lambda=c(-0.5,0.3))
            [,1]
 [1,] 0.04875100
 [2,] 0.04998513
 [3,] 0.05211185
 [4,] 0.05354249
 [5,] 0.05452862
 [6,] 0.05524212
 [7,] 0.05578023
 [8,] 0.05619980
 [9,] 0.05653578
[10,] 0.05681075
[11,] 0.05703987
[12,] 0.05723367
[13,] 0.05739971
[14,] 0.05754354
[15,] 0.05766934
[16,] 0.05778028
[17,] 0.05787884
[18,] 0.05796699
> theta.214(1:18-1,lambda=c(-0.5,1))
            [,1]
 [1,] 0.09156243
 [2,] 0.05553542
 [3,] 0.05253426
 [4,] 0.05217070
 [5,] 0.05230129
 [6,] 0.05253426
 [7,] 0.05277305
 [8,] 0.05299227
 [9,] 0.05318685
[10,] 0.05335785
[11,] 0.05350799
[12,] 0.05364020
[13,] 0.05375715
[14,] 0.05386112
[15,] 0.05395402
[16,] 0.05403745
[17,] 0.05411273
[18,] 0.05418097
> theta.214(1:18-1,lambda=c(-0.5,5))
             [,1]
 [1,] 0.821659544
 [2,] 0.024811968
 [3,] 0.013466633
 [4,] 0.011010244
 [5,] 0.010087794
 [6,] 0.009649264
 [7,] 0.009411557
 [8,] 0.009271555
 [9,] 0.009184332
[10,] 0.009127813
[11,] 0.009090173
[12,] 0.009064645
[13,] 0.009047155
[14,] 0.009035146
[15,] 0.009026954
[16,] 0.009021471
[17,] 0.009017935
[18,] 0.009015817
> plot(theta.214(1:18-1,lambda=c(-0.5,5)))
> plot(theta.214(1:18-1,lambda=c(-0.5,3)))
> plot(theta.214(1:18-1,lambda=c(-0.5,1)))
> theta.214(1:18-1,lambda=c(-0.5,1))
            [,1]
 [1,] 0.09156243
 [2,] 0.05553542
 [3,] 0.05253426
 [4,] 0.05217070
 [5,] 0.05230129
 [6,] 0.05253426
 [7,] 0.05277305
 [8,] 0.05299227
 [9,] 0.05318685
[10,] 0.05335785
[11,] 0.05350799
[12,] 0.05364020
[13,] 0.05375715
[14,] 0.05386112
[15,] 0.05395402
[16,] 0.05403745
[17,] 0.05411273
[18,] 0.05418097
> 
> summary(nls(that~theta.214(index,lambda),data=bb,start=list(lambda=c(1,1))))
Erreur dans nls(that ~ theta.214(index, lambda), data = bb, start = list(lambda = c(1,  : 
  des paramètres n'ont pas de valeurs initiales dans 'data' : that, index
Erreur dans summary(nls(that ~ theta.214(index, lambda), data = bb, start = list(lambda = c(1,  : 
  erreur lors de l'évaluation de l'argument 'object' lors de la sélection d'une méthode pour la fonction 'summary'
> 
> modl <- gen.k(sim3,17)
> k <- which.min(sapply(modl,KZ.k))-1
> bb <- prep.nls.finite(sim3,5)
> 
> summary(nls(that~theta.216(index,lambda),data=bb,start=list(lambda=c(1,1,1))))

Formula: that ~ theta.216(index, lambda)

Parameters:
        Estimate Std. Error t value Pr(>|t|)    
lambda1  0.97809    0.04659  20.995 1.56e-12 ***
lambda2  2.14968    0.36224   5.934 2.74e-05 ***
lambda3 -3.11303    0.35654  -8.731 2.89e-07 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 0.09437 on 15 degrees of freedom

Number of iterations to convergence: 1 
Achieved convergence tolerance: 7.506e-08 

> 
> summary(nls(that~theta.214(index,lambda),data=bb,start=list(lambda=c(1,1))))

Formula: that ~ theta.214(index, lambda)

Parameters:
        Estimate Std. Error t value Pr(>|t|)
lambda1    44.24     223.28   0.198    0.845
lambda2   -72.35     443.82  -0.163    0.873

Residual standard error: 1.163 on 16 degrees of freedom

Number of iterations to convergence: 8 
Achieved convergence tolerance: 3.174e-06 

> theta.214(bb$index,c(44.24,-72.35))
              [,1]
 [1,] 2.376946e-16
 [2,] 2.164361e-02
 [3,] 3.141869e-01
 [4,] 2.651605e-01
 [5,] 1.478518e-01
 [6,] 8.192642e-02
 [7,] 4.870004e-02
 [8,] 3.124132e-02
 [9,] 2.142495e-02
[10,] 1.552902e-02
[11,] 1.177637e-02
[12,] 9.266878e-03
[13,] 7.517103e-03
[14,] 6.253102e-03
[15,] 5.312105e-03
[16,] 4.593275e-03
[17,] 4.031818e-03
[18,] 3.584739e-03
> sim3$theta
          [,1]
 [1,] 0.000000
 [2,] 1.250000
 [3,] 1.333333
 [4,] 1.312500
 [5,] 1.280000
 [6,] 1.250000
 [7,] 1.224490
 [8,] 1.203125
 [9,] 1.185185
[10,] 1.170000
[11,] 1.157025
[12,] 1.145833
[13,] 1.136095
[14,] 1.127551
[15,] 1.120000
[16,] 1.113281
[17,] 1.107266
[18,] 1.101852
> sim3$theta- theta.214(bb$index,c(44.24,-72.35))
               [,1]
 [1,] -2.376946e-16
 [2,]  1.228356e+00
 [3,]  1.019146e+00
 [4,]  1.047339e+00
 [5,]  1.132148e+00
 [6,]  1.168074e+00
 [7,]  1.175790e+00
 [8,]  1.171884e+00
 [9,]  1.163760e+00
[10,]  1.154471e+00
[11,]  1.145248e+00
[12,]  1.136566e+00
[13,]  1.128578e+00
[14,]  1.121298e+00
[15,]  1.114688e+00
[16,]  1.108688e+00
[17,]  1.103235e+00
[18,]  1.098267e+00
> 
> nls3.100.214 <- lapply(pnls3.100.1,function(l){
+     nls(that~theta.214(index,lambda),data=l,start=list(lambda=c(1,1)))
+ })
Erreur dans numericDeriv(form[[3L]], names(ind), env) : 
  Valeur manquante ou infinie obtenue au cours du calcul du modèle
> dd <- pnls3.100.1[[1]]
> dd
$that
        X1         X2         X3         X4         X5         X6 
-0.2135241  0.9908055  1.5344654  1.4099285  1.0978224  2.8952681 

$index
[1] 0 1 2 3 4 5

> summary(nls(that~theta.214(index,lambda),data=bb,start=list(lambda=c(1,1))))

Formula: that ~ theta.214(index, lambda)

Parameters:
        Estimate Std. Error t value Pr(>|t|)
lambda1    44.24     223.28   0.198    0.845
lambda2   -72.35     443.82  -0.163    0.873

Residual standard error: 1.163 on 16 degrees of freedom

Number of iterations to convergence: 8 
Achieved convergence tolerance: 3.174e-06 

> summary(nls(that~theta.214(index,lambda),data=dd,start=list(lambda=c(1,1))))
Erreur dans numericDeriv(form[[3L]], names(ind), env) : 
  Valeur manquante ou infinie obtenue au cours du calcul du modèle
Erreur dans summary(nls(that ~ theta.214(index, lambda), data = dd, start = list(lambda = c(1,  : 
  erreur lors de l'évaluation de l'argument 'object' lors de la sélection d'une méthode pour la fonction 'summary'
> theta.214(dd$index,c(1,1))
           [,1]
[1,] 0.49529807
[2,] 0.14190527
[3,] 0.10454360
[4,] 0.09162093
[5,] 0.08521349
[6,] 0.08141864
> nls(that~theta.214(index,lambda),data=dd,start=list(lambda=c(1,1)))
Erreur dans numericDeriv(form[[3L]], names(ind), env) : 
  Valeur manquante ou infinie obtenue au cours du calcul du modèle
> nls(that~theta.214(index,lambda),data=dd,start=list(lambda=c(0,0)))
Erreur dans nls(that ~ theta.214(index, lambda), data = dd, start = list(lambda = c(0,  : 
  gradient singulier
> nls(that~theta.214(index,lambda),data=dd,start=list(lambda=c(0,1)))
Erreur dans nls(that ~ theta.214(index, lambda), data = dd, start = list(lambda = c(0,  : 
  gradient singulier
> nls(that~theta.214(index,lambda),data=dd,start=list(lambda=c(1,0)))
Erreur dans nls(that ~ theta.214(index, lambda), data = dd, start = list(lambda = c(1,  : 
  gradient singulier
> nls(that~theta.214(index,lambda),data=dd,start=list(lambda=c(1,1)))
Erreur dans numericDeriv(form[[3L]], names(ind), env) : 
  Valeur manquante ou infinie obtenue au cours du calcul du modèle
> ?nls
> nls(that~theta.214(index,lambda),data=dd,start=list(lambda=c(1,1)),trace=TRUE)
13.94880 :  1 1 
10.50636 :  -64.02170  43.07775 
10.17523 :  -152.04660  -16.59072 
Erreur dans numericDeriv(form[[3L]], names(ind), env) : 
  Valeur manquante ou infinie obtenue au cours du calcul du modèle
> theta.214(dd$index,c(-152,-16))
             [,1]
[1,] 1.703835e-62
[2,] 2.814115e-24
[3,] 2.609562e-12
[4,] 1.800593e-06
[5,] 5.157030e-03
[6,] 9.948412e-01
>  vv <- lapply(modl3.100,function(l)which.min(sapply(l,AIC))-1)
> table(vv)
, , vv.3 = 17, vv.4 = 17, vv.5 = 5, vv.6 = 15, vv.7 = 17, vv.8 = 17, vv.9 = 17, vv.10 = 16, vv.11 = 17, vv.12 = 17, vv.13 = 17, vv.14 = 17, vv.15 = 17, vv.16 = 16, vv.17 = 17, vv.18 = 17, vv.19 = 16, vv.20 = 17, vv.21 = 16, vv.22 = 12, vv.23 = 17, vv.24 = 17, vv.25 = 17, vv.26 = 17, vv.27 = 17, vv.28 = 17, vv.29 = 17, vv.30 = 16, vv.31 = 14, vv.32 = 17, vv.33 = 13, vv.34 = 17, vv.35 = 17, vv.36 = 17, vv.37 = 6, vv.38 = 16, vv.39 = 17, vv.40 = 17, vv.41 = 9, vv.42 = 17, vv.43 = 16, vv.44 = 17, vv.45 = 17, vv.46 = 17, vv.47 = 13, vv.48 = 17, vv.49 = 17, vv.50 = 13, vv.51 = 15, vv.52 = 17, vv.53 = 15, vv.54 = 17, vv.55 = 17, vv.56 = 17, vv.57 = 17, vv.58 = 17, vv.59 = 16, vv.60 = 17, vv.61 = 17, vv.62 = 17, vv.63 = 17, vv.64 = 5, vv.65 = 17, vv.66 = 13, vv.67 = 17, vv.68 = 17, vv.69 = 15, vv.70 = 14, vv.71 = 17, vv.72 = 17, vv.73 = 17, vv.74 = 16, vv.75 = 16, vv.76 = 16, vv.77 = 15, vv.78 = 16, vv.79 = 16, vv.80 = 17, vv.81 = 10, vv.82 = 17, vv.83 = 17, vv.84 = 15, vv.85 = 15, vv.86 = 15, vv.87 = 17, vv.88 = 17, vv.89 = 17, vv.90 = 17, vv.91 = 17, vv.92 = 17, vv.93 = 17, vv.94 = 11, vv.95 = 17, vv.96 = 17, vv.97 = 17, vv.98 = 17, vv.99 = 17, vv.100 = 17

    vv.2
vv.1 17
  17  1

>  vv <- sapply(modl3.100,function(l)which.min(sapply(l,AIC))-1)
> table(vv)
vv
 5  6  9 10 11 12 13 14 15 16 17 
 2  1  1  1  1  1  4  2  8 13 66 
> sum(table(vv))
[1] 100
> table(k3.100)
, , k3.100.3 = 11, k3.100.4 = 5, k3.100.5 = 5, k3.100.6 = 5, k3.100.7 = 5, k3.100.8 = 5, k3.100.9 = 5, k3.100.10 = 5, k3.100.11 = 5, k3.100.12 = 5, k3.100.13 = 5, k3.100.14 = 5, k3.100.15 = 5, k3.100.16 = 5, k3.100.17 = 5, k3.100.18 = 5, k3.100.19 = 5, k3.100.20 = 5, k3.100.21 = 5, k3.100.22 = 5, k3.100.23 = 5, k3.100.24 = 5, k3.100.25 = 6, k3.100.26 = 5, k3.100.27 = 5, k3.100.28 = 5, k3.100.29 = 5, k3.100.30 = 5, k3.100.31 = 6, k3.100.32 = 5, k3.100.33 = 5, k3.100.34 = 5, k3.100.35 = 5, k3.100.36 = 5, k3.100.37 = 5, k3.100.38 = 5, k3.100.39 = 5, k3.100.40 = 5, k3.100.41 = 5, k3.100.42 = 5, k3.100.43 = 5, k3.100.44 = 5, k3.100.45 = 5, k3.100.46 = 5, k3.100.47 = 6, k3.100.48 = 5, k3.100.49 = 5, k3.100.50 = 5, k3.100.51 = 6, k3.100.52 = 5, k3.100.53 = 5, k3.100.54 = 5, k3.100.55 = 6, k3.100.56 = 5, k3.100.57 = 5, k3.100.58 = 5, k3.100.59 = 5, k3.100.60 = 5, k3.100.61 = 5, k3.100.62 = 6, k3.100.63 = 5, k3.100.64 = 5, k3.100.65 = 5, k3.100.66 = 5, k3.100.67 = 5, k3.100.68 = 5, k3.100.69 = 5, k3.100.70 = 5, k3.100.71 = 6, k3.100.72 = 5, k3.100.73 = 5, k3.100.74 = 5, k3.100.75 = 5, k3.100.76 = 7, k3.100.77 = 7, k3.100.78 = 5, k3.100.79 = 5, k3.100.80 = 5, k3.100.81 = 8, k3.100.82 = 9, k3.100.83 = 5, k3.100.84 = 5, k3.100.85 = 5, k3.100.86 = 5, k3.100.87 = 5, k3.100.88 = 5, k3.100.89 = 5, k3.100.90 = 10, k3.100.91 = 5, k3.100.92 = 5, k3.100.93 = 5, k3.100.94 = 5, k3.100.95 = 5, k3.100.96 = 5, k3.100.97 = 5, k3.100.98 = 5, k3.100.99 = 5, k3.100.100 = 5

        k3.100.2
k3.100.1 5
       5 1

> table(lapply(k3.100,function(l)l[1]))
, , .3 = 11, .4 = 5, .5 = 5, .6 = 5, .7 = 5, .8 = 5, .9 = 5, .10 = 5, .11 = 5, .12 = 5, .13 = 5, .14 = 5, .15 = 5, .16 = 5, .17 = 5, .18 = 5, .19 = 5, .20 = 5, .21 = 5, .22 = 5, .23 = 5, .24 = 5, .25 = 6, .26 = 5, .27 = 5, .28 = 5, .29 = 5, .30 = 5, .31 = 6, .32 = 5, .33 = 5, .34 = 5, .35 = 5, .36 = 5, .37 = 5, .38 = 5, .39 = 5, .40 = 5, .41 = 5, .42 = 5, .43 = 5, .44 = 5, .45 = 5, .46 = 5, .47 = 6, .48 = 5, .49 = 5, .50 = 5, .51 = 6, .52 = 5, .53 = 5, .54 = 5, .55 = 6, .56 = 5, .57 = 5, .58 = 5, .59 = 5, .60 = 5, .61 = 5, .62 = 6, .63 = 5, .64 = 5, .65 = 5, .66 = 5, .67 = 5, .68 = 5, .69 = 5, .70 = 5, .71 = 6, .72 = 5, .73 = 5, .74 = 5, .75 = 5, .76 = 7, .77 = 7, .78 = 5, .79 = 5, .80 = 5, .81 = 8, .82 = 9, .83 = 5, .84 = 5, .85 = 5, .86 = 5, .87 = 5, .88 = 5, .89 = 5, .90 = 10, .91 = 5, .92 = 5, .93 = 5, .94 = 5, .95 = 5, .96 = 5, .97 = 5, .98 = 5, .99 = 5, .100 = 5

   .2
.1  5
  5 1

> k3.100
[[1]]
[1] 5

[[2]]
[1] 5

[[3]]
[1] 11

[[4]]
[1] 5

[[5]]
[1] 5

[[6]]
[1] 5

[[7]]
[1] 5

[[8]]
[1] 5

[[9]]
[1] 5

[[10]]
[1] 5

[[11]]
[1] 5

[[12]]
[1] 5

[[13]]
[1] 5

[[14]]
[1] 5

[[15]]
[1] 5

[[16]]
[1] 5

[[17]]
[1] 5

[[18]]
[1] 5

[[19]]
[1] 5

[[20]]
[1] 5

[[21]]
[1] 5

[[22]]
[1] 5

[[23]]
[1] 5

[[24]]
[1] 5

[[25]]
[1] 6

[[26]]
[1] 5

[[27]]
[1] 5

[[28]]
[1] 5

[[29]]
[1] 5

[[30]]
[1] 5

[[31]]
[1] 6

[[32]]
[1] 5

[[33]]
[1] 5

[[34]]
[1] 5

[[35]]
[1] 5

[[36]]
[1] 5

[[37]]
[1] 5

[[38]]
[1] 5

[[39]]
[1] 5

[[40]]
[1] 5

[[41]]
[1] 5

[[42]]
[1] 5

[[43]]
[1] 5

[[44]]
[1] 5

[[45]]
[1] 5

[[46]]
[1] 5

[[47]]
[1] 6

[[48]]
[1] 5

[[49]]
[1] 5

[[50]]
[1] 5

[[51]]
[1] 6

[[52]]
[1] 5

[[53]]
[1] 5

[[54]]
[1] 5

[[55]]
[1] 6

[[56]]
[1] 5

[[57]]
[1] 5

[[58]]
[1] 5

[[59]]
[1] 5

[[60]]
[1] 5

[[61]]
[1] 5

[[62]]
[1] 6

[[63]]
[1] 5

[[64]]
[1] 5

[[65]]
[1] 5

[[66]]
[1] 5

[[67]]
[1] 5

[[68]]
[1] 5

[[69]]
[1] 5

[[70]]
[1] 5

[[71]]
[1] 6

[[72]]
[1] 5

[[73]]
[1] 5

[[74]]
[1] 5

[[75]]
[1] 5

[[76]]
[1] 7

[[77]]
[1] 7

[[78]]
[1] 5

[[79]]
[1] 5

[[80]]
[1] 5

[[81]]
[1] 8

[[82]]
[1] 9

[[83]]
[1] 5

[[84]]
[1] 5

[[85]]
[1] 5

[[86]]
[1] 5

[[87]]
[1] 5

[[88]]
[1] 5

[[89]]
[1] 5

[[90]]
[1] 10

[[91]]
[1] 5

[[92]]
[1] 5

[[93]]
[1] 5

[[94]]
[1] 5

[[95]]
[1] 5

[[96]]
[1] 5

[[97]]
[1] 5

[[98]]
[1] 5

[[99]]
[1] 5

[[100]]
[1] 5

> table(unlist(k3.100))

 5  6  7  8  9 10 11 
87  7  2  1  1  1  1 
> sim3 <- sim.Y.finite(100,3,1000,tfun=theta.216,xfun=sim.X,lambda=c(1,2,-3))
> length(sim3$Y)
[1] 100
> sim3$theta
            [,1]
   [1,] 0.000000
   [2,] 1.250000
   [3,] 1.333333
   [4,] 1.312500
   [5,] 1.280000
   [6,] 1.250000
   [7,] 1.224490
   [8,] 1.203125
   [9,] 1.185185
  [10,] 1.170000
  [11,] 1.157025
  [12,] 1.145833
  [13,] 1.136095
  [14,] 1.127551
  [15,] 1.120000
  [16,] 1.113281
  [17,] 1.107266
  [18,] 1.101852
  [19,] 1.096953
  [20,] 1.092500
  [21,] 1.088435
  [22,] 1.084711
  [23,] 1.081285
  [24,] 1.078125
  [25,] 1.075200
  [26,] 1.072485
  [27,] 1.069959
  [28,] 1.067602
  [29,] 1.065398
  [30,] 1.063333
  [31,] 1.061394
  [32,] 1.059570
  [33,] 1.057851
  [34,] 1.056228
  [35,] 1.054694
  [36,] 1.053241
  [37,] 1.051863
  [38,] 1.050554
  [39,] 1.049310
  [40,] 1.048125
  [41,] 1.046996
  [42,] 1.045918
  [43,] 1.044889
  [44,] 1.043905
  [45,] 1.042963
  [46,] 1.042060
  [47,] 1.041195
  [48,] 1.040365
  [49,] 1.039567
  [50,] 1.038800
  [51,] 1.038062
  [52,] 1.037352
  [53,] 1.036668
  [54,] 1.036008
  [55,] 1.035372
  [56,] 1.034758
  [57,] 1.034164
  [58,] 1.033591
  [59,] 1.033036
  [60,] 1.032500
  [61,] 1.031981
  [62,] 1.031478
  [63,] 1.030990
  [64,] 1.030518
  [65,] 1.030059
  [66,] 1.029614
  [67,] 1.029182
  [68,] 1.028763
  [69,] 1.028355
  [70,] 1.027959
  [71,] 1.027574
  [72,] 1.027199
  [73,] 1.026834
  [74,] 1.026479
  [75,] 1.026133
  [76,] 1.025796
  [77,] 1.025468
  [78,] 1.025148
  [79,] 1.024836
  [80,] 1.024531
  [81,] 1.024234
  [82,] 1.023944
  [83,] 1.023661
  [84,] 1.023384
  [85,] 1.023114
  [86,] 1.022850
  [87,] 1.022592
  [88,] 1.022340
  [89,] 1.022093
  [90,] 1.021852
  [91,] 1.021616
  [92,] 1.021385
  [93,] 1.021159
  [94,] 1.020937
  [95,] 1.020720
  [96,] 1.020508
  [97,] 1.020300
  [98,] 1.020096
  [99,] 1.019896
 [100,] 1.019700
 [getOption("max.print") est atteint -- 2903 lignes omises ]]
> theta.214
function(index,lambda,...) {
    pol <- poly(1/(index+1),2,raw=TRUE) %*%lambda
    epol <- exp(pol)
    epol/sum(epol)
}
> dd$index
[1] 0 1 2 3 4 5
> theta.r214(0:100,c(0.1,-0.3),0.2)
Erreur : impossible de trouver la fonction "theta.r214"
> theta.r214(0:100,c(0.1,-0.3),0.2)
                [,1]
  [1,]  8.731507e-02
  [2,]  7.148753e-02
  [3,]  3.212142e-02
  [4,]  7.921044e-03
  [5,]  1.071997e-03
  [6,]  7.962104e-05
  [7,]  3.245529e-06
  [8,]  7.260499e-08
  [9,]  8.913961e-10
 [10,]  6.006180e-12
 [11,]  2.221003e-14
 [12,]  4.507372e-17
 [13,]  5.020199e-20
 [14,]  3.068611e-23
 [15,]  1.029404e-26
 [16,]  1.895193e-30
 [17,]  1.914891e-34
 [18,]  1.061838e-38
 [19,]  3.231436e-43
 [20,]  5.397049e-48
 [21,]  4.946982e-53
 [22,]  2.488557e-58
 [23,]  6.870341e-64
 [24,]  1.040956e-69
 [25,]  8.655845e-76
 [26,]  3.950118e-82
 [27,]  9.893135e-89
 [28,]  1.359819e-95
 [29,] 1.025774e-102
 [30,] 4.246640e-110
 [31,] 9.648561e-118
 [32,] 1.203103e-125
 [33,] 8.233163e-134
 [34,] 3.092102e-142
 [35,] 6.373296e-151
 [36,] 7.209378e-160
 [37,] 4.475636e-169
 [38,] 1.524878e-178
 [39,] 2.851272e-188
 [40,] 2.925941e-198
 [41,] 1.647843e-208
 [42,] 5.093184e-219
 [43,] 8.639452e-230
 [44,] 8.042783e-241
 [45,] 4.109130e-252
 [46,] 1.152170e-263
 [47,] 1.772992e-275
 [48,] 1.497339e-287
 [49,] 6.939958e-300
 [50,] 1.765293e-312
 [51,]  0.000000e+00
 [52,]  0.000000e+00
 [53,]  0.000000e+00
 [54,]  0.000000e+00
 [55,]  0.000000e+00
 [56,]  0.000000e+00
 [57,]  0.000000e+00
 [58,]  0.000000e+00
 [59,]  0.000000e+00
 [60,]  0.000000e+00
 [61,]  0.000000e+00
 [62,]  0.000000e+00
 [63,]  0.000000e+00
 [64,]  0.000000e+00
 [65,]  0.000000e+00
 [66,]  0.000000e+00
 [67,]  0.000000e+00
 [68,]  0.000000e+00
 [69,]  0.000000e+00
 [70,]  0.000000e+00
 [71,]  0.000000e+00
 [72,]  0.000000e+00
 [73,]  0.000000e+00
 [74,]  0.000000e+00
 [75,]  0.000000e+00
 [76,]  0.000000e+00
 [77,]  0.000000e+00
 [78,]  0.000000e+00
 [79,]  0.000000e+00
 [80,]  0.000000e+00
 [81,]  0.000000e+00
 [82,]  0.000000e+00
 [83,]  0.000000e+00
 [84,]  0.000000e+00
 [85,]  0.000000e+00
 [86,]  0.000000e+00
 [87,]  0.000000e+00
 [88,]  0.000000e+00
 [89,]  0.000000e+00
 [90,]  0.000000e+00
 [91,]  0.000000e+00
 [92,]  0.000000e+00
 [93,]  0.000000e+00
 [94,]  0.000000e+00
 [95,]  0.000000e+00
 [96,]  0.000000e+00
 [97,]  0.000000e+00
 [98,]  0.000000e+00
 [99,]  0.000000e+00
[100,]  0.000000e+00
 [getOption("max.print") est atteint -- dernière ligne omises ]]
> theta.r214(0:100,c(0.1,-0.3),0.2)
                [,1]
  [1,]  1.268804e-01
  [2,]  5.701103e-02
  [3,]  1.405875e-02
  [4,]  1.902644e-03
  [5,]  1.413162e-04
  [6,]  5.760360e-06
  [7,]  1.288637e-07
  [8,]  1.582103e-09
  [9,]  1.066013e-11
 [10,]  3.941971e-14
 [11,]  7.999956e-17
 [12,]  8.910152e-20
 [13,]  5.446355e-23
 [14,]  1.827049e-26
 [15,]  3.363702e-30
 [16,]  3.398665e-34
 [17,]  1.884614e-38
 [18,]  5.735348e-43
 [19,]  9.579007e-48
 [20,]  8.780202e-53
 [21,]  4.416841e-58
 [22,]  1.219389e-63
 [23,]  1.847551e-69
 [24,]  1.536292e-75
 [25,]  7.010907e-82
 [26,]  1.755893e-88
 [27,]  2.413489e-95
 [28,] 1.820605e-102
 [29,] 7.537192e-110
 [30,] 1.712485e-117
 [31,] 2.135340e-125
 [32,] 1.461271e-133
 [33,] 5.488048e-142
 [34,] 1.131171e-150
 [35,] 1.279564e-159
 [36,] 7.943628e-169
 [37,] 2.706445e-178
 [38,] 5.060609e-188
 [39,] 5.193136e-198
 [40,] 2.924691e-208
 [41,] 9.039689e-219
 [42,] 1.533382e-229
 [43,] 1.427482e-240
 [44,] 7.293130e-252
 [45,] 2.044941e-263
 [46,] 3.146812e-275
 [47,] 2.657567e-287
 [48,] 1.231745e-299
 [49,] 3.133149e-312
 [50,]  0.000000e+00
 [51,]  0.000000e+00
 [52,]  0.000000e+00
 [53,]  0.000000e+00
 [54,]  0.000000e+00
 [55,]  0.000000e+00
 [56,]  0.000000e+00
 [57,]  0.000000e+00
 [58,]  0.000000e+00
 [59,]  0.000000e+00
 [60,]  0.000000e+00
 [61,]  0.000000e+00
 [62,]  0.000000e+00
 [63,]  0.000000e+00
 [64,]  0.000000e+00
 [65,]  0.000000e+00
 [66,]  0.000000e+00
 [67,]  0.000000e+00
 [68,]  0.000000e+00
 [69,]  0.000000e+00
 [70,]  0.000000e+00
 [71,]  0.000000e+00
 [72,]  0.000000e+00
 [73,]  0.000000e+00
 [74,]  0.000000e+00
 [75,]  0.000000e+00
 [76,]  0.000000e+00
 [77,]  0.000000e+00
 [78,]  0.000000e+00
 [79,]  0.000000e+00
 [80,]  0.000000e+00
 [81,]  0.000000e+00
 [82,]  0.000000e+00
 [83,]  0.000000e+00
 [84,]  0.000000e+00
 [85,]  0.000000e+00
 [86,]  0.000000e+00
 [87,]  0.000000e+00
 [88,]  0.000000e+00
 [89,]  0.000000e+00
 [90,]  0.000000e+00
 [91,]  0.000000e+00
 [92,]  0.000000e+00
 [93,]  0.000000e+00
 [94,]  0.000000e+00
 [95,]  0.000000e+00
 [96,]  0.000000e+00
 [97,]  0.000000e+00
 [98,]  0.000000e+00
 [99,]  0.000000e+00
[100,]  0.000000e+00
 [getOption("max.print") est atteint -- dernière ligne omises ]]
> plot(theta.r214(0:100,c(0.1,-0.3),0.2))
> plot(theta.r214(0:100,c(0.1,-0.3),0.2)[1:10])
> theta.r214(0:100,c(10,-0.3),0.2)[1:10]
> theta.r214(0:100,c(10,-0.3),0.2)[1:10]
 [1] 6.493298e-34 5.814938e-30 2.857908e-26 7.708584e-23 1.141102e-19
 [6] 9.270376e-17 4.133269e-14 1.011378e-11 1.358177e-09 1.000974e-07
> theta.r214(0:100,c(10,-0.3),0.2)
                [,1]
  [1,]  6.493298e-34
  [2,]  5.814938e-30
  [3,]  2.857908e-26
  [4,]  7.708584e-23
  [5,]  1.141102e-19
  [6,]  9.270376e-17
  [7,]  4.133269e-14
  [8,]  1.011378e-11
  [9,]  1.358177e-09
 [10,]  1.000974e-07
 [11,]  4.048668e-06
 [12,]  8.987214e-05
 [13,]  1.094867e-03
 [14,]  7.320164e-03
 [15,]  2.685985e-02
 [16,]  5.408910e-02
 [17,]  5.977770e-02
 [18,]  3.625701e-02
 [19,]  1.206891e-02
 [20,]  2.204791e-03
 [21,]  2.210498e-04
 [22,]  1.216287e-05
 [23,]  3.672869e-07
 [24,]  6.086926e-09
 [25,]  5.536228e-11
 [26,]  2.763460e-13
 [27,]  7.570347e-16
 [28,]  1.138156e-18
 [29,]  9.390978e-22
 [30,]  4.252490e-25
 [31,]  1.056815e-28
 [32,]  1.441379e-32
 [33,]  1.078899e-36
 [34,]  4.432068e-41
 [35,]  9.992069e-46
 [36,]  1.236311e-50
 [37,]  8.395053e-56
 [38,]  3.128545e-61
 [39,]  6.398596e-67
 [40,]  7.182081e-73
 [41,]  4.424246e-79
 [42,]  1.495724e-85
 [43,]  2.775153e-92
 [44,]  2.825829e-99
 [45,] 1.579167e-106
 [46,] 4.843211e-114
 [47,] 8.151963e-122
 [48,] 7.530335e-130
 [49,] 3.817593e-138
 [50,] 1.062156e-146
 [51,] 1.621849e-155
 [52,] 1.359114e-164
 [53,] 6.250638e-174
 [54,] 1.577671e-183
 [55,] 2.185403e-193
 [56,] 1.661384e-203
 [57,] 6.931577e-214
 [58,] 1.587147e-224
 [59,] 1.994462e-235
 [60,] 1.375490e-246
 [61,] 5.206102e-258
 [62,] 1.081412e-269
 [63,] 1.232801e-281
 [64,] 7.712904e-294
 [65,] 2.648295e-306
 [66,] 4.990409e-319
 [67,]  0.000000e+00
 [68,]  0.000000e+00
 [69,]  0.000000e+00
 [70,]  0.000000e+00
 [71,]  0.000000e+00
 [72,]  0.000000e+00
 [73,]  0.000000e+00
 [74,]  0.000000e+00
 [75,]  0.000000e+00
 [76,]  0.000000e+00
 [77,]  0.000000e+00
 [78,]  0.000000e+00
 [79,]  0.000000e+00
 [80,]  0.000000e+00
 [81,]  0.000000e+00
 [82,]  0.000000e+00
 [83,]  0.000000e+00
 [84,]  0.000000e+00
 [85,]  0.000000e+00
 [86,]  0.000000e+00
 [87,]  0.000000e+00
 [88,]  0.000000e+00
 [89,]  0.000000e+00
 [90,]  0.000000e+00
 [91,]  0.000000e+00
 [92,]  0.000000e+00
 [93,]  0.000000e+00
 [94,]  0.000000e+00
 [95,]  0.000000e+00
 [96,]  0.000000e+00
 [97,]  0.000000e+00
 [98,]  0.000000e+00
 [99,]  0.000000e+00
[100,]  0.000000e+00
 [getOption("max.print") est atteint -- dernière ligne omises ]]
> plot(theta.r214(0:100,c(10,-0.3),0.2))
> plot(theta.r214(0:100,c(10,-1),0.2))
> plot(theta.r214(0:100,c(10,-1),0.2))
> plot(theta.r214(0:100,c(10,-4),0.2))
> plot(theta.u214(0:100,c(10,-4),0.2))
> plot(theta.u214(0:100,c(100,-0.4),0.2))
> plot(theta.r214(0:100,c(100,-0.4),0.2))
> 100^2
[1] 10000
> debug(theta.r214)
> plot(theta.r214(0:100,c(100,-0.4),0.2))
debugging in: theta.r214(0:100, c(100, -0.4), 0.2)
debug à /Users/mpiktas/R/midas_sim/10code.R#59 :{
    pol <- poly((index + 1), 2, raw = TRUE) %*% lambda
    epol <- exp(pol)
    beta * epol/sum(epol)
}
attr(,"srcfile")
/Users/mpiktas/R/midas_sim/10code.R 
Browse[2]> n
debug à /Users/mpiktas/R/midas_sim/10code.R#60 :pol <- poly((index + 1), 2, raw = TRUE) %*% lambda
Browse[2]>  poly((index+1),2,raw=TRUE)
         1     2
  [1,]   1     1
  [2,]   2     4
  [3,]   3     9
  [4,]   4    16
  [5,]   5    25
  [6,]   6    36
  [7,]   7    49
  [8,]   8    64
  [9,]   9    81
 [10,]  10   100
 [11,]  11   121
 [12,]  12   144
 [13,]  13   169
 [14,]  14   196
 [15,]  15   225
 [16,]  16   256
 [17,]  17   289
 [18,]  18   324
 [19,]  19   361
 [20,]  20   400
 [21,]  21   441
 [22,]  22   484
 [23,]  23   529
 [24,]  24   576
 [25,]  25   625
 [26,]  26   676
 [27,]  27   729
 [28,]  28   784
 [29,]  29   841
 [30,]  30   900
 [31,]  31   961
 [32,]  32  1024
 [33,]  33  1089
 [34,]  34  1156
 [35,]  35  1225
 [36,]  36  1296
 [37,]  37  1369
 [38,]  38  1444
 [39,]  39  1521
 [40,]  40  1600
 [41,]  41  1681
 [42,]  42  1764
 [43,]  43  1849
 [44,]  44  1936
 [45,]  45  2025
 [46,]  46  2116
 [47,]  47  2209
 [48,]  48  2304
 [49,]  49  2401
 [50,]  50  2500
 [getOption("max.print") est atteint -- 51 lignes omises ]]
attr(,"degree")
[1] 1 2
attr(,"class")
[1] "poly"   "matrix"
Browse[2]>  poly((index+1),2,raw=TRUE) %*% lambda
         [,1]
  [1,]   99.6
  [2,]  198.4
  [3,]  296.4
  [4,]  393.6
  [5,]  490.0
  [6,]  585.6
  [7,]  680.4
  [8,]  774.4
  [9,]  867.6
 [10,]  960.0
 [11,] 1051.6
 [12,] 1142.4
 [13,] 1232.4
 [14,] 1321.6
 [15,] 1410.0
 [16,] 1497.6
 [17,] 1584.4
 [18,] 1670.4
 [19,] 1755.6
 [20,] 1840.0
 [21,] 1923.6
 [22,] 2006.4
 [23,] 2088.4
 [24,] 2169.6
 [25,] 2250.0
 [26,] 2329.6
 [27,] 2408.4
 [28,] 2486.4
 [29,] 2563.6
 [30,] 2640.0
 [31,] 2715.6
 [32,] 2790.4
 [33,] 2864.4
 [34,] 2937.6
 [35,] 3010.0
 [36,] 3081.6
 [37,] 3152.4
 [38,] 3222.4
 [39,] 3291.6
 [40,] 3360.0
 [41,] 3427.6
 [42,] 3494.4
 [43,] 3560.4
 [44,] 3625.6
 [45,] 3690.0
 [46,] 3753.6
 [47,] 3816.4
 [48,] 3878.4
 [49,] 3939.6
 [50,] 4000.0
 [51,] 4059.6
 [52,] 4118.4
 [53,] 4176.4
 [54,] 4233.6
 [55,] 4290.0
 [56,] 4345.6
 [57,] 4400.4
 [58,] 4454.4
 [59,] 4507.6
 [60,] 4560.0
 [61,] 4611.6
 [62,] 4662.4
 [63,] 4712.4
 [64,] 4761.6
 [65,] 4810.0
 [66,] 4857.6
 [67,] 4904.4
 [68,] 4950.4
 [69,] 4995.6
 [70,] 5040.0
 [71,] 5083.6
 [72,] 5126.4
 [73,] 5168.4
 [74,] 5209.6
 [75,] 5250.0
 [76,] 5289.6
 [77,] 5328.4
 [78,] 5366.4
 [79,] 5403.6
 [80,] 5440.0
 [81,] 5475.6
 [82,] 5510.4
 [83,] 5544.4
 [84,] 5577.6
 [85,] 5610.0
 [86,] 5641.6
 [87,] 5672.4
 [88,] 5702.4
 [89,] 5731.6
 [90,] 5760.0
 [91,] 5787.6
 [92,] 5814.4
 [93,] 5840.4
 [94,] 5865.6
 [95,] 5890.0
 [96,] 5913.6
 [97,] 5936.4
 [98,] 5958.4
 [99,] 5979.6
[100,] 6000.0
 [getOption("max.print") est atteint -- dernière ligne omises ]]
Browse[2]> Q
Erreur dans plot(theta.r214(0:100, c(100, -0.4), 0.2)) : 
  erreur lors de l'évaluation de l'argument 'x' lors de la sélection d'une méthode pour la fonction 'plot'
> theta.r214(0:100,c(10,-0.001),0.2)
> theta.r214(0:100,c(10,-0.001),0.2)
       [,1]
  [1,]    0
  [2,]    0
  [3,]    0
  [4,]    0
  [5,]    0
  [6,]    0
  [7,]    0
  [8,]    0
  [9,]    0
 [10,]    0
 [11,]    0
 [12,]    0
 [13,]    0
 [14,]    0
 [15,]    0
 [16,]    0
 [17,]    0
 [18,]    0
 [19,]    0
 [20,]    0
 [21,]    0
 [22,]    0
 [23,]    0
 [24,]    0
 [25,]    0
 [26,]    0
 [27,]    0
 [28,]    0
 [29,]    0
 [30,]    0
 [31,]    0
 [32,]    0
 [33,]    0
 [34,]    0
 [35,]    0
 [36,]    0
 [37,]    0
 [38,]    0
 [39,]    0
 [40,]    0
 [41,]    0
 [42,]    0
 [43,]    0
 [44,]    0
 [45,]    0
 [46,]    0
 [47,]    0
 [48,]    0
 [49,]    0
 [50,]    0
 [51,]    0
 [52,]    0
 [53,]    0
 [54,]    0
 [55,]    0
 [56,]    0
 [57,]    0
 [58,]    0
 [59,]    0
 [60,]    0
 [61,]    0
 [62,]    0
 [63,]    0
 [64,]    0
 [65,]    0
 [66,]    0
 [67,]    0
 [68,]    0
 [69,]    0
 [70,]    0
 [71,]    0
 [72,]  NaN
 [73,]  NaN
 [74,]  NaN
 [75,]  NaN
 [76,]  NaN
 [77,]  NaN
 [78,]  NaN
 [79,]  NaN
 [80,]  NaN
 [81,]  NaN
 [82,]  NaN
 [83,]  NaN
 [84,]  NaN
 [85,]  NaN
 [86,]  NaN
 [87,]  NaN
 [88,]  NaN
 [89,]  NaN
 [90,]  NaN
 [91,]  NaN
 [92,]  NaN
 [93,]  NaN
 [94,]  NaN
 [95,]  NaN
 [96,]  NaN
 [97,]  NaN
 [98,]  NaN
 [99,]  NaN
[100,]  NaN
 [getOption("max.print") est atteint -- dernière ligne omises ]]
>
> debug(theta.r214)
> theta.r214(0:100,c(10,-0.001),0.2)
debugging in: theta.r214(0:100, c(10, -0.001), 0.2)
debug à /Users/mpiktas/R/midas_sim/10code.R#59 :{
    pol <- poly((index + 1), 2, raw = TRUE) %*% lambda
    epol <- exp(pol)
    beta * epol/sum(epol)
}
attr(,"srcfile")
/Users/mpiktas/R/midas_sim/10code.R 
Browse[2]> n
debug à /Users/mpiktas/R/midas_sim/10code.R#60 :pol <- poly((index + 1), 2, raw = TRUE) %*% lambda
Browse[2]> 
debug à /Users/mpiktas/R/midas_sim/10code.R#61 :epol <- exp(pol)
Browse[2]> pol
          [,1]
  [1,]   9.999
  [2,]  19.996
  [3,]  29.991
  [4,]  39.984
  [5,]  49.975
  [6,]  59.964
  [7,]  69.951
  [8,]  79.936
  [9,]  89.919
 [10,]  99.900
 [11,] 109.879
 [12,] 119.856
 [13,] 129.831
 [14,] 139.804
 [15,] 149.775
 [16,] 159.744
 [17,] 169.711
 [18,] 179.676
 [19,] 189.639
 [20,] 199.600
 [21,] 209.559
 [22,] 219.516
 [23,] 229.471
 [24,] 239.424
 [25,] 249.375
 [26,] 259.324
 [27,] 269.271
 [28,] 279.216
 [29,] 289.159
 [30,] 299.100
 [31,] 309.039
 [32,] 318.976
 [33,] 328.911
 [34,] 338.844
 [35,] 348.775
 [36,] 358.704
 [37,] 368.631
 [38,] 378.556
 [39,] 388.479
 [40,] 398.400
 [41,] 408.319
 [42,] 418.236
 [43,] 428.151
 [44,] 438.064
 [45,] 447.975
 [46,] 457.884
 [47,] 467.791
 [48,] 477.696
 [49,] 487.599
 [50,] 497.500
 [51,] 507.399
 [52,] 517.296
 [53,] 527.191
 [54,] 537.084
 [55,] 546.975
 [56,] 556.864
 [57,] 566.751
 [58,] 576.636
 [59,] 586.519
 [60,] 596.400
 [61,] 606.279
 [62,] 616.156
 [63,] 626.031
 [64,] 635.904
 [65,] 645.775
 [66,] 655.644
 [67,] 665.511
 [68,] 675.376
 [69,] 685.239
 [70,] 695.100
 [71,] 704.959
 [72,] 714.816
 [73,] 724.671
 [74,] 734.524
 [75,] 744.375
 [76,] 754.224
 [77,] 764.071
 [78,] 773.916
 [79,] 783.759
 [80,] 793.600
 [81,] 803.439
 [82,] 813.276
 [83,] 823.111
 [84,] 832.944
 [85,] 842.775
 [86,] 852.604
 [87,] 862.431
 [88,] 872.256
 [89,] 882.079
 [90,] 891.900
 [91,] 901.719
 [92,] 911.536
 [93,] 921.351
 [94,] 931.164
 [95,] 940.975
 [96,] 950.784
 [97,] 960.591
 [98,] 970.396
 [99,] 980.199
[100,] 990.000
 [getOption("max.print") est atteint -- dernière ligne omises ]]
Browse[2]> plot(pol)
Browse[2]> lambda
[1] 10.000 -0.001
Browse[2]> poly(index+1,2,raw)
Erreur dans polym(x, ..., degree = degree, raw = raw) : 
  arguments must have the same length
Browse[2]> poly(index+1,2,raw=TRUE)
         1     2
  [1,]   1     1
  [2,]   2     4
  [3,]   3     9
  [4,]   4    16
  [5,]   5    25
  [6,]   6    36
  [7,]   7    49
  [8,]   8    64
  [9,]   9    81
 [10,]  10   100
 [11,]  11   121
 [12,]  12   144
 [13,]  13   169
 [14,]  14   196
 [15,]  15   225
 [16,]  16   256
 [17,]  17   289
 [18,]  18   324
 [19,]  19   361
 [20,]  20   400
 [21,]  21   441
 [22,]  22   484
 [23,]  23   529
 [24,]  24   576
 [25,]  25   625
 [26,]  26   676
 [27,]  27   729
 [28,]  28   784
 [29,]  29   841
 [30,]  30   900
 [31,]  31   961
 [32,]  32  1024
 [33,]  33  1089
 [34,]  34  1156
 [35,]  35  1225
 [36,]  36  1296
 [37,]  37  1369
 [38,]  38  1444
 [39,]  39  1521
 [40,]  40  1600
 [41,]  41  1681
 [42,]  42  1764
 [43,]  43  1849
 [44,]  44  1936
 [45,]  45  2025
 [46,]  46  2116
 [47,]  47  2209
 [48,]  48  2304
 [49,]  49  2401
 [50,]  50  2500
 [getOption("max.print") est atteint -- 51 lignes omises ]]
attr(,"degree")
[1] 1 2
attr(,"class")
[1] "poly"   "matrix"
Browse[2]> aa<-poly(index+1,2,raw=TRUE)
Browse[2]> aa[,1]*10
  [1]   10   20   30   40   50   60   70   80   90  100  110  120  130  140  150
 [16]  160  170  180  190  200  210  220  230  240  250  260  270  280  290  300
 [31]  310  320  330  340  350  360  370  380  390  400  410  420  430  440  450
 [46]  460  470  480  490  500  510  520  530  540  550  560  570  580  590  600
 [61]  610  620  630  640  650  660  670  680  690  700  710  720  730  740  750
 [76]  760  770  780  790  800  810  820  830  840  850  860  870  880  890  900
 [91]  910  920  930  940  950  960  970  980  990 1000 1010
Browse[2]> aa[,2]*(-0.001)
  [1]  -0.001  -0.004  -0.009  -0.016  -0.025  -0.036  -0.049  -0.064  -0.081
 [10]  -0.100  -0.121  -0.144  -0.169  -0.196  -0.225  -0.256  -0.289  -0.324
 [19]  -0.361  -0.400  -0.441  -0.484  -0.529  -0.576  -0.625  -0.676  -0.729
 [28]  -0.784  -0.841  -0.900  -0.961  -1.024  -1.089  -1.156  -1.225  -1.296
 [37]  -1.369  -1.444  -1.521  -1.600  -1.681  -1.764  -1.849  -1.936  -2.025
 [46]  -2.116  -2.209  -2.304  -2.401  -2.500  -2.601  -2.704  -2.809  -2.916
 [55]  -3.025  -3.136  -3.249  -3.364  -3.481  -3.600  -3.721  -3.844  -3.969
 [64]  -4.096  -4.225  -4.356  -4.489  -4.624  -4.761  -4.900  -5.041  -5.184
 [73]  -5.329  -5.476  -5.625  -5.776  -5.929  -6.084  -6.241  -6.400  -6.561
 [82]  -6.724  -6.889  -7.056  -7.225  -7.396  -7.569  -7.744  -7.921  -8.100
 [91]  -8.281  -8.464  -8.649  -8.836  -9.025  -9.216  -9.409  -9.604  -9.801
[100] -10.000 -10.201
Browse[2]> Q
> theta.r214(0:100,c(1,-0.001),0.2)
               [,1]
  [1,] 1.102804e-40
  [2,] 2.988751e-40
  [3,] 8.083749e-40
  [4,] 2.182063e-39
  [5,] 5.878318e-39
  [6,] 1.580412e-38
  [7,] 4.240518e-38
  [8,] 1.135531e-37
  [9,] 3.034663e-37
 [10,] 8.093817e-37
 [11,] 2.154407e-36
 [12,] 5.723127e-36
 [13,] 1.517297e-35
 [14,] 4.014570e-35
 [15,] 1.060081e-34
 [16,] 2.793639e-34
 [17,] 7.347390e-34
 [18,] 1.928534e-33
 [19,] 5.051878e-33
 [20,] 1.320717e-32
 [21,] 3.445865e-32
 [22,] 8.972595e-32
 [23,] 2.331682e-31
 [24,] 6.047167e-31
 [25,] 1.565186e-30
 [26,] 4.043072e-30
 [27,] 1.042289e-29
 [28,] 2.681616e-29
 [29,] 6.885513e-29
 [30,] 1.764442e-28
 [31,] 4.512424e-28
 [32,] 1.151712e-27
 [33,] 2.933656e-27
 [34,] 7.457718e-27
 [35,] 1.892057e-26
 [36,] 4.790642e-26
 [37,] 1.210555e-25
 [38,] 3.052861e-25
 [39,] 7.683532e-25
 [40,] 1.929950e-24
 [41,] 4.837965e-24
 [42,] 1.210349e-23
 [43,] 3.021971e-23
 [44,] 7.530106e-23
 [45,] 1.872593e-22
 [46,] 4.647475e-22
 [47,] 1.151124e-21
 [48,] 2.845500e-21
 [49,] 7.019830e-21
 [50,] 1.728327e-20
 [51,] 4.246749e-20
 [52,] 1.041403e-19
 [53,] 2.548663e-19
 [54,] 6.224971e-19
 [55,] 1.517378e-18
 [56,] 3.691318e-18
 [57,] 8.961913e-18
 [58,] 2.171457e-17
 [59,] 5.250895e-17
 [60,] 1.267205e-16
 [61,] 3.052050e-16
 [62,] 7.336145e-16
 [63,] 1.759850e-15
 [64,] 4.213225e-15
 [65,] 1.006665e-14
 [66,] 2.400419e-14
 [67,] 5.712423e-14
 [68,] 1.356704e-13
 [69,] 3.215742e-13
 [70,] 7.606919e-13
 [71,] 1.795840e-12
 [72,] 4.231147e-12
 [73,] 9.949010e-12
 [74,] 2.334711e-11
 [75,] 5.467864e-11
 [76,] 1.278008e-10
 [77,] 2.981131e-10
 [78,] 6.940008e-10
 [79,] 1.612390e-09
 [80,] 3.738625e-09
 [81,] 8.651371e-09
 [82,] 1.997972e-08
 [83,] 4.604954e-08
 [84,] 1.059236e-07
 [85,] 2.431596e-07
 [86,] 5.570850e-07
 [87,] 1.273746e-06
 [88,] 2.906538e-06
 [89,] 6.619121e-06
 [90,] 1.504375e-05
 [91,] 3.412269e-05
 [92,] 7.724348e-05
 [93,] 1.745066e-04
 [94,] 3.934534e-04
 [95,] 8.853318e-04
 [96,] 1.988155e-03
 [97,] 4.455803e-03
 [98,] 9.966279e-03
 [99,] 2.224700e-02
[100,] 4.956115e-02
 [getOption("max.print") est atteint -- dernière ligne omises ]]
> plot(theta.r214(0:100,c(1,-0.001),0.2))
> plot(theta.r214(0:100,c(-0.01,-0.00001),0.2))
> plot(theta.r214(0:100,c(-0.01,-0.00001),0.2),type="l")
> plot(theta.r214(0:100,c(-0.01,-0.00001),1),type="l")
> plot(theta.r214(0:100,c(-0.01,-0.0001),1),type="l")
> theta.r214(0:100,c(-0.01,-0.0001),1)
              [,1]
  [1,] 0.019639311
  [2,] 0.019438064
  [3,] 0.019235032
  [4,] 0.019030315
  [5,] 0.018824011
  [6,] 0.018616219
  [7,] 0.018407040
  [8,] 0.018196572
  [9,] 0.017984913
 [10,] 0.017772160
 [11,] 0.017558413
 [12,] 0.017343767
 [13,] 0.017128320
 [14,] 0.016912165
 [15,] 0.016695400
 [16,] 0.016478116
 [17,] 0.016260408
 [18,] 0.016042368
 [19,] 0.015824086
 [20,] 0.015605653
 [21,] 0.015387157
 [22,] 0.015168687
 [23,] 0.014950328
 [24,] 0.014732165
 [25,] 0.014514283
 [26,] 0.014296764
 [27,] 0.014079688
 [28,] 0.013863136
 [29,] 0.013647184
 [30,] 0.013431910
 [31,] 0.013217388
 [32,] 0.013003691
 [33,] 0.012790890
 [34,] 0.012579056
 [35,] 0.012368256
 [36,] 0.012158557
 [37,] 0.011950023
 [38,] 0.011742717
 [39,] 0.011536699
 [40,] 0.011332030
 [41,] 0.011128765
 [42,] 0.010926961
 [43,] 0.010726671
 [44,] 0.010527946
 [45,] 0.010330836
 [46,] 0.010135390
 [47,] 0.009941652
 [48,] 0.009749668
 [49,] 0.009559479
 [50,] 0.009371126
 [51,] 0.009184646
 [52,] 0.009000078
 [53,] 0.008817454
 [54,] 0.008636809
 [55,] 0.008458173
 [56,] 0.008281575
 [57,] 0.008107043
 [58,] 0.007934602
 [59,] 0.007764276
 [60,] 0.007596087
 [61,] 0.007430055
 [62,] 0.007266198
 [63,] 0.007104534
 [64,] 0.006945078
 [65,] 0.006787843
 [66,] 0.006632841
 [67,] 0.006480082
 [68,] 0.006329576
 [69,] 0.006181328
 [70,] 0.006035346
 [71,] 0.005891633
 [72,] 0.005750192
 [73,] 0.005611024
 [74,] 0.005474129
 [75,] 0.005339506
 [76,] 0.005207153
 [77,] 0.005077064
 [78,] 0.004949236
 [79,] 0.004823661
 [80,] 0.004700332
 [81,] 0.004579241
 [82,] 0.004460377
 [83,] 0.004343729
 [84,] 0.004229286
 [85,] 0.004117035
 [86,] 0.004006961
 [87,] 0.003899051
 [88,] 0.003793288
 [89,] 0.003689656
 [90,] 0.003588137
 [91,] 0.003488714
 [92,] 0.003391367
 [93,] 0.003296078
 [94,] 0.003202825
 [95,] 0.003111588
 [96,] 0.003022346
 [97,] 0.002935076
 [98,] 0.002849756
 [99,] 0.002766362
[100,] 0.002684872
 [getOption("max.print") est atteint -- dernière ligne omises ]]
> theta.u214(0:100,c(-0.01,-0.0001),1)
            [,1]
  [1,] 0.9899508
  [2,] 0.9798067
  [3,] 0.9695725
  [4,] 0.9592534
  [5,] 0.9488543
  [6,] 0.9383803
  [7,] 0.9278363
  [8,] 0.9172273
  [9,] 0.9065582
 [10,] 0.8958341
 [11,] 0.8850599
 [12,] 0.8742403
 [13,] 0.8633803
 [14,] 0.8524847
 [15,] 0.8415583
 [16,] 0.8306058
 [17,] 0.8196319
 [18,] 0.8086412
 [19,] 0.7976383
 [20,] 0.7866279
 [21,] 0.7756142
 [22,] 0.7646019
 [23,] 0.7535951
 [24,] 0.7425983
 [25,] 0.7316156
 [26,] 0.7206512
 [27,] 0.7097092
 [28,] 0.6987935
 [29,] 0.6879081
 [30,] 0.6770569
 [31,] 0.6662435
 [32,] 0.6554718
 [33,] 0.6447453
 [34,] 0.6340674
 [35,] 0.6234417
 [36,] 0.6128715
 [37,] 0.6023600
 [38,] 0.5919104
 [39,] 0.5815258
 [40,] 0.5712091
 [41,] 0.5609632
 [42,] 0.5507909
 [43,] 0.5406950
 [44,] 0.5306779
 [45,] 0.5207423
 [46,] 0.5108905
 [47,] 0.5011249
 [48,] 0.4914476
 [49,] 0.4818608
 [50,] 0.4723666
 [51,] 0.4629668
 [52,] 0.4536633
 [53,] 0.4444579
 [54,] 0.4353522
 [55,] 0.4263477
 [56,] 0.4174460
 [57,] 0.4086485
 [58,] 0.3999563
 [59,] 0.3913707
 [60,] 0.3828929
 [61,] 0.3745238
 [62,] 0.3662643
 [63,] 0.3581154
 [64,] 0.3500778
 [65,] 0.3421521
 [66,] 0.3343389
 [67,] 0.3266389
 [68,] 0.3190524
 [69,] 0.3115797
 [70,] 0.3042213
 [71,] 0.2969772
 [72,] 0.2898476
 [73,] 0.2828326
 [74,] 0.2759322
 [75,] 0.2691463
 [76,] 0.2624749
 [77,] 0.2559175
 [78,] 0.2494741
 [79,] 0.2431443
 [80,] 0.2369278
 [81,] 0.2308239
 [82,] 0.2248324
 [83,] 0.2189526
 [84,] 0.2131839
 [85,] 0.2075257
 [86,] 0.2019773
 [87,] 0.1965379
 [88,] 0.1912067
 [89,] 0.1859830
 [90,] 0.1808658
 [91,] 0.1758542
 [92,] 0.1709473
 [93,] 0.1661441
 [94,] 0.1614435
 [95,] 0.1568446
 [96,] 0.1523462
 [97,] 0.1479472
 [98,] 0.1436465
 [99,] 0.1394429
[100,] 0.1353353
 [getOption("max.print") est atteint -- dernière ligne omises ]]
> plot(theta.u214(0:100,c(-0.01,-0.001),1))
> plot(theta.u214(0:100,c(-0.01,-0.001),1))
> theta.u214(0:100,c(-0.01,-0.001),1)
               [,1]
  [1,] 9.890603e-01
  [2,] 9.762857e-01
  [3,] 9.617507e-01
  [4,] 9.455391e-01
  [5,] 9.277435e-01
  [6,] 9.084640e-01
  [7,] 8.878078e-01
  [8,] 8.658877e-01
  [9,] 8.428216e-01
 [10,] 8.187308e-01
 [11,] 7.937395e-01
 [12,] 7.679735e-01
 [13,] 7.415594e-01
 [14,] 7.146231e-01
 [15,] 6.872893e-01
 [16,] 6.596803e-01
 [17,] 6.319152e-01
 [18,] 6.041094e-01
 [19,] 5.763731e-01
 [20,] 5.488116e-01
 [21,] 5.215240e-01
 [22,] 4.946029e-01
 [23,] 4.681343e-01
 [24,] 4.421969e-01
 [25,] 4.168620e-01
 [26,] 3.921935e-01
 [27,] 3.682475e-01
 [28,] 3.450728e-01
 [29,] 3.227104e-01
 [30,] 3.011942e-01
 [31,] 2.805509e-01
 [32,] 2.608004e-01
 [33,] 2.419559e-01
 [34,] 2.240245e-01
 [35,] 2.070076e-01
 [36,] 1.909011e-01
 [37,] 1.756960e-01
 [38,] 1.613789e-01
 [39,] 1.479324e-01
 [40,] 1.353353e-01
 [41,] 1.235635e-01
 [42,] 1.125903e-01
 [43,] 1.023865e-01
 [44,] 9.292152e-02
 [45,] 8.416299e-02
 [46,] 7.607771e-02
 [47,] 6.863175e-02
 [48,] 6.179085e-02
 [49,] 5.552066e-02
 [50,] 4.978707e-02
 [51,] 4.455638e-02
 [52,] 3.979556e-02
 [53,] 3.547241e-02
 [54,] 3.155573e-02
 [55,] 2.801543e-02
 [56,] 2.482262e-02
 [57,] 2.194974e-02
 [58,] 1.937058e-02
 [59,] 1.706032e-02
 [60,] 1.499558e-02
 [61,] 1.315439e-02
 [62,] 1.151621e-02
 [63,] 1.006189e-02
 [64,] 8.773671e-03
 [65,] 7.635094e-03
 [66,] 6.630998e-03
 [67,] 5.747444e-03
 [68,] 4.971667e-03
 [69,] 4.292011e-03
 [70,] 3.697864e-03
 [71,] 3.179600e-03
 [72,] 2.728509e-03
 [73,] 2.336736e-03
 [74,] 1.997218e-03
 [75,] 1.703620e-03
 [76,] 1.450278e-03
 [77,] 1.232143e-03
 [78,] 1.044727e-03
 [79,] 8.840473e-04
 [80,] 7.465858e-04
 [81,] 6.292386e-04
 [82,] 5.292763e-04
 [83,] 4.443047e-04
 [84,] 3.722295e-04
 [85,] 3.112233e-04
 [86,] 2.596957e-04
 [87,] 2.162663e-04
 [88,] 1.797399e-04
 [89,] 1.490841e-04
 [90,] 1.234098e-04
 [91,] 1.019529e-04
 [92,] 8.405830e-05
 [93,] 6.916608e-05
 [94,] 5.679854e-05
 [95,] 4.654923e-05
 [96,] 3.807320e-05
 [97,] 3.107832e-05
 [98,] 2.531787e-05
 [99,] 2.058393e-05
[100,] 1.670170e-05
 [getOption("max.print") est atteint -- dernière ligne omises ]]
> theta.r214(0:100,c(-0.01,-0.001),1)
               [,1]
  [1,] 4.272211e-02
  [2,] 4.217032e-02
  [3,] 4.154248e-02
  [4,] 4.084223e-02
  [5,] 4.007355e-02
  [6,] 3.924078e-02
  [7,] 3.834854e-02
  [8,] 3.740171e-02
  [9,] 3.640538e-02
 [10,] 3.536479e-02
 [11,] 3.428530e-02
 [12,] 3.317235e-02
 [13,] 3.203140e-02
 [14,] 3.086789e-02
 [15,] 2.968722e-02
 [16,] 2.849466e-02
 [17,] 2.729536e-02
 [18,] 2.609429e-02
 [19,] 2.489623e-02
 [20,] 2.370572e-02
 [21,] 2.252704e-02
 [22,] 2.136420e-02
 [23,] 2.022090e-02
 [24,] 1.910054e-02
 [25,] 1.800621e-02
 [26,] 1.694066e-02
 [27,] 1.590632e-02
 [28,] 1.490530e-02
 [29,] 1.393936e-02
 [30,] 1.300998e-02
 [31,] 1.211830e-02
 [32,] 1.126518e-02
 [33,] 1.045120e-02
 [34,] 9.676658e-03
 [35,] 8.941618e-03
 [36,] 8.245904e-03
 [37,] 7.589127e-03
 [38,] 6.970706e-03
 [39,] 6.389887e-03
 [40,] 5.845760e-03
 [41,] 5.337282e-03
 [42,] 4.863297e-03
 [43,] 4.422550e-03
 [44,] 4.013712e-03
 [45,] 3.635391e-03
 [46,] 3.286150e-03
 [47,] 2.964524e-03
 [48,] 2.669034e-03
 [49,] 2.398195e-03
 [50,] 2.150535e-03
 [51,] 1.924597e-03
 [52,] 1.718955e-03
 [53,] 1.532218e-03
 [54,] 1.363039e-03
 [55,] 1.210116e-03
 [56,] 1.072204e-03
 [57,] 9.481112e-04
 [58,] 8.367052e-04
 [59,] 7.369145e-04
 [60,] 6.477286e-04
 [61,] 5.681991e-04
 [62,] 4.974385e-04
 [63,] 4.346199e-04
 [64,] 3.789756e-04
 [65,] 3.297952e-04
 [66,] 2.864236e-04
 [67,] 2.482588e-04
 [68,] 2.147494e-04
 [69,] 1.853919e-04
 [70,] 1.597279e-04
 [71,] 1.373417e-04
 [72,] 1.178570e-04
 [73,] 1.009345e-04
 [74,] 8.626913e-05
 [75,] 7.358725e-05
 [76,] 6.264425e-05
 [77,] 5.322200e-05
 [78,] 4.512660e-05
 [79,] 3.818611e-05
 [80,] 3.224851e-05
 [81,] 2.717974e-05
 [82,] 2.286190e-05
 [83,] 1.919158e-05
 [84,] 1.607832e-05
 [85,] 1.344318e-05
 [86,] 1.121746e-05
 [87,] 9.341547e-06
 [88,] 7.763799e-06
 [89,] 6.439635e-06
 [90,] 5.330643e-06
 [91,] 4.403818e-06
 [92,] 3.630868e-06
 [93,] 2.987604e-06
 [94,] 2.453393e-06
 [95,] 2.010678e-06
 [96,] 1.644558e-06
 [97,] 1.342417e-06
 [98,] 1.093597e-06
 [99,] 8.891155e-07
[100,] 7.214241e-07
 [getOption("max.print") est atteint -- dernière ligne omises ]]
> theta.u214(0:100,c(-0.01,-0.001),1)
               [,1]
  [1,] 9.890603e-01
  [2,] 9.762857e-01
  [3,] 9.617507e-01
  [4,] 9.455391e-01
  [5,] 9.277435e-01
  [6,] 9.084640e-01
  [7,] 8.878078e-01
  [8,] 8.658877e-01
  [9,] 8.428216e-01
 [10,] 8.187308e-01
 [11,] 7.937395e-01
 [12,] 7.679735e-01
 [13,] 7.415594e-01
 [14,] 7.146231e-01
 [15,] 6.872893e-01
 [16,] 6.596803e-01
 [17,] 6.319152e-01
 [18,] 6.041094e-01
 [19,] 5.763731e-01
 [20,] 5.488116e-01
 [21,] 5.215240e-01
 [22,] 4.946029e-01
 [23,] 4.681343e-01
 [24,] 4.421969e-01
 [25,] 4.168620e-01
 [26,] 3.921935e-01
 [27,] 3.682475e-01
 [28,] 3.450728e-01
 [29,] 3.227104e-01
 [30,] 3.011942e-01
 [31,] 2.805509e-01
 [32,] 2.608004e-01
 [33,] 2.419559e-01
 [34,] 2.240245e-01
 [35,] 2.070076e-01
 [36,] 1.909011e-01
 [37,] 1.756960e-01
 [38,] 1.613789e-01
 [39,] 1.479324e-01
 [40,] 1.353353e-01
 [41,] 1.235635e-01
 [42,] 1.125903e-01
 [43,] 1.023865e-01
 [44,] 9.292152e-02
 [45,] 8.416299e-02
 [46,] 7.607771e-02
 [47,] 6.863175e-02
 [48,] 6.179085e-02
 [49,] 5.552066e-02
 [50,] 4.978707e-02
 [51,] 4.455638e-02
 [52,] 3.979556e-02
 [53,] 3.547241e-02
 [54,] 3.155573e-02
 [55,] 2.801543e-02
 [56,] 2.482262e-02
 [57,] 2.194974e-02
 [58,] 1.937058e-02
 [59,] 1.706032e-02
 [60,] 1.499558e-02
 [61,] 1.315439e-02
 [62,] 1.151621e-02
 [63,] 1.006189e-02
 [64,] 8.773671e-03
 [65,] 7.635094e-03
 [66,] 6.630998e-03
 [67,] 5.747444e-03
 [68,] 4.971667e-03
 [69,] 4.292011e-03
 [70,] 3.697864e-03
 [71,] 3.179600e-03
 [72,] 2.728509e-03
 [73,] 2.336736e-03
 [74,] 1.997218e-03
 [75,] 1.703620e-03
 [76,] 1.450278e-03
 [77,] 1.232143e-03
 [78,] 1.044727e-03
 [79,] 8.840473e-04
 [80,] 7.465858e-04
 [81,] 6.292386e-04
 [82,] 5.292763e-04
 [83,] 4.443047e-04
 [84,] 3.722295e-04
 [85,] 3.112233e-04
 [86,] 2.596957e-04
 [87,] 2.162663e-04
 [88,] 1.797399e-04
 [89,] 1.490841e-04
 [90,] 1.234098e-04
 [91,] 1.019529e-04
 [92,] 8.405830e-05
 [93,] 6.916608e-05
 [94,] 5.679854e-05
 [95,] 4.654923e-05
 [96,] 3.807320e-05
 [97,] 3.107832e-05
 [98,] 2.531787e-05
 [99,] 2.058393e-05
[100,] 1.670170e-05
 [getOption("max.print") est atteint -- dernière ligne omises ]]
> plot(theta.u214(0:100,c(-0.01,-0.001),1))
> 
> sim4 <- sim.Y.finite(100,3,1000,tfun=theta.u214,xfun=sim.X,lambda=c(-0.01,-0.001),beta=1)
> 
> modl <- gen.k(sim4,17)
> 
> k <- which.min(sapply(modl,KZ.k))-1
> k
[1] 14
> which.min(sapply(modl,AIC))-1
[1] 17
> which.min(sapply(modl,BIC))-1
[1] 15
> 
> bb <- prep.nls.finite(sim4,k)
> bb
$that
         X1          X2          X3          X4          X5          X6 
 0.75719631  1.01240420  1.02308867  0.71094751  1.10947650  0.85044936 
         X7          X8          X9         X10         X11         X12 
 0.88697296  0.59547510  1.20327239  0.83275565  0.87817346  0.92876683 
        X13         X14         X15         X16         X17         X18 
 0.57001057  0.80680147  0.58534827  0.87961283  0.66934357  0.61947019 
        X19         X20         X21         X22         X23         X24 
 0.61674540  0.34259804  0.75422564  0.09641419  0.66099702  0.49385268 
        X25         X26         X27         X28         X29         X30 
 0.40280940  0.29302788  0.41181407  0.59301182  0.15984937  0.32828289 
        X31         X32         X33         X34         X35         X36 
 0.50946114 -0.20329738  0.58065119  0.23623311  0.06570745  0.10509544 
        X37         X38         X39         X40         X41         X42 
 0.05002422  0.35469022 -0.01236190  0.24317239  0.27326358  0.04665825 
        X43         X44         X45 
-0.01501965  0.03890980  0.28404433 

$index
 [1]  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
[26] 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44

> sim4$theta
                 [,1]
   [1,]  9.890603e-01
   [2,]  9.762857e-01
   [3,]  9.617507e-01
   [4,]  9.455391e-01
   [5,]  9.277435e-01
   [6,]  9.084640e-01
   [7,]  8.878078e-01
   [8,]  8.658877e-01
   [9,]  8.428216e-01
  [10,]  8.187308e-01
  [11,]  7.937395e-01
  [12,]  7.679735e-01
  [13,]  7.415594e-01
  [14,]  7.146231e-01
  [15,]  6.872893e-01
  [16,]  6.596803e-01
  [17,]  6.319152e-01
  [18,]  6.041094e-01
  [19,]  5.763731e-01
  [20,]  5.488116e-01
  [21,]  5.215240e-01
  [22,]  4.946029e-01
  [23,]  4.681343e-01
  [24,]  4.421969e-01
  [25,]  4.168620e-01
  [26,]  3.921935e-01
  [27,]  3.682475e-01
  [28,]  3.450728e-01
  [29,]  3.227104e-01
  [30,]  3.011942e-01
  [31,]  2.805509e-01
  [32,]  2.608004e-01
  [33,]  2.419559e-01
  [34,]  2.240245e-01
  [35,]  2.070076e-01
  [36,]  1.909011e-01
  [37,]  1.756960e-01
  [38,]  1.613789e-01
  [39,]  1.479324e-01
  [40,]  1.353353e-01
  [41,]  1.235635e-01
  [42,]  1.125903e-01
  [43,]  1.023865e-01
  [44,]  9.292152e-02
  [45,]  8.416299e-02
  [46,]  7.607771e-02
  [47,]  6.863175e-02
  [48,]  6.179085e-02
  [49,]  5.552066e-02
  [50,]  4.978707e-02
  [51,]  4.455638e-02
  [52,]  3.979556e-02
  [53,]  3.547241e-02
  [54,]  3.155573e-02
  [55,]  2.801543e-02
  [56,]  2.482262e-02
  [57,]  2.194974e-02
  [58,]  1.937058e-02
  [59,]  1.706032e-02
  [60,]  1.499558e-02
  [61,]  1.315439e-02
  [62,]  1.151621e-02
  [63,]  1.006189e-02
  [64,]  8.773671e-03
  [65,]  7.635094e-03
  [66,]  6.630998e-03
  [67,]  5.747444e-03
  [68,]  4.971667e-03
  [69,]  4.292011e-03
  [70,]  3.697864e-03
  [71,]  3.179600e-03
  [72,]  2.728509e-03
  [73,]  2.336736e-03
  [74,]  1.997218e-03
  [75,]  1.703620e-03
  [76,]  1.450278e-03
  [77,]  1.232143e-03
  [78,]  1.044727e-03
  [79,]  8.840473e-04
  [80,]  7.465858e-04
  [81,]  6.292386e-04
  [82,]  5.292763e-04
  [83,]  4.443047e-04
  [84,]  3.722295e-04
  [85,]  3.112233e-04
  [86,]  2.596957e-04
  [87,]  2.162663e-04
  [88,]  1.797399e-04
  [89,]  1.490841e-04
  [90,]  1.234098e-04
  [91,]  1.019529e-04
  [92,]  8.405830e-05
  [93,]  6.916608e-05
  [94,]  5.679854e-05
  [95,]  4.654923e-05
  [96,]  3.807320e-05
  [97,]  3.107832e-05
  [98,]  2.531787e-05
  [99,]  2.058393e-05
 [100,]  1.670170e-05
 [getOption("max.print") est atteint -- 2903 lignes omises ]]
> 
> summary(nls(that~theta.u214(index,lambda),data=bb,start=list(lambda=c(0.1,0.1),beta=0.5)))
Erreur dans beta * exp(pol) : 'beta' est manquant
Erreur dans summary(nls(that ~ theta.u214(index, lambda), data = bb, start = list(lambda = c(0.1,  : 
  erreur lors de l'évaluation de l'argument 'object' lors de la sélection d'une méthode pour la fonction 'summary'
> 
> sn4 <- nls(that~theta.u214(index,lambda,beta),data=bb,start=list(lambda=c(0.1,0.1),beta=0.5))
Erreur dans nlsModel(formula, mf, start, wts) : 
  matrice de gradient singulière pour les estimations initiales des paramètres
> bb$index
 [1]  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
[26] 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
> 
> sn4 <- nls(that~theta.u214(index,lambda,beta),data=bb,start=list(lambda=c(-0.1,-0.1),beta=0.5),trace=TRUE)
15.27956 :  -0.1 -0.1  0.5 
Erreur dans numericDeriv(form[[3L]], names(ind), env) : 
  Valeur manquante ou infinie obtenue au cours du calcul du modèle
> sn4 <- nls(that~theta.u214(index,lambda,beta),data=bb,start=list(lambda=c(-0.1,-0.001),beta=0.5),trace=TRUE)
10.93594 :  -0.100 -0.001  0.500 
7.363955 :  -0.087175089  0.001797203  0.557147469 
4.756453 :  -0.0634721385  0.0009947573  0.6952673777 
2.160312 :  -0.0294121991 -0.0001438144  0.8550160814 
1.454411 :   0.001053522 -0.001232245  0.946824869 
1.442276 :   0.003554946 -0.001353260  0.921742120 
1.442206 :   0.004056093 -0.001373587  0.920183368 
1.442205 :   0.004102947 -0.001375477  0.920034324 
1.442205 :   0.004107112 -0.001375644  0.920021084 
> sn4 <- nls(that~theta.u214(index,lambda,beta),data=bb,start=list(lambda=c(-0.1,-0.01),beta=0.5),trace=TRUE)
12.94127 :  -0.10 -0.01  0.50 
Erreur dans nls(that ~ theta.u214(index, lambda, beta), data = bb, start = list(lambda = c(-0.1,  : 
  gradient singulier
> sn4 <- nls(that~theta.u214(index,lambda,beta),data=bb,start=list(lambda=c(-0.01,-0.01),beta=0.5),trace=TRUE)
11.04051 :  -0.01 -0.01  0.50 
Erreur dans nls(that ~ theta.u214(index, lambda, beta), data = bb, start = list(lambda = c(-0.01,  : 
  gradient singulier
> sn4 <- nls(that~theta.u214(index,lambda,beta),data=bb,start=list(lambda=c(-0.01,-0.001),beta=0.5),trace=TRUE)
5.279536 :  -0.010 -0.001  0.500 
1.589378 :   0.017551490 -0.001716093  0.917694803 
1.442572 :   0.005065716 -0.001404497  0.919011755 
1.442205 :   0.004138282 -0.001377132  0.919975339 
1.442205 :   0.004111521 -0.001375816  0.920005962 
1.442205 :   0.004107833 -0.001375674  0.920018825 
> coef(sn4)
     lambda1      lambda2         beta 
 0.004107833 -0.001375674  0.920018825 
> theta.u214(index,coef(sn4)[1:2],coef(sn4)[3])
Erreur dans poly(index + 1, 2, raw = TRUE) : objet 'index' introuvable
> theta.u214(bb$index,coef(sn4)[1:2],coef(sn4)[3])
            [,1]
 [1,] 0.92253590
 [2,] 0.92251820
 [3,] 0.91996587
 [4,] 0.91489992
 [5,] 0.90736197
 [6,] 0.89741363
 [7,] 0.88513569
 [8,] 0.87062703
 [9,] 0.85400330
[10,] 0.83539536
[11,] 0.81494757
[12,] 0.79281596
[13,] 0.76916623
[14,] 0.74417167
[15,] 0.71801111
[16,] 0.69086677
[17,] 0.66292217
[18,] 0.63436015
[19,] 0.60536087
[20,] 0.57610004
[21,] 0.54674720
[22,] 0.51746423
[23,] 0.48840399
[24,] 0.45970919
[25,] 0.43151139
[26,] 0.40393032
[27,] 0.37707327
[28,] 0.35103478
[29,] 0.32589646
[30,] 0.30172705
[31,] 0.27858259
[32,] 0.25650674
[33,] 0.23553134
[34,] 0.21567695
[35,] 0.19695357
[36,] 0.17936145
[37,] 0.16289188
[38,] 0.14752815
[39,] 0.13324639
[40,] 0.12001654
[41,] 0.10780325
[42,] 0.09656678
[43,] 0.08626382
[44,] 0.07684839
[45,] 0.06827253
> summary(sn4)

Formula: that ~ theta.u214(index, lambda, beta)

Parameters:
          Estimate Std. Error t value Pr(>|t|)    
lambda1  0.0041078  0.0176915   0.232   0.8175    
lambda2 -0.0013757  0.0005448  -2.525   0.0154 *  
beta     0.9200188  0.1079327   8.524 1.05e-10 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 0.1853 on 42 degrees of freedom

Number of iterations to convergence: 5 
Achieved convergence tolerance: 4.067e-06 

> 
> sn4u <- nls(that~theta.u214(index,lambda,beta),data=bb,start=list(lambda=c(-0.01,-0.001),beta=0.5),trace=TRUE)
5.279536 :  -0.010 -0.001  0.500 
1.589378 :   0.017551490 -0.001716093  0.917694803 
1.442572 :   0.005065716 -0.001404497  0.919011755 
1.442205 :   0.004138282 -0.001377132  0.919975339 
1.442205 :   0.004111521 -0.001375816  0.920005962 
1.442205 :   0.004107833 -0.001375674  0.920018825 
>
> sn4r <- nls(that~theta.r214(index,lambda,beta),data=bb,start=list(lambda=c(-0.01,-0.001),beta=0.5),trace=TRUE)
15.99298 :  -0.010 -0.001  0.500 
15.05453 :   0.60891969 -0.01708640 22.52797857 
2.712562 :  -0.0720034063  0.0006537851 17.6926001846 
1.484624 :   0.016161004 -0.001574508 22.662225520 
1.442306 :   0.003160809 -0.001349733 22.509018950 
1.442205 :   0.004092721 -0.001374738 22.505864915 
1.442205 :   0.004104331 -0.001375541 22.504262547 
1.442205 :   0.004107273 -0.001375651 22.504154780 
> theta.r214(bb$index,coef(sn4r)[1:2],coef(sn4r)[3])
            [,1]
 [1,] 0.92253714
 [2,] 0.92251898
 [3,] 0.91996624
 [4,] 0.91489992
 [5,] 0.90736165
 [6,] 0.89741303
 [7,] 0.88513487
 [8,] 0.87062604
 [9,] 0.85400218
[10,] 0.83539415
[11,] 0.81494633
[12,] 0.79281473
[13,] 0.76916504
[14,] 0.74417057
[15,] 0.71801012
[16,] 0.69086592
[17,] 0.66292148
[18,] 0.63435964
[19,] 0.60536056
[20,] 0.57609993
[21,] 0.54674730
[22,] 0.51746455
[23,] 0.48840452
[24,] 0.45970992
[25,] 0.43151232
[26,] 0.40393144
[27,] 0.37707456
[28,] 0.35103622
[29,] 0.32589804
[30,] 0.30172876
[31,] 0.27858439
[32,] 0.25650863
[33,] 0.23553329
[34,] 0.21567895
[35,] 0.19695560
[36,] 0.17936348
[37,] 0.16289391
[38,] 0.14753016
[39,] 0.13324836
[40,] 0.12001847
[41,] 0.10780512
[42,] 0.09656858
[43,] 0.08626555
[44,] 0.07685004
[45,] 0.06827409
> theta.r214(bb$index,coef(sn4r)[1:2],coef(sn4r)[3]) - theta.u214(bb$index,coef(sn4u)[1:2],coef(sn4u)[3])
               [,1]
 [1,]  1.237091e-06
 [2,]  7.833851e-07
 [3,]  3.708591e-07
 [4,]  2.554553e-09
 [5,] -3.192194e-07
 [6,] -5.929079e-07
 [7,] -8.177167e-07
 [8,] -9.936041e-07
 [9,] -1.121257e-06
[10,] -1.202055e-06
[11,] -1.238021e-06
[12,] -1.231759e-06
[13,] -1.186385e-06
[14,] -1.105455e-06
[15,] -9.928717e-07
[16,] -8.528098e-07
[17,] -6.896214e-07
[18,] -5.077526e-07
[19,] -3.116584e-07
[20,] -1.057241e-07
[21,]  1.058092e-07
[22,]  3.189104e-07
[23,]  5.298169e-07
[24,]  7.350833e-07
[25,]  9.316211e-07
[26,]  1.116728e-06
[27,]  1.288107e-06
[28,]  1.443878e-06
[29,]  1.582576e-06
[30,]  1.703149e-06
[31,]  1.804934e-06
[32,]  1.887645e-06
[33,]  1.951337e-06
[34,]  1.996379e-06
[35,]  2.023418e-06
[36,]  2.033340e-06
[37,]  2.027230e-06
[38,]  2.006335e-06
[39,]  1.972025e-06
[40,]  1.925752e-06
[41,]  1.869022e-06
[42,]  1.803355e-06
[43,]  1.730260e-06
[44,]  1.651209e-06
[45,]  1.567614e-06
> sum(abs(theta.r214(bb$index,coef(sn4r)[1:2],coef(sn4r)[3]) - theta.u214(bb$index,coef(sn4u)[1:2],coef(sn4u)[3])))
[1] 5.366824e-05
> 
> sim4.100 <- foreach(i=1:100,.combine=c) %do% {
+     list(sim.Y.finite(100,3,1000,tfun=theta.u214,xfun=sim.X,lambda=c(-0.01,-0.001),beta=1))
+ }
> 
> modl4.100 <- lapply(sim4.100,gen.k,kmax=17)
> 
> sim4ur <- foreach(i=1:100,.combine=c) %do% {
+ 
+     k <- which.min(sapply(modl4.100,KZ.k[[i]]))-1
+     bb <- prep.nls.finite(sim4.100[[i]],k)
+     sn4u <- try(nls(that~theta.u214(index,lambda,beta),data=bb,start=list(lambda=c(-0.01,-0.001),beta=0.5),trace=TRUE))
+ 
+     sn4r <- try(nls(that~theta.r214(index,lambda,beta),data=bb,start=list(lambda=c(-0.01,-0.001),beta=0.5),trace=TRUE))
+     list(k=k,bb=bb,u=sn4u,r=sn4r)
+ }
Erreur dans { : task 1 failed - "objet de type 'closure' non indiçable"
> length(modl4.100)
[1] 100
> sim4ur <- foreach(i=1:100,.combine=c) %do% {
+ 
+     k <- which.min(sapply(modl4.100[[i]],KZ.k))-1
+     bb <- prep.nls.finite(sim4.100[[i]],k)
+     
+     sn4u <- try(nls(that~theta.u214(index,lambda,beta),data=bb,start=list(lambda=c(-0.01,-0.001),beta=0.5),trace=TRUE))
+ 
+     sn4r <- try(nls(that~theta.r214(index,lambda,beta),data=bb,start=list(lambda=c(-0.01,-0.001),beta=0.5),trace=TRUE))
+     
+     list(k=k,bb=bb,u=sn4u,r=sn4r)
+ }
5.717468 :  -0.010 -0.001  0.500 
2.064349 :  -0.0375934016 -0.0004050457  1.0959213291 
1.916388 :  -0.0236448644 -0.0006943783  1.1024616446 
1.915678 :  -0.0242291487 -0.0006893966  1.1019251983 
1.915678 :  -0.0242541007 -0.0006886992  1.1020517907 
16.36658 :  -0.010 -0.001  0.500 
9.453704 :  -0.316074762  0.005599421 11.210426759 
5.921963 :   0.042003012 -0.001023603 18.792752738 
3.072817 :  -0.0955343475  0.0008307613 21.9203032375 
1.926882 :  -0.0342653091 -0.0004076633 21.9328311578 
1.915709 :  -0.0247817107 -0.0006721312 21.9262172411 
1.915678 :  -0.0242779156 -0.0006879887 21.9242771197 
1.915678 :  -0.0242561482 -0.0006886381 21.9241918921 
5.256022 :  -0.010 -0.001  0.500 
1.587774 :  -0.0379205790 -0.0001383899  1.0682248289 
1.493197 :  -0.0247467916 -0.0005422904  1.0766343267 
1.492886 :  -0.0242383386 -0.0005641479  1.0718426033 
1.492885 :  -0.024190347 -0.000565729  1.071615213 
1.492885 :  -0.0241875253 -0.0005658193  1.0716012333 
15.90759 :  -0.010 -0.001  0.500 
13.40998 :  -0.168244113  0.003883306  6.094725048 
4.022767 :  -0.0968542877  0.0009303841 13.3674801188 
1.834816 :   0.013728664 -0.001269767 22.944505375 
1.493695 :  -0.026009055 -0.000531078 22.898814589 
1.492886 :  -0.0242365486 -0.0005642602 22.9086336921 
1.492885 :  -0.0241901111 -0.0005657365 22.9073194946 
1.492885 :  -0.0241875153 -0.0005658196 22.9072471996 
5.459212 :  -0.010 -0.001  0.500 
1.57035 :   0.015948666 -0.001968290  0.959004505 
1.498160 :   0.002745087 -0.001484081  0.963482217 
1.498065 :   0.003114650 -0.001498305  0.959942788 
1.498065 :   0.003100258 -0.001497883  0.960024466 
16.26343 :  -0.010 -0.001  0.500 
12.66438 :   0.56566184 -0.02248117 22.01273319 
2.591484 :  -3.554567e-02 -9.106886e-05  1.762906e+01 
1.502100 :   0.008623232 -0.001636468 22.011683351 
1.498072 :   0.002834380 -0.001489548 22.024261482 
1.498065 :   0.003111863 -0.001498242 22.021321965 
1.498065 :   0.003100405 -0.001497888 22.021436838 
6.604994 :  -0.010 -0.001  0.500 
2.269175 :   0.025450397 -0.001804975  0.936301581 
1.879659 :   0.009900466 -0.001463159  0.931548711 
1.877372 :   0.007621999 -0.001409058  0.937703053 
1.877371 :   0.007530701 -0.001406081  0.938094478 
1.877371 :   0.007525636 -0.001405907  0.938116778 
18.07715 :  -0.010 -0.001  0.500 
9.307222 :   0.383227060 -0.009929034 12.097072224 
3.560252 :  -0.0608021563  0.0002190052 16.7747310631 
1.942746 :   0.025736473 -0.001785799 23.739604413 
1.877396 :   0.007460275 -0.001408412 23.669184304 
1.877371 :   0.007533271 -0.001406160 23.678321119 
1.877371 :   0.007525770 -0.001405912 23.678491249 
4.565264 :  -0.010 -0.001  0.500 
1.147476 :  -0.0195352928 -0.0006827184  0.9995620219 
1.138912 :  -0.0155411950 -0.0008135033  1.0027465985 
1.138899 :  -0.0152837289 -0.0008232693  1.0014700650 
1.138899 :  -0.0152574950 -0.0008242136  1.0013606107 
1.138899 :  -0.0152550784 -0.0008243007  1.0013505034 
14.84553 :  -0.010 -0.001  0.500 
5.643468 :  -0.113997436  0.002460458 10.931888580 
1.371352 :   0.034538683 -0.002185239 21.467061728 
1.139168 :  -0.0146678605 -0.0008577273 21.3149400610 
1.1389 :  -0.0151544110 -0.0008278008 21.3703931984 
1.138899 :  -0.015246139 -0.000824623 21.372127564 
1.138899 :  -0.0152540330 -0.0008243383 21.3722794338 
5.002857 :  -0.010 -0.001  0.500 
1.523633 :  -0.0105231475 -0.0009207244  0.9745986938 
1.522125 :  -0.0104961115 -0.0009513018  0.9755347540 
1.522122 :  -0.010368802 -0.000956081  0.975018352 
1.522122 :  -0.0103632119 -0.0009563121  0.9750019490 
15.39109 :  -0.010 -0.001  0.500 
8.060118 :  -0.0217520914  0.0007808574 22.1177587956 
2.53115 :  -0.094156244  0.001163758 22.133825581 
1.532983 :  -0.0172970184 -0.0006997446 22.2424979026 
1.522210 :  -0.0108795379 -0.0009348036 22.1355547770 
1.522122 :  -0.010394695 -0.000955057 22.123360496 
1.522122 :  -0.0103645107 -0.0009562595 22.1220627906 
1.522122 :  -0.0103629669 -0.0009563219 22.1219871210 
4.890185 :  -0.010 -0.001  0.500 
1.360319 :  -0.0306002474 -0.0004049105  1.0466975997 
1.306473 :  -0.0203041011 -0.0006982909  1.0487633849 
1.306398 :  -0.0205829335 -0.0006926084  1.0487148308 
1.306398 :  -0.0205863989 -0.0006924853  1.0487279031 
15.26745 :  -0.010 -0.001  0.500 
5.910402 :  -0.22968262  0.00534608 10.77479094 
2.868417 :   0.116457840 -0.004346855 20.730000569 
1.353032 :  -0.0409310649 -0.0001470845 21.0262330676 
1.306453 :  -0.021367792 -0.000666702 21.058996131 
1.306398 :  -0.0206099135 -0.0006916148 21.0534641655 
1.306398 :  -0.020587335 -0.000692451 21.053170113 
4.502401 :  -0.010 -0.001  0.500 
1.228637 :  -0.0111043737 -0.0008504106  0.9582413646 
1.223957 :  -0.0102896691 -0.0009323554  0.9570947582 
1.223955 :  -0.0103602287 -0.0009309383  0.9574398458 
14.63242 :  -0.010 -0.001  0.500 
6.731183 :  -0.0220449418  0.0006315085 10.8667225215 
2.984081 :  -0.0694040622 -0.0002321667 21.2065089851 
1.299236 :  -0.0299185120 -0.0002018366 21.2614899886 
1.224203 :  -0.0108505692 -0.0009043676 21.2130750234 
1.223955 :  -0.0103277561 -0.0009321553 21.2298923472 
1.223955 :  -0.0103618975 -0.0009308844 21.2307770521 
1.223955 :  -0.0103607781 -0.0009309293 21.2307437751 
4.479379 :  -0.010 -0.001  0.500 
1.029254 :   0.006811961 -0.001572852  0.940817782 
0.9999299 :  -0.0006699292 -0.0013154121  0.9384195778 
0.9999059 :  -0.0009735735 -0.0013076606  0.9393403859 
0.9999059 :  -0.000982291 -0.001307410  0.939387004 
14.8379 :  -0.010 -0.001  0.500 
6.996074 :   0.36296725 -0.01370851 21.55108279 
1.719666 :  -3.530962e-02  7.033265e-05  1.917080e+01 
1.003488 :  -0.004739903 -0.001155607 21.548052039 
0.9999082 :  -0.001114894 -0.001303005 21.551913049 
0.9999059 :  -0.0009855635 -0.0013073241 21.5534585220 
0.9999059 :  -0.000982615 -0.001307401 21.553470545 
4.531782 :  -0.010 -0.001  0.500 
1.549129 :   0.009310174 -0.001239624  0.866967416 
1.402314 :   0.000736201 -0.001131791  0.868165173 
1.401775 :   0.0003113794 -0.0011338337  0.8691482667 
1.401775 :   0.0003181133 -0.0011341478  0.8691219097 
14.52106 :  -0.010 -0.001  0.500 
9.538043 :   0.20689295 -0.00369147 11.17842282 
5.271913 :  -0.151874396  0.001764297 15.748651408 
1.985691 :   0.0049737989 -0.0007037573 21.6830838521 
1.411192 :  -0.0082504839 -0.0008755304 21.8557975906 
1.401783 :   0.0002202917 -0.0011294365 21.8559779899 
1.401775 :   0.0003177615 -0.0011341308 21.8562565751 
4.823264 :  -0.010 -0.001  0.500 
1.000506 :  -0.0113930890 -0.0008934637  0.9995822619 
0.9989625 :  -0.0112152934 -0.0009293205  1.0019339848 
0.9989502 :  -0.010977824 -0.000937572  1.000869351 
0.99895 :  -0.0109486101 -0.0009385872  1.0007438486 
0.99895 :  -0.0109450554 -0.0009387106  1.0007285151 
15.55822 :  -0.010 -0.001  0.500 
13.79834 :  -0.041582130  0.001415242 22.860943656 
5.846489 :  -0.163370005  0.002427596 22.605630118 
1.090761 :  -0.0366233486 -0.0001895100 22.9257988372 
1.001735 :  -0.0144539493 -0.0008104024 22.9588562788 
0.9990022 :  -0.01148272 -0.00091979 22.88749332 
0.9989508 :  -0.0110128753 -0.0009363528 22.8734074014 
0.99895 :  -0.0109528929 -0.0009384386 22.8712581046 
0.99895 :  -0.0109455813 -0.0009386924 22.8709880918 
0.99895 :  -0.0109446906 -0.0009387233 22.8709552015 
5.054049 :  -0.010 -0.001  0.500 
1.048014 :  -0.0218381771 -0.0004691525  1.0314090534 
1.031008 :  -0.016218058 -0.000720062  1.032343357 
1.030933 :  -0.0158391295 -0.0007378775  1.0311134423 
1.030933 :  -0.0158210441 -0.0007387104  1.0310730968 
1.030933 :  -0.0158203086 -0.0007387448  1.0310716332 
15.89948 :  -0.010 -0.001  0.500 
15.8048 :  -0.139114035  0.004789730 11.457979727 
5.621319 :  -0.224157957  0.004670694 15.830754151 
1.392810 :   0.032768021 -0.001866071 22.036739082 
1.036766 :  -0.0221942432 -0.0005799883 22.4311887679 
1.030937 :  -0.0156683554 -0.0007420204 22.4331233814 
1.030933 :  -0.0158267891 -0.0007385745 22.4296815501 
1.030933 :  -0.0158201009 -0.0007387499 22.4297246548 
6.173231 :  -0.010 -0.001  0.500 
2.507038 :  -0.0095877353 -0.0007268556  0.9647547833 
2.448094 :  -0.0099356686 -0.0008547096  0.9657439199 
2.447736 :  -0.0092791053 -0.0008852948  0.9632354099 
2.447736 :  -0.0092356289 -0.0008864969  0.9629855237 
2.447736 :  -0.0092332995 -0.0008865586  0.9629720126 
16.79139 :  -0.010 -0.001  0.500 
13.31184 :  -0.0076634605  0.0005480888  6.1476428146 
10.23323 :  -0.214145779  0.002349649 14.600620208 
6.28807 :  -0.181323784  0.003124602 16.712555872 
3.481322 :  -0.085830485  0.001054904 19.808118621 
2.466169 :  -0.010045742 -0.000766984 23.170655829 
2.447764 :  -0.0095802065 -0.0008750698 23.0835317298 
2.447736 :  -0.0092518322 -0.0008860764 23.0866139673 
2.447736 :  -0.0092341713 -0.0008865353 23.0865595064 
6.193698 :  -0.010 -0.001  0.500 
1.983318 :  -0.0129576172 -0.0007125966  1.0158595188 
1.953504 :  -0.0115791482 -0.0008556087  1.0168476356 
1.953352 :  -0.0110384668 -0.0008775343  1.0144846233 
1.953352 :  -0.011021273 -0.000877895  1.014357402 
17.31632 :  -0.010 -0.001  0.500 
13.57718 :  -0.026952537  0.000647346  6.387301379 
6.318209 :  -0.149966459  0.001236668 15.196079299 
3.918385 :  -0.085320717  0.001114121 19.722927965 
2.035139 :  -0.016120201 -0.000571598 24.236635646 
1.954151 :  -0.0125409406 -0.0008266376 24.0267515842 
1.953352 :  -0.0110788190 -0.0008765155 24.0429440273 
1.953352 :  -0.0110228661 -0.0008778566 24.0440526650 
1.953352 :  -0.0110205680 -0.0008779131 24.0440430447 
5.340556 :  -0.010 -0.001  0.500 
1.602679 :  -0.0194503194 -0.0005459156  1.0077775859 
1.589517 :  -0.0148393978 -0.0007683195  1.0082339047 
1.589490 :  -0.0145768016 -0.0007800157  1.0071976291 
1.589490 :  -0.0145740272 -0.0007801413  1.0071909338 
15.93211 :  -0.010 -0.001  0.500 
13.73078 :  -0.113070606  0.003952505 11.259869198 
4.600094 :  -0.17944974  0.00363838 15.99680819 
1.789687 :   0.022538527 -0.001640517 21.908025572 
1.590203 :  -0.0168838239 -0.0007224617 22.0266500013 
1.589490 :  -0.0145691033 -0.0007802083 22.0229944808 
1.589490 :  -0.0145740704 -0.0007801404 22.0227504914 
6.246402 :  -0.010 -0.001  0.500 
2.300625 :  -0.0167294971 -0.0008180645  1.0303875363 
2.293319 :  -0.013642336 -0.000896229  1.031568093 
2.293309 :  -0.013555601 -0.000900923  1.031285238 
2.293309 :  -0.0135323190 -0.0009017472  1.0311854697 
2.293309 :  -0.0135294898 -0.0009018521  1.0311743694 
17.11077 :  -0.010 -0.001  0.500 
10.77022 :  -0.163570310  0.003151853 23.092213983 
3.539396 :  -0.0622106684  0.0007804235 23.0139114398 
2.403794 :  -0.0324484569 -0.0002301439 23.3982320305 
2.298541 :  -0.0177795424 -0.0007417876 23.2109466727 
2.293424 :  -0.0142294988 -0.0008758496 23.1355639827 
2.293311 :  -0.01362636 -0.00089828 23.11206683 
2.293309 :  -0.013542006 -0.000901391 23.107911194 
2.293309 :  -0.013530767 -0.000901805 23.107331445 
2.293309 :  -0.0135292867 -0.0009018597 23.1072542953 
5.458473 :  -0.010 -0.001  0.500 
2.244438 :  -0.0074033276 -0.0009717057  0.9437231381 
2.237159 :  -0.0088715243 -0.0009772745  0.9448598716 
2.237153 :  -0.0087527757 -0.0009823821  0.9443295234 
2.237153 :  -0.008740914 -0.000982796  0.944281006 
15.58112 :  -0.010 -0.001  0.500 
11.63801 :   0.0483318964 -0.0003643937 21.7602109861 
9.408 :  -0.173662936  0.002398309 21.797898792 
2.417493 :  -4.770344e-02  5.980659e-05  2.141656e+01 
2.238633 :  -0.011206477 -0.000887564 21.812650728 
2.237162 :  -0.008975699 -0.000974355 21.769097023 
2.237153 :  -0.0087573744 -0.0009822155 21.7638250942 
2.237153 :  -0.0087412499 -0.0009827841 21.7633358097 
5.390223 :  -0.010 -0.001  0.500 
1.652155 :  -0.028674734 -0.000188257  1.024563746 
1.580155 :  -0.0204492843 -0.0005629703  1.0316596539 
1.579367 :  -0.0188743732 -0.0006208431  1.0239254127 
1.579366 :  -0.0187947022 -0.0006231906  1.0235015041 
1.579366 :  -0.018791668 -0.000623272  1.023483453 
16.06985 :  -0.010 -0.001  0.500 
14.92466 :  -0.11487778  0.00355877  6.12857360 
7.701518 :  -0.250272267  0.004469255  9.747387039 
3.263464 :  -4.501965e-02  6.217418e-05  1.547358e+01 
1.593181 :  -0.0085709626 -0.0008790256 23.0222336196 
1.579377 :  -0.0185104386 -0.0006305806 23.0172146688 
1.579366 :  -0.0187810035 -0.0006235613 23.0196200652 
1.579366 :  -0.018791150 -0.000623286 23.019669072 
5.728512 :  -0.010 -0.001  0.500 
1.642937 :  -0.009557254 -0.000873029  1.004308437 
1.631245 :  -0.01106683 -0.00089522  1.01047464 
1.631161 :  -0.0105361626 -0.0009139198  1.0079451425 
1.631158 :  -0.010425944 -0.000917678  1.007460599 
1.631158 :  -0.010404823 -0.000918399  1.007367667 
1.631158 :  -0.0104007845 -0.0009185368  1.0073498784 
16.72221 :  -0.010 -0.001  0.500 
11.06524 :  -0.0049481672  0.0004487703 12.0276833444 
4.246433 :  -0.135476431  0.001738405 17.911259668 
1.82292 :   0.0005095346 -0.0009019375 23.9769367554 
1.633310 :  -0.0143904946 -0.0007991024 23.6387485437 
1.631234 :  -0.0110390415 -0.0008964012 23.6106474047 
1.631161 :  -0.0105279571 -0.0009141973 23.5892940499 
1.631158 :  -0.0104243905 -0.0009177312 23.5849634498 
1.631158 :  -0.0104045205 -0.0009184093 23.5841102649 
1.631158 :  -0.0104007238 -0.0009185388 23.5839464812 
5.174293 :  -0.010 -0.001  0.500 
1.782570 :  -0.005357700 -0.001226844  0.969794555 
1.780553 :  -0.007158108 -0.001133925  0.968056836 
1.780550 :  -0.007296695 -0.001129041  0.968586698 
1.780550 :  -0.007303233 -0.001128787  0.968610410 
15.4536 :  -0.010 -0.001  0.500 
3.483194 :   0.092987609 -0.006032458 21.448243792 
2.073398 :  -0.0128205787 -0.0006561393 19.8609407521 
1.781485 :  -0.010389936 -0.001034742 21.462887694 
1.780553 :  -0.007416587 -0.001124222 21.445726099 
1.780550 :  -0.007310851 -0.001128495 21.442292099 
1.780550 :  -0.007304045 -0.001128755 21.442084489 
4.860868 :  -0.010 -0.001  0.500 
0.7969979 :  -0.0131221849 -0.0008404364  1.0200217233 
0.794835 :  -0.0115722638 -0.0009198977  1.0201222625 
0.794833 :  -0.0115054369 -0.0009228093  1.0198835677 
0.794833 :  -0.0115050114 -0.0009228325  1.0198833788 
15.80918 :  -0.010 -0.001  0.500 
6.70416 :  -0.0450685010  0.0007922258 11.7541194078 
1.248158 :  -0.0320939281 -0.0008377139 23.0565941793 
0.798278 :  -0.015512071 -0.000784363 23.001073637 
0.7948355 :  -0.0115487072 -0.0009204068 23.0108576342 
0.794833 :  -0.0115056582 -0.0009228041 23.0098100574 
0.794833 :  -0.0115050076 -0.0009228326 23.0097711793 
6.33345 :  -0.010 -0.001  0.500 
2.043857 :  -0.023384123 -0.000932943  1.104832557 
1.946092 :  -0.01547526 -0.00098575  1.10205543 
1.945571 :  -0.0159505236 -0.0009877477  1.1040558408 
1.945571 :  -0.0159255795 -0.0009886965  1.1039348798 
17.55666 :  -0.010 -0.001  0.500 
7.529878 :  -0.1617131357 -0.0002398884 11.7271443050 
5.911528 :  -0.163389708  0.001882017 12.972545819 
4.125503 :  -0.111995331  0.001006270 15.408137069 
2.433132 :  -0.0490133086 -0.0002461024 19.1840962372 
1.951408 :  -0.010898135 -0.001089656 22.966449468 
1.945572 :  -0.0159999763 -0.0009870578 22.9475592089 
1.945571 :  -0.0159247172 -0.0009887213 22.9485127257 
3.777434 :  -0.010 -0.001  0.500 
1.234367 :   0.016132230 -0.002235680  0.879616201 
1.209135 :   0.007682861 -0.001844331  0.872522385 
1.209044 :   0.006977363 -0.001809697  0.873407441 
1.209044 :   0.006911387 -0.001806444  0.873556758 
1.209044 :   0.006904980 -0.001806128  0.873571493 
12.97192 :  -0.010 -0.001  0.500 
8.093562 :   0.53109922 -0.02658625 18.55569698 
1.621583 :   0.003685177 -0.001745105 15.097466681 
1.209183 :   0.007951762 -0.001830774 18.520531612 
1.209044 :   0.006837471 -0.001804071 18.521069176 
1.209044 :   0.006905623 -0.001806102 18.521293400 
1.209044 :   0.006904067 -0.001806086 18.521243050 
4.897827 :  -0.010 -0.001  0.500 
1.228989 :   0.003620528 -0.001397960  0.956370776 
1.203019 :  -0.002036814 -0.001241121  0.953326034 
1.202974 :  -0.002511167 -0.001224682  0.954614786 
1.202973 :  -0.002555631 -0.001223014  0.954782966 
1.202973 :  -0.002560558 -0.001222831  0.954801895 
15.49174 :  -0.010 -0.001  0.500 
6.264058 :   0.295973154 -0.009939816 22.255268909 
1.421079 :  -0.0347488528 -0.0003116849 20.5120733829 
1.204235 :  -0.002963623 -0.001177363 22.308026267 
1.202982 :  -0.002811371 -0.001213819 22.242321896 
1.202974 :  -0.002587042 -0.001221840 22.236675941 
1.202973 :  -0.002564075 -0.001222700 22.235839432 
1.202973 :  -0.002561530 -0.001222795 22.235747033 
4.507651 :  -0.010 -0.001  0.500 
1.240779 :  -0.0093393723 -0.0009853738  0.9606806088 
1.240164 :  -0.0096798352 -0.0009915905  0.9607842494 
1.240164 :  -0.0096663549 -0.0009921867  0.9607288790 
14.62951 :  -0.010 -0.001  0.500 
1.943695 :   0.0044103739 -0.0006809567 21.1099113860 
1.251378 :  -0.02027794 -0.00065512 21.11620602 
1.240178 :  -0.009927859 -0.000981533 21.112946846 
1.240164 :  -0.0096716584 -0.0009919872 21.1102243706 
1.240164 :  -0.009666126 -0.000992195 21.110111920 
5.713789 :  -0.010 -0.001  0.500 
2.011377 :  -0.0251035401 -0.0004186841  1.0250788762 
1.991557 :  -0.0182978832 -0.0006749759  1.0273096390 
1.99147 :  -0.0179119554 -0.0006935658  1.0260090583 
1.991469 :  -0.0178631819 -0.0006955419  1.0258473002 
1.991469 :  -0.0178595561 -0.0006956986  1.0258374005 
16.27669 :  -0.010 -0.001  0.500 
14.21739 :  -0.174727865  0.005340165 11.215114185 
6.386466 :  -0.153992159  0.002002326 19.557265829 
2.144882 :  -3.454935e-02  6.909793e-05  2.195407e+01 
1.994848 :  -0.0214337713 -0.0005479224 22.0020136770 
1.991501 :  -0.0181937985 -0.0006813113 21.9640136527 
1.991470 :  -0.0178898434 -0.0006944272 21.9547185446 
1.991469 :  -0.0178617475 -0.0006956055 21.9537358063 
1.991469 :  -0.0178594187 -0.0006957044 21.9536485980 
5.450754 :  -0.010 -0.001  0.500 
1.558018 :  -0.0282993496 -0.0003818272  1.0502527913 
1.524882 :  -0.0214541338 -0.0006055807  1.0610890933 
1.524583 :  -0.0205728517 -0.0006394691  1.0569138701 
1.524574 :  -0.020387176 -0.000646144  1.056150357 
1.524574 :  -0.0203543857 -0.0006473315  1.0560172122 
1.524574 :  -0.0203485329 -0.0006475431  1.0559933620 
1.524574 :  -0.0203474921 -0.0006475808  1.0559891209 
16.25640 :  -0.010 -0.001  0.500 
11.41981 :  -0.112769669  0.002471676  6.097035484 
3.575500 :  -0.0219014280 -0.0006165951 14.5559185833 
1.524790 :  -0.0194652700 -0.0006637947 22.9592494726 
1.524574 :  -0.0203608742 -0.0006475955 22.9546775840 
1.524574 :  -0.02034432 -0.00064768 22.95600482 
1.524574 :  -0.0203469060 -0.0006476024 22.9560419005 
4.622939 :  -0.010 -0.001  0.500 
1.328232 :   0.008653954 -0.001761568  0.936836390 
1.306795 :   0.002470934 -0.001514575  0.928675016 
1.30669 :   0.001663939 -0.001480819  0.930738363 
1.306688 :   0.001558665 -0.001476354  0.931074940 
1.306688 :   0.001544117 -0.001475739  0.931121760 
1.306688 :   0.001542172 -0.001475656  0.931127916 
14.72778 :  -0.010 -0.001  0.500 
6.98883 :   0.38785422 -0.01724283 20.45874366 
1.798413 :  -0.0272008866 -0.0002279092 17.8364017796 
1.308635 :  -0.002297984 -0.001311916 20.512461941 
1.306733 :   0.0009502706 -0.0014504413 20.4362001617 
1.306689 :   0.001458096 -0.001472093 20.425367360 
1.306688 :   0.001530334 -0.001475154 20.423640139 
1.306688 :   0.001540261 -0.001475575 20.423396485 
1.306688 :   0.001541616 -0.001475633 20.423362934 
4.650859 :  -0.010 -0.001  0.500 
1.110906 :  -0.0173334089 -0.0006102566  0.9872976072 
1.099477 :  -0.014612090 -0.000770177  0.990805013 
1.099373 :  -0.0139758187 -0.0007946426  0.9882847408 
1.099372 :  -0.0139333696 -0.0007962803  0.9881381147 
1.099372 :  -0.0139306853 -0.0007963832  0.9881287076 
15.08011 :  -0.010 -0.001  0.500 
14.36457 :  -0.091344600  0.003323161 11.311841144 
8.473888 :  -0.25605618  0.00470474 15.98963900 
1.344255 :   0.003303457 -0.001002516 20.818157931 
1.101527 :  -0.0175830387 -0.0007128658 22.1464861956 
1.099373 :  -0.0139441643 -0.0007951667 22.1419021031 
1.099372 :  -0.0139342265 -0.0007962587 22.1391110485 
1.099372 :  -0.0139306908 -0.0007963828 22.1390228946 
5.874812 :  -0.010 -0.001  0.500 
1.938936 :  -0.0410321364 -0.0002025282  1.1134523389 
1.780597 :  -0.0242923390 -0.0006259301  1.1158472550 
1.779822 :  -0.02522930 -0.00060815  1.11675893 
1.779822 :  -0.0252407692 -0.0006078071  1.1167971448 
16.83484 :  -0.010 -0.001  0.500 
11.29472 :  -0.185879368  0.003519793  6.145800690 
5.461754 :   0.059690846 -0.002119162 14.603093778 
3.526777 :  -0.1014535096  0.0008756963 23.1935407283 
1.794056 :  -0.0351887724 -0.0003500052 23.1170141158 
1.779843 :  -0.025546212 -0.000596977 23.104102223 
1.779822 :  -0.0252518227 -0.0006074229 23.0976593671 
1.779822 :  -0.0252414167 -0.0006077847 23.0973007253 
5.434335 :  -0.010 -0.001  0.500 
1.749787 :  -0.0235229995 -0.0003376537  1.0061388700 
1.710498 :  -0.018512526 -0.000613695  1.014831259 
1.70999 :  -0.0170661386 -0.0006663637  1.0082420268 
1.709987 :  -0.0169285094 -0.0006708028  1.0075911174 
1.709987 :  -0.0169180054 -0.0006711333  1.0075392601 
16.01785 :  -0.010 -0.001  0.500 
12.68867 :  -0.085000656  0.002673477  6.004922822 
6.474067 :  -0.185036948  0.002341288 13.894763332 
3.207452 :  -0.104098779  0.001854169 18.107355033 
1.739278 :  -0.0133769466 -0.0006377979 22.6158270805 
1.710021 :  -0.0173898781 -0.0006555086 22.5349413036 
1.709987 :  -0.0169545661 -0.0006699793 22.5338364807 
1.709987 :  -0.0169199445 -0.0006710723 22.5333540529 
1.709987 :  -0.0169173731 -0.0006711531 22.5333175420 
5.766564 :  -0.010 -0.001  0.500 
2.09932 :  -0.0274134588 -0.0004753221  1.0390069644 
2.064898 :  -0.0209783482 -0.0006529401  1.0490279587 
2.064616 :  -0.0203092918 -0.0006801786  1.0459021423 
2.064603 :  -0.020104907 -0.000687258  1.045025047 
2.064602 :  -0.020060969 -0.000688809  1.044843153 
2.064602 :  -0.020051222 -0.000689152  1.044802548 
2.064602 :  -0.0200490742 -0.0006892276  1.0447936036 
16.38551 :  -0.010 -0.001  0.500 
12.18014 :  -0.109810891  0.002007362  6.123954957 
4.166605 :  -0.0372344186 -0.0002063955 14.7417411545 
2.070352 :  -0.0146885744 -0.0007999668 23.2416956849 
2.064625 :  -0.019886925 -0.000697521 23.076425967 
2.064603 :  -0.019980094 -0.000691563 23.095383728 
2.064602 :  -0.0200346429 -0.0006897388 23.0979776534 
2.064602 :  -0.0200453827 -0.0006893574 23.0985910794 
2.064602 :  -0.0200477918 -0.0006892727 23.0987238560 
6.163762 :  -0.010 -0.001  0.500 
2.646277 :   0.033166958 -0.002167316  0.875702289 
2.291422 :   0.012859363 -0.001598513  0.879530385 
2.289552 :   0.011215878 -0.001563862  0.882067912 
2.289552 :   0.011206921 -0.001564101  0.882151113 
2.289552 :   0.011204886 -0.001564028  0.882159344 
16.78232 :  -0.010 -0.001  0.500 
8.496089 :   0.45033550 -0.01344834 11.04490006 
4.342701 :  -0.102847999  0.001858419 15.527892811 
2.398109 :   0.046257892 -0.002566315 21.525272532 
2.290473 :   0.008421502 -0.001461910 21.644371178 
2.289557 :   0.011400059 -0.001571627 21.602494807 
2.289552 :   0.011187744 -0.001563356 21.607443606 
2.289552 :   0.011206550 -0.001564093 21.607058240 
2.289552 :   0.011204882 -0.001564028 21.607092665 
6.081219 :  -0.010 -0.001  0.500 
2.129975 :  -0.0403139266  0.0001518864  1.0744006829 
2.003791 :  -0.0248672366 -0.0004324836  1.0773894873 
2.003056 :  -0.0239859472 -0.0004731874  1.0719015830 
2.003055 :  -0.0239699526 -0.0004739165  1.0718611409 
16.98049 :  -0.010 -0.001  0.500 
16.44386 :  -0.178125840  0.005388545  6.137527628 
14.73347 :  -0.339240345  0.005132306 12.530499178 
10.10226 :  -0.315544514  0.006365668 13.591460946 
6.62766 :  -0.220705436  0.004161395 15.275747045 
2.957212 :  -0.095117941  0.001234333 18.803077036 
2.022950 :  -0.0131875652 -0.0007188541 23.0549206514 
2.003061 :  -0.0241688951 -0.0004690627 23.0609113546 
2.003055 :  -0.0239690771 -0.0004739377 23.0610692727 
5.731296 :  -0.010 -0.001  0.500 
1.645504 :  -0.020134997 -0.000421243  1.023252179 
1.608005 :  -0.0154009720 -0.0007039958  1.0259686927 
1.607818 :  -0.0146170808 -0.0007358698  1.0224629792 
1.607818 :  -0.0145886023 -0.0007366424  1.0222902818 
16.66058 :  -0.010 -0.001  0.500 
12.25386 :  -0.065269088  0.002156130  6.042685418 
4.263285 :  -0.1116722612  0.0008993726 14.2362980170 
3.482313 :  -9.106452e-03  8.421845e-05  2.269081e+01 
1.666131 :  -3.688350e-02 -5.391163e-05  2.266377e+01 
1.608076 :  -0.01598784 -0.00069060 22.66503915 
1.607819 :  -0.0146406358 -0.0007352048 22.6677584942 
1.607818 :  -0.0145895225 -0.0007366167 22.6679977527 
1.607818 :  -0.0145874978 -0.0007366735 22.6679995803 
4.562877 :  -0.010 -0.001  0.500 
0.9612512 :  -0.0332624495 -0.0002496740  1.0482890437 
0.9030898 :  -0.0217487657 -0.0006102872  1.0493733262 
0.9029522 :  -0.0218300891 -0.0006154333  1.0492220270 
0.902952 :  -0.0217954040 -0.0006166382  1.0490636493 
0.902952 :  -0.0217940426 -0.0006166986  1.0490603916 
15.09189 :  -0.010 -0.001  0.500 
10.16959 :  -0.139017271  0.003161428  5.914845416 
3.246477 :   0.028001787 -0.001768775 14.083379016 
1.115397 :  -0.0566295823  0.0001852656 22.1607261945 
0.90307 :  -0.0226235602 -0.0005876133 22.2200590522 
0.9029525 :  -0.0218303277 -0.0006151092 22.1867029826 
0.902952 :  -0.0217968924 -0.0006165862 22.1850198777 
0.902952 :  -0.021794103 -0.000616696 22.184913142 
5.7215 :  -0.010 -0.001  0.500 
2.161918 :  -0.0233459706 -0.0003082086  0.9937158675 
2.087437 :  -0.0183258203 -0.0005984653  1.0008563509 
2.086093 :  -0.0165270990 -0.0006666074  0.9932932289 
2.086089 :  -0.0164035862 -0.0006708707  0.9927821744 
2.086089 :  -0.016398109 -0.000671051  0.992758026 
16.23923 :  -0.010 -0.001  0.500 
16.08686 :  -0.085640326  0.002920833  6.140692602 
11.90531 :  -0.347597539  0.005396223  9.928497120 
9.949778 :  -0.157718865  0.003352776 13.427170600 
2.370182 :  -0.003932904 -0.000681351 22.402330066 
2.08776 :  -0.0198201489 -0.0005867798 23.1021601139 
2.086090 :  -0.0164849567 -0.0006681271 23.0962172194 
2.086089 :  -0.0164015498 -0.0006709377 23.0934873437 
2.086089 :  -0.0163980257 -0.0006710537 23.0933675194 
4.910292 :  -0.010 -0.001  0.500 
1.211739 :  -0.0351107752 -0.0003324829  1.0766857408 
1.116604 :  -0.0215441061 -0.0006955243  1.0770173708 
1.116319 :  -0.0224231303 -0.0006713924  1.0785452020 
1.116319 :  -0.022424514 -0.000671448  1.078563249 
15.53455 :  -0.010 -0.001  0.500 
6.900065 :  -0.283872596  0.006280327 11.129327043 
3.510993 :   0.134150229 -0.004471765 20.621770256 
1.347664 :  -0.0646419167  0.0004452823 21.8334905908 
1.116692 :  -0.024278764 -0.000619202 21.746510301 
1.116319 :  -0.0224232131 -0.0006716619 21.7546417976 
1.116319 :  -0.0224248299 -0.0006714365 21.7551838228 
5.20485 :  -0.010 -0.001  0.500 
1.400926 :  -0.0139406009 -0.0007217613  0.9961679890 
1.390200 :  -0.0129835637 -0.0008245882  1.0002365995 
1.390087 :  -0.0123600155 -0.0008481867  0.9977180352 
1.390086 :  -0.012311642 -0.000850121  0.997565901 
1.390086 :  -0.0123074894 -0.0008502834  0.9975520509 
15.91088 :  -0.010 -0.001  0.500 
13.92932 :  -0.054261017  0.002125191 11.651011634 
7.469938 :  -0.213366044  0.003476813 16.974588648 
1.586482 :   0.003755542 -0.001033549 21.966395295 
1.391847 :  -0.0157434327 -0.0007669705 22.8397478814 
1.390089 :  -0.0123093507 -0.0008488653 22.8286696559 
1.390086 :  -0.0123149716 -0.0008500287 22.8239073288 
1.390086 :  -0.0123075429 -0.0008502802 22.8236967485 
6.613517 :  -0.010 -0.001  0.500 
2.477704 :  -0.029914071 -0.000394307  1.077285227 
2.420263 :  -0.0194882818 -0.0007165797  1.0801597029 
2.420202 :  -0.0195650193 -0.0007140434  1.0784433424 
2.420202 :  -0.0195653001 -0.0007140613  1.0784499393 
17.68108 :  -0.010 -0.001  0.500 
12.76749 :  -0.122866037  0.002432858  6.232754079 
4.863533 :   0.005441586 -0.001187352 14.796695426 
2.481605 :  -0.0346097702 -0.0004287886 23.4311312771 
2.420332 :  -0.0205081998 -0.0006905648 23.4245240164 
2.420202 :  -0.0195864925 -0.0007136516 23.4233324956 
2.420202 :  -0.0195660999 -0.0007140407 23.4239414591 
5.163145 :  -0.010 -0.001  0.500 
1.309791 :  -0.024349264 -0.000994546  1.090118879 
1.203307 :  -0.01787963 -0.00094454  1.09609789 
1.202373 :  -0.017130675 -0.001001008  1.092808465 
1.202373 :  -0.0171637799 -0.0009995708  1.0929002121 
15.78608 :  -0.010 -0.001  0.500 
6.34608 :  -0.1585594894 -0.0009435324 10.5479858861 
4.787519 :  -0.169517268  0.002168218 11.693323534 
3.173239 :  -0.128322329  0.001841389 13.904797514 
1.670526 :  -0.0602006709  0.0001807857 17.2149898245 
1.205085 :  -0.012660633 -0.001113420 20.589761274 
1.202375 :  -0.017026858 -0.001003954 20.601395160 
1.202373 :  -0.0171606029 -0.0009996634 20.6008845990 
1.202373 :  -0.0171636378 -0.0009995888 20.6008371011 
5.864012 :  -0.010 -0.001  0.500 
1.609079 :  -0.0138101670 -0.0006317484  1.0186812172 
1.577480 :  -0.0122600070 -0.0008056112  1.0205535152 
1.577338 :  -0.0116893231 -0.0008310204  1.0183335683 
1.577338 :  -0.0116643652 -0.0008318415  1.0182101565 
16.94496 :  -0.010 -0.001  0.500 
16.74656 :  -0.051556014  0.003016368 11.681300614 
6.733058 :  -0.212289255  0.004958212 14.293255155 
2.928087 :  -0.080156313  0.001388193 18.419868938 
1.587917 :  -0.006102647 -0.000922001 22.896094134 
1.577338 :  -0.011646141 -0.000832688 22.863308790 
1.577338 :  -0.0116628822 -0.0008318878 22.8641864867 
5.422353 :  -0.010 -0.001  0.500 
1.230415 :  -0.0133278415 -0.0008886676  1.0337790999 
1.228879 :  -0.0114652335 -0.0009504275  1.0329889180 
1.228878 :  -0.0115458060 -0.0009481301  1.0334016463 
1.228878 :  -0.0115425849 -0.0009482267  1.0333841319 
16.50148 :  -0.010 -0.001  0.500 
4.18355 :  -0.085444264  0.001523976 23.313115299 
1.507197 :  -3.758325e-02 -9.947594e-07  2.342026e+01 
1.236143 :  -0.0147626803 -0.0008072116 23.2925331047 
1.228883 :  -0.0114830246 -0.0009486972 23.3079008873 
1.228878 :  -0.0115441429 -0.0009481791 23.3121014359 
1.228878 :  -0.0115426559 -0.0009482246 23.3120708617 
5.182535 :  -0.010 -0.001  0.500 
1.783334 :  -0.0144335665 -0.0001949833  0.9391695607 
1.51237 :  -0.0168894088 -0.0004179770  0.9585517275 
1.506683 :  -0.0133651423 -0.0005731852  0.9454116885 
1.506607 :  -0.0126903765 -0.0005977258  0.9428085379 
1.506606 :  -0.0126114658 -0.0006005273  0.9424974787 
1.506606 :  -0.0126027777 -0.0006008356  0.9424630353 
15.56309 :  -0.010 -0.001  0.500 
13.45984 :  -0.033639916  0.003292378  5.828086973 
8.42191 :  -0.262507567  0.006510228  7.774959136 
5.455205 :  -0.124481743  0.002710088 11.094212811 
2.468242 :  -3.051315e-02  1.726978e-05  1.647856e+01 
1.507404 :  -0.0097344766 -0.0006927876 21.8599956958 
1.506614 :  -0.0123496244 -0.0006098627 21.8358674939 
1.506607 :  -0.0125738733 -0.0006018596 21.8390148203 
1.506606 :  -0.0125986609 -0.0006009816 21.8393313793 
1.506606 :  -0.0126013712 -0.0006008854 21.8393658974 
4.912499 :  -0.010 -0.001  0.500 
1.070074 :   0.019682975 -0.001832414  0.927633415 
0.9147607 :   0.006002507 -0.001445201  0.926314833 
0.9143315 :   0.004997229 -0.001420527  0.928515184 
0.9143315 :   0.004984509 -0.001420280  0.928595647 
15.75577 :  -0.010 -0.001  0.500 
14.45638 :   0.64850629 -0.01946680 22.44063545 
2.279542 :  -0.0534097889  0.0004788623 17.6607054733 
0.9233284 :   0.011433231 -0.001547318 22.447657856 
0.9143315 :   0.005010388 -0.001420975 22.447268337 
0.9143315 :   0.004984429 -0.001420275 22.446787103 
4.69787 :  -0.010 -0.001  0.500 
0.7231844 :  -0.007910948 -0.000870940  0.988571940 
0.6970081 :  -0.009511446 -0.000916063  0.991220344 
0.696914 :  -0.009108668 -0.000933434  0.989509033 
0.6969137 :  -0.009076617 -0.000934595  0.989382680 
0.6969137 :  -0.0090749958 -0.0009346549  0.9893765941 
15.59015 :  -0.010 -0.001  0.500 
11.83805 :  1.368001e-02 4.629364e-04 1.191176e+01 
7.797785 :  -0.203075738  0.002854169 17.652659904 
1.101075 :  -0.0118503850 -0.0004918481 22.4148014174 
0.701511 :  -0.0146101462 -0.0007683962 23.3660619569 
0.6969327 :  -0.0093125640 -0.0009253133 23.3424346609 
0.6969138 :  -0.009089758 -0.000934117 23.333989232 
0.6969137 :  -0.0090756640 -0.0009346302 23.3333694426 
0.6969137 :  -0.0090749421 -0.0009346568 23.3333347991 
4.879078 :  -0.010 -0.001  0.500 
1.027655 :  -0.0176182749 -0.0007650444  1.0240886601 
1.020672 :  -0.01456563 -0.00085383  1.02735579 
1.020646 :  -0.0143007926 -0.0008643012  1.0262330227 
1.020645 :  -0.0142491752 -0.0008661482  1.0260179315 
1.020645 :  -0.0142410213 -0.0008664433  1.0259846339 
1.020645 :  -0.0142397105 -0.0008664907  1.0259792708 
15.64578 :  -0.010 -0.001  0.500 
6.322792 :  -0.096355532  0.001663295 11.675470240 
1.14185 :   0.009219554 -0.001321140 23.269721905 
1.020794 :  -0.0146934070 -0.0008635042 22.8429203851 
1.020645 :  -0.0141919737 -0.0008679097 22.8737119739 
1.020645 :  -0.0142346070 -0.0008666819 22.8743387000 
1.020645 :  -0.01423862 -0.00086653 22.87453872 
1.020645 :  -0.0142393263 -0.0008665045 22.8745683729 
4.717171 :  -0.010 -0.001  0.500 
1.045309 :  -0.015018431 -0.001043436  1.026026282 
1.023355 :  -0.012137973 -0.001031991  1.024643966 
1.023327 :  -0.012261618 -0.001032455  1.025271155 
1.023327 :  -0.01225549 -0.00103267  1.02524264 
15.28517 :  -0.010 -0.001  0.500 
14.56131 :  -0.121332064 -0.001963617 21.766300159 
3.818488 :  -0.134554689  0.002765902 20.600810179 
1.223525 :  -0.0275714020 -0.0002533100 21.9201336051 
1.026982 :  -0.0156209855 -0.0008895634 21.7704678457 
1.023331 :  -0.012328432 -0.001028703 21.765696650 
1.023327 :  -0.012256862 -0.001032603 21.763840165 
1.023327 :  -0.012255537 -0.001032669 21.763756078 
5.263734 :  -0.010 -0.001  0.500 
2.06541 :  -0.0517361778  0.0002878231  1.0792409936 
1.894347 :  -0.0307982110 -0.0003654484  1.0892233037 
1.893561 :  -0.0315986589 -0.0003421551  1.0861513576 
1.893561 :  -0.0316311831 -0.0003413027  1.0863320466 
15.44464 :  -0.010 -0.001  0.500 
11.05487 :  -0.237599430  0.006022871  5.693693795 
4.814710 :   0.045486096 -0.002049191 12.971823391 
2.557273 :  -0.0901206787  0.0009571202 21.2856141291 
1.899145 :  -0.0388162998 -0.0001483614 21.2435979817 
1.893570 :  -0.0319367462 -0.0003329071 21.2670181910 
1.893561 :  -0.0316436053 -0.0003409709 21.2689596494 
1.893561 :  -0.0316328998 -0.0003412561 21.2690441243 
4.709498 :  -0.010 -0.001  0.500 
1.330661 :   0.0006147672 -0.0013479168  0.9475946357 
1.318513 :  -0.004125311 -0.001192950  0.946319605 
1.318508 :  -0.004271106 -0.001188738  0.946713459 
1.318508 :  -0.004274095 -0.001188640  0.946727052 
15.01692 :  -0.010 -0.001  0.500 
4.821494 :   0.230643130 -0.008887483 21.906004642 
1.718315 :  -0.0291780645 -0.0002464376 20.2390421620 
1.321765 :  -0.007629142 -0.001057686 21.917383111 
1.318514 :  -0.004443639 -0.001182397 21.905236857 
1.318508 :  -0.004278897 -0.001188480 21.903596171 
1.318508 :  -0.004274273 -0.001188634 21.903479479 
4.729104 :  -0.010 -0.001  0.500 
0.944805 :   0.0006134755 -0.0014324880  0.9830441732 
0.9354946 :  -0.003442264 -0.001265277  0.978704017 
0.935469 :  -0.003802682 -0.001251690  0.979847381 
0.9354687 :  -0.003831931 -0.001250542  0.979953455 
0.9354687 :  -0.003834573 -0.001250439  0.979963139 
15.41509 :  -0.010 -0.001  0.500 
4.547019 :   0.22842234 -0.01071546 22.19861054 
1.203923 :   0.001163002 -0.001310573 19.480826071 
0.9357899 :  -0.004945296 -0.001229771 22.180316766 
0.9354688 :  -0.003822840 -0.001250573 22.177902966 
0.9354687 :  -0.003835402 -0.001250412 22.177307047 
6.833002 :  -0.010 -0.001  0.500 
2.992396 :  -0.0339138766 -0.0002890495  1.0716526736 
2.912206 :  -0.0205011335 -0.0006840816  1.0677978111 
2.911978 :  -0.0212573479 -0.0006671516  1.0700640569 
2.911978 :  -0.0212369665 -0.0006677357  1.0699412444 
17.64416 :  -0.010 -0.001  0.500 
13.43988 :  -0.14553553  0.00302942  6.13383666 
5.553587 :   0.010231249 -0.001182039 14.459389160 
3.093834 :  -0.0457885452 -0.0002165145 23.0699939542 
2.912049 :  -0.0217632207 -0.0006577237 23.0369978897 
2.911978 :  -0.0212227329 -0.0006681425 23.0381372190 
2.911978 :  -0.0212380031 -0.0006677074 23.0383185681 
4.291842 :  -0.010 -0.001  0.500 
1.024646 :  -4.486699e-02  4.964031e-05  1.064311e+00 
0.900854 :  -0.0288917261 -0.0004053859  1.0724414410 
0.9002117 :  -0.0290016698 -0.0004172223  1.0710907763 
0.9002088 :  -0.0288792799 -0.0004214554  1.0705255408 
0.9002088 :  -0.0288659071 -0.0004219655  1.0704764321 
0.9002088 :  -0.0288640544 -0.0004220345  1.0704692643 
14.53492 :  -0.010 -0.001  0.500 
10.15759 :  -0.203377915  0.004821474  5.797630018 
3.752137 :   0.027871473 -0.001487469 13.456337188 
1.525773 :  -0.0780379320  0.0005528172 21.7362461738 
0.9017758 :  -0.0325342103 -0.0003092506 21.8224949432 
0.9002316 :  -0.0291702887 -0.0004098995 21.7638721334 
0.9002092 :  -0.0289104672 -0.0004203154 21.7542200150 
0.9002088 :  -0.0288698189 -0.0004218184 21.7530179818 
0.9002088 :  -0.0288645756 -0.0004220150 21.7528507648 
0.9002088 :  -0.0288638792 -0.0004220411 21.7528287382 
5.105657 :  -0.010 -0.001  0.500 
1.929448 :  -0.0008615418 -0.0013196519  0.9415322954 
1.922286 :  -0.004812485 -0.001182399  0.940141418 
1.922281 :  -0.005028950 -0.001174579  0.940827510 
1.922281 :  -0.005037656 -0.001174253  0.940862691 
15.01189 :  -0.010 -0.001  0.500 
3.591190 :   0.17922286 -0.00761878 19.91405765 
1.944628 :  -0.0162046322 -0.0007333902 19.4899523737 
1.922302 :  -0.005467276 -0.001156337 19.916099379 
1.922281 :  -0.005058999 -0.001173449 19.912610361 
1.922281 :  -0.005038900 -0.001174207 19.912435028 
5.220253 :  -0.010 -0.001  0.500 
1.065335 :   0.009782886 -0.001349349  0.956213225 
0.9188914 :   0.0009015667 -0.0011984255  0.9529105874 
0.9184348 :   5.304448e-05 -1.183834e-03  9.558211e-01 
0.9184347 :   2.530923e-05 -1.183077e-03  9.559741e-01 
0.9184347 :   0.0000234453 -0.0011830242  0.9559844529 
0.9184347 :   2.426309e-05 -1.183049e-03  9.559802e-01 
Error in nls(that ~ theta.u214(index, lambda, beta), data = bb, start = list(lambda = c(-0.01,  : 
  le pas 0.000488281 est devenu inférieur à 'minFactor' de 0.000976562
16.30638 :  -0.010 -0.001  0.500 
14.75674 :   0.421527156 -0.008620411 22.816611994 
3.671828 :  -0.124562072  0.001434855 18.303354582 
1.017538 :  -0.005929326 -0.000766314 22.701446275 
0.9186176 :  -0.0007023354 -0.0011534665 22.7990662862 
0.9184348 :   0.0000367744 -0.0011836596 22.8147112273 
0.9184347 :   2.462649e-05 -1.183056e-03  2.281551e+01 
0.9184347 :   2.327337e-05 -1.183019e-03  2.281551e+01 
5.138896 :  -0.010 -0.001  0.500 
1.442979 :  -0.015042863 -0.001084813  1.031586535 
1.413638 :  -0.011654934 -0.001068252  1.027930651 
1.413581 :  -0.011836173 -0.001068765  1.028919252 
1.413581 :  -0.011824385 -0.001069166  1.028862619 
1.413581 :  -0.011823129 -0.001069210  1.028856935 
15.7766 :  -0.010 -0.001  0.500 
4.682726 :  -0.067809621 -0.001972271 11.419735391 
3.556349 :  -0.0737782793  0.0002158732 13.8259573183 
1.956367 :  -0.0300621897 -0.0006238823 18.1691301328 
1.415227 :  -0.009592492 -0.001102756 22.376307005 
1.413581 :  -0.011791963 -0.001070449 22.323299098 
1.413581 :  -0.011818857 -0.001069358 22.325221058 
1.413581 :  -0.011822521 -0.001069231 22.325365331 
5.100104 :  -0.010 -0.001  0.500 
1.668067 :   0.002003226 -0.001090315  0.921190776 
1.584478 :  -0.003960006 -0.001036657  0.923458222 
1.584260 :  -0.003946428 -0.001046308  0.922986822 
1.584260 :  -0.003944508 -0.001046466  0.922991240 
15.52625 :  -0.010 -0.001  0.500 
10.62351 :   0.127600791 -0.002035337 11.709638709 
5.383961 :  -0.140394497  0.001370681 16.989888777 
1.908978 :   0.008682655 -0.000999392 22.708956761 
1.586757 :  -0.0081032689 -0.0009345893 22.9326767867 
1.584263 :  -0.003818849 -0.001049454 22.921161659 
1.584260 :  -0.003949377 -0.001046334 22.924232877 
1.584260 :  -0.003944396 -0.001046469 22.924155244 
5.232841 :  -0.010 -0.001  0.500 
1.114116 :  -0.0127755446 -0.0007613754  1.0136432571 
1.100682 :  -0.0116986620 -0.0008706323  1.0150541364 
1.100622 :  -0.0113297059 -0.0008857215  1.0135925761 
1.100622 :  -0.0113173772 -0.0008861874  1.0135468944 
16.24895 :  -0.010 -0.001  0.500 
14.72586 :  -0.041461658  0.001704883 11.994297515 
9.48441 :  -0.226691545  0.003399036 17.524608734 
1.407733 :  -0.0107170018 -0.0006443514 21.8296610958 
1.101476 :  -0.0137242011 -0.0008264263 23.5030106634 
1.100622 :  -0.011332139 -0.000885454 23.497048942 
1.100622 :  -0.0113177197 -0.0008861756 23.4957740678 
5.023435 :  -0.010 -0.001  0.500 
1.504599 :   0.013690497 -0.001730316  0.925847503 
1.431723 :   0.003036309 -0.001405393  0.924757660 
1.431608 :   0.002328946 -0.001383085  0.926180263 
1.431608 :   0.002317037 -0.001382617  0.926220733 
15.40613 :  -0.010 -0.001  0.500 
9.95793 :   0.49527437 -0.01657629 21.07276458 
2.283806 :  -0.075238688  0.001253774 18.585692583 
1.441119 :   0.002586109 -0.001287674 21.123243052 
1.431619 :   0.002025605 -0.001371160 21.070185917 
1.431608 :   0.002309072 -0.001382304 21.068558700 
1.431608 :   0.002316483 -0.001382596 21.068419821 
4.497279 :  -0.010 -0.001  0.500 
1.439761 :  -0.0350078485 -0.0001551544  1.0140767675 
1.387785 :  -0.0227727771 -0.0005648281  1.0152953089 
1.387711 :  -0.0230704454 -0.0005584221  1.0152724399 
1.387711 :  -0.0230694216 -0.0005584382  1.0152614143 
14.39047 :  -0.010 -0.001  0.500 
10.63128 :  -0.276685461  0.008009493 10.476486467 
2.138760 :   0.047487676 -0.002220216 18.348749974 
1.42665 :  -0.0399934806 -0.0001451759 20.4658700717 
1.387723 :  -0.0234426047 -0.0005468766 20.4635528468 
1.387711 :  -0.0230734625 -0.0005582521 20.4596490260 
1.387711 :  -0.0230695801 -0.0005584321 20.4595199444 
6.373688 :  -0.010 -0.001  0.500 
3.174276 :  -0.011858542 -0.001235773  0.994828636 
3.154729 :  -0.009269402 -0.001185433  0.988309262 
3.154700 :  -0.009677180 -0.001175650  0.990159820 
3.154700 :  -0.009693328 -0.001174954  0.990214560 
3.154700 :  -0.009695664 -0.001174859  0.990223368 
16.30136 :  -0.010 -0.001  0.500 
12.63197 :  -0.048483569 -0.005881968 19.714819735 
3.820894 :  -0.097759835  0.001360165 18.479777690 
3.158687 :  -0.0165348092 -0.0008979471 19.7628192444 
3.154780 :  -0.010663881 -0.001135055 19.716058631 
3.154701 :  -0.009828169 -0.001169484 19.706611602 
3.154700 :  -0.009713469 -0.001174138 19.705151388 
3.154700 :  -0.009698335 -0.001174751 19.704953850 
3.154700 :  -0.009696314 -0.001174833 19.704927707 
5.272105 :  -0.010 -0.001  0.500 
1.430124 :  -0.011622881 -0.001054112  1.020371607 
1.425187 :  -0.010363215 -0.001042492  1.018519753 
1.425184 :  -0.010551011 -0.001036816  1.019383562 
1.425184 :  -0.010551684 -0.001036719  1.019373855 
15.90893 :  -0.010 -0.001  0.500 
4.826898 :  -0.044613164 -0.002154095 21.355506079 
2.507362 :  -0.0459671438  0.0008360021 20.8223794683 
1.465803 :  -0.0267504923 -0.0003969705 21.4159504671 
1.425667 :  -0.011866190 -0.000974896 21.375556392 
1.425186 :  -0.010657449 -0.001032089 21.354988981 
1.425184 :  -0.010558331 -0.001036424 21.352504801 
1.425184 :  -0.010552414 -0.001036689 21.352322675 
6.386825 :  -0.010 -0.001  0.500 
2.418469 :  -0.003000749 -0.001063715  0.979761192 
2.39116 :  -0.006442025 -0.001031967  0.979800950 
2.391137 :  -0.006506189 -0.001033177  0.979990133 
2.391137 :  -0.006507967 -0.001033126  0.979999106 
17.29081 :  -0.010 -0.001  0.500 
12.92543 :   0.150473861 -0.002460806 23.462141899 
10.14214 :  -0.154876499  0.001558891 22.459746793 
2.612251 :  -0.0381494891 -0.0001211442 23.1071540023 
2.394927 :  -0.008214021 -0.000952838 23.405022516 
2.391138 :  -0.006476941 -0.001033799 23.458103940 
2.391137 :  -0.006508408 -0.001033111 23.462104742 
5.157239 :  -0.010 -0.001  0.500 
1.637344 :  -0.0033908478 -0.0008123784  0.9322780329 
1.503341 :  -0.006491618 -0.000898086  0.932198803 
1.502369 :  -0.0060014769 -0.0009328038  0.9308132173 
1.502369 :  -0.0060186550 -0.0009325477  0.9309248294 
15.68776 :  -0.010 -0.001  0.500 
12.75675 :  0.0274584183 0.0000633731 6.1487036555 
6.267878 :  -0.143373613  0.001869007 10.378745271 
2.711283 :  -0.0126834042 -0.0007472658 16.5799214815 
1.503439 :  -0.003238715 -0.001009287 23.091234536 
1.502370 :  -0.0061055615 -0.0009298404 23.0977118237 
1.502369 :  -0.0060157482 -0.0009326348 23.0961397137 
1.502369 :  -0.0060184866 -0.0009325527 23.0962018953 
5.717803 :  -0.010 -0.001  0.500 
1.880261 :  -0.032579884 -0.000171062  1.049660734 
1.817566 :  -0.0249884801 -0.0004647722  1.0683093025 
1.815757 :  -0.0227308171 -0.0005414444  1.0571042290 
1.815706 :  -0.0223363424 -0.0005549526  1.0554414009 
1.815704 :  -0.0222736403 -0.0005570826  1.0551701694 
1.815704 :  -0.0222640139 -0.0005574095  1.0551284907 
1.815704 :  -0.0222625440 -0.0005574595  1.0551221270 
16.50285 :  -0.010 -0.001  0.500 
14.01684 :  -0.074410483  0.001364595  3.374510717 
7.906886 :  -5.129062e-02 -1.045460e-05  8.482843e+00 
3.50066 :  -0.01325888 -0.00069591 16.08614010 
1.824727 :  -0.0270951053 -0.0004809476 23.5999989828 
1.815707 :  -0.0222468907 -0.0005565572 23.6152489021 
1.815704 :  -0.0222733283 -0.0005571263 23.6086649747 
1.815704 :  -0.0222636619 -0.0005574207 23.6083739292 
1.815704 :  -0.022262498 -0.000557461 23.608314540 
5.403843 :  -0.010 -0.001  0.500 
1.669571 :  -4.394635e-02 -7.201934e-05  1.109498e+00 
1.501274 :  -0.023848125 -0.000614434  1.100755075 
1.499847 :  -0.0262550205 -0.0005533494  1.1094824011 
1.499847 :  -0.026175533 -0.000555328  1.108921835 
1.499847 :  -0.0261787643 -0.0005552456  1.1089435971 
16.06934 :  -0.010 -0.001  0.500 
9.330266 :  -0.372006518  0.008896058 10.951694013 
4.82694 :   0.183199240 -0.006044664 19.482534358 
2.350053 :  -0.105858982  0.001606216 21.348649036 
1.500609 :  -0.028577553 -0.000465982 21.488006517 
1.499849 :  -0.0262197730 -0.0005523195 21.4166898915 
1.499847 :  -0.0261848698 -0.0005549871 21.4135297439 
1.499847 :  -0.0261788294 -0.0005552382 21.4133861156 
4.274967 :  -0.010 -0.001  0.500 
1.191474 :  -0.007434347 -0.001220023  0.958317369 
1.188489 :  -0.006633984 -0.001190432  0.950411690 
1.188457 :  -0.007131737 -0.001173756  0.952586866 
1.188455 :  -0.007197736 -0.001171043  0.952798305 
1.188455 :  -0.007212302 -0.001170474  0.952849766 
1.188455 :  -0.007215183 -0.001170360  0.952859757 
14.25210 :  -0.010 -0.001  0.500 
4.371646 :   0.047635214 -0.005942613 21.097488047 
1.924797 :  -0.0168408868 -0.0004102768 18.5631607208 
1.201831 :  -0.0191344278 -0.0008104959 21.2150373706 
1.188818 :  -0.008549793 -0.001113997 21.114152213 
1.188470 :  -0.007538179 -0.001157764 21.069151984 
1.188456 :  -0.007279825 -0.001167809 21.059913700 
1.188455 :  -0.007228875 -0.001169821 21.057895471 
1.188455 :  -0.007218514 -0.001170229 21.057485774 
1.188455 :  -0.007216437 -0.001170311 21.057402999 
6.066495 :  -0.010 -0.001  0.500 
2.237753 :  -0.0144931327 -0.0009293955  1.0212276373 
2.23128 :  -0.0123322824 -0.0009610175  1.0218602685 
2.231278 :  -0.0123077787 -0.0009626076  1.0216753638 
2.231278 :  -0.0123032783 -0.0009627546  1.0216535260 
16.81963 :  -0.010 -0.001  0.500 
6.595314 :  -0.1125352965  0.0006112252 22.8004227187 
2.556973 :  -0.0452896572  0.0001519824 23.0824155105 
2.25155 :  -0.0208825010 -0.0006521586 22.8883462414 
2.231585 :  -0.0135276153 -0.0009196575 22.8228339212 
2.231280 :  -0.0124201174 -0.0009588833 22.8059915934 
2.231278 :  -0.0123126988 -0.0009624466 22.8029275317 
2.231278 :  -0.0123036820 -0.0009627414 22.8026428310 
5.747767 :  -0.010 -0.001  0.500 
2.231107 :  -0.085114446  0.001493186  1.190604025 
1.673318 :  -0.0454555829  0.0001862459  1.2154664244 
1.664678 :  -0.0462485888  0.0001827421  1.2011563445 
1.664676 :  -0.0462427981  0.0001817989  1.2010783654 
1.664676 :  -0.0462414487  0.0001817555  1.2010711437 
16.51084 :  -0.010 -0.001  0.500 
14.09532 :  -0.214810354  0.005798032  3.248139313 
8.512757 :  -3.579710e-02  1.342814e-05  7.717342e+00 
3.284028 :  -0.0513439849  0.0002660572 15.1132284894 
1.666921 :  -0.0439834609  0.0001476025 22.5108095165 
1.664676 :  -0.0462309234  0.0001813277 22.5099849208 
1.664676 :  -0.0462408605  0.0001817368 22.5102141423 
4.714431 :  -0.010 -0.001  0.500 
1.112909 :  -0.013120003 -0.001353171  1.040133060 
1.057556 :  -0.011766014 -0.001162593  1.041554740 
1.056948 :  -0.010925504 -0.001212350  1.038702897 
1.056948 :  -0.010962532 -0.001211162  1.038877688 
1.056948 :  -0.010961627 -0.001211197  1.038874039 
15.20525 :  -0.010 -0.001  0.500 
4.797247 :  -0.044608040 -0.004917482 10.874921896 
3.207989 :  -0.0732522581 -0.0002730013 12.7234358304 
1.656546 :  -0.0332129042 -0.0006226079 17.0170888385 
1.060206 :  -0.005592296 -0.001355519 21.249431632 
1.056950 :  -0.011083517 -0.001206613 21.264143441 
1.056948 :  -0.010957763 -0.001211345 21.261296746 
1.056948 :  -0.010961788 -0.001211191 21.261411079 
5.310715 :  -0.010 -0.001  0.500 
1.795272 :  -0.0249159335 -0.0004505718  1.0122639103 
1.759331 :  -0.0167006368 -0.0007515932  1.0096887813 
1.759297 :  -0.016669855 -0.000755445  1.008971167 
1.759297 :  -0.0166831535 -0.0007550117  1.0090315070 
15.78265 :  -0.010 -0.001  0.500 
13.86404 :  -0.095495541  0.002149227  6.113569281 
6.074308 :  -0.168649378  0.001663173 13.905670796 
3.235596 :  -0.08653556  0.00100197 18.23901795 
1.807514 :  -0.0089025003 -0.0008190968 22.9083830736 
1.759299 :  -0.016783495 -0.000752589 22.931267170 
1.759297 :  -0.016680427 -0.000755125 22.936287968 
1.759297 :  -0.0166826729 -0.0007550296 22.9364916457 
6.99492 :  -0.010 -0.001  0.500 
3.246652 :   0.018451829 -0.001903762  0.932745382 
3.132411 :   0.003625561 -0.001432747  0.940259315 
3.132207 :   0.003876927 -0.001445061  0.936646537 
3.132207 :   0.003856732 -0.001444433  0.936747871 
17.73163 :  -0.010 -0.001  0.500 
16.03075 :   0.62914456 -0.02130221 22.27683459 
4.146814 :  -0.0240290501 -0.0005276241 17.2941955705 
3.138964 :   0.011688640 -0.001672322 22.251980101 
3.132246 :   0.003310480 -0.001426199 22.305940541 
3.132208 :   0.003892026 -0.001445569 22.297712953 
3.132207 :   0.003855689 -0.001444399 22.298443185 
3.132207 :   0.003858002 -0.001444474 22.298399041 
5.001969 :  -0.010 -0.001  0.500 
1.720034 :   0.023113747 -0.001683683  0.864077854 
1.424162 :   0.008338432 -0.001390072  0.868876601 
1.422852 :   0.007010970 -0.001362145  0.870407824 
1.422851 :   0.007008618 -0.001361514  0.870276139 
1.422851 :   0.007003089 -0.001361323  0.870298209 
15.43840 :  -0.010 -0.001  0.500 
8.529703 :   0.36193533 -0.00867916 11.45593275 
3.393504 :  -0.093714327  0.000875091 15.881507395 
1.591267 :   0.031688860 -0.001769985 22.612132818 
1.423816 :   0.004189751 -0.001290697 22.387032934 
1.422856 :   0.006899746 -0.001356365 22.388173206 
1.422852 :   0.006976278 -0.001360347 22.381607375 
1.422851 :   0.006998633 -0.001361154 22.380837093 
1.422851 :   0.007001714 -0.001361271 22.380710292 
5.829856 :  -0.010 -0.001  0.500 
2.237116 :   0.002216789 -0.001760271  0.991090379 
2.21879 :  -0.002553134 -0.001437270  0.986286742 
2.218743 :  -0.002334714 -0.001451216  0.985632626 
2.218742 :  -0.002320503 -0.001451785  0.985577836 
16.25401 :  -0.010 -0.001  0.500 
8.784945 :   0.25648643 -0.01758391 20.98434712 
3.083805 :   0.007992718 -0.001529673 16.424054554 
2.224423 :  -0.006502336 -0.001386415 20.981790961 
2.218743 :  -0.002367580 -0.001450197 20.979163661 
2.218742 :  -0.002321009 -0.001451764 20.978808354 
5.19377 :  -0.010 -0.001  0.500 
1.327863 :  -0.0178619672 -0.0003624705  0.9915394183 
1.203103 :  -0.0168334289 -0.0005840111  1.0045283984 
1.200223 :  -0.0143221966 -0.0006810033  0.9940911893 
1.200195 :  -0.013997997 -0.000692295  0.992768052 
1.200195 :  -0.0139699347 -0.0006932535  0.9926509526 
1.200195 :  -0.0139676399 -0.0006933319  0.9926413522 
16.02638 :  -0.010 -0.001  0.500 
15.04856 :  -0.054153048  0.002580384  6.236735140 
14.16047 :  -0.393356760  0.006325186 10.328880864 
10.64434 :  -0.351722215  0.006691785 11.208103519 
6.993109 :  -0.236524475  0.004232682 13.021535911 
2.471226 :  -0.0797238535  0.0008677274 17.6310657088 
1.243249 :  -5.162963e-05 -9.665591e-04  2.357580e+01 
1.200225 :  -0.0141318331 -0.0006929077 23.4772243705 
1.200195 :  -0.0139554518 -0.0006936907 23.4878206775 
1.200195 :  -0.0139667429 -0.0006933631 23.4879843356 
5.803594 :  -0.010 -0.001  0.500 
1.990777 :  -0.0065720418 -0.0008578814  0.9710477626 
1.949006 :  -0.0090960974 -0.0008978015  0.9748558557 
1.948829 :  -0.0085247384 -0.0009233214  0.9724585319 
1.948829 :  -0.0085094518 -0.0009242114  0.9724657883 
1.948829 :  -0.0085084848 -0.0009242547  0.9724636762 
16.51986 :  -0.010 -0.001  0.500 
13.10613 :  2.802393e-02 5.764271e-04 1.156915e+01 
5.840844 :  -0.113499059  0.002342953 14.349392044 
2.944393 :  -0.0433059004  0.0003380135 18.5840721389 
1.950987 :  -0.0056475721 -0.0009758655 22.6993324635 
1.948834 :  -0.0087116987 -0.0009185872 22.6504310020 
1.948829 :  -0.0085015418 -0.0009243957 22.6498324222 
1.948829 :  -0.0085088760 -0.0009242449 22.6496889227 
4.992612 :  -0.010 -0.001  0.500 
1.632204 :  -0.0005004237 -0.0011573978  0.9344586664 
1.605907 :  -0.004342811 -0.001099737  0.931046461 
1.605871 :  -0.004746346 -0.001090765  0.932893343 
1.605871 :  -0.004760797 -0.001090488  0.932996983 
15.29338 :  -0.010 -0.001  0.500 
7.982862 :   0.205361222 -0.004568305 22.209615471 
2.875124 :  -0.0828796113  0.0004936642 21.6333617288 
1.617854 :  -0.0145008520 -0.0008473834 22.1412663987 
1.605893 :  -0.005035886 -0.001086264 22.194109285 
1.605871 :  -0.004781527 -0.001089923 22.208480409 
1.605871 :  -0.004761711 -0.001090476 22.208285607 
6.036428 :  -0.010 -0.001  0.500 
1.560129 :   0.021112184 -0.002141480  0.987219882 
1.440203 :   0.005900275 -0.001570107  0.984566457 
1.439947 :   0.005157075 -0.001552072  0.986256090 
1.439947 :   0.005123438 -0.001551070  0.986439142 
17.24623 :  -0.010 -0.001  0.500 
13.08325 :   0.63421527 -0.02463571 21.72495608 
2.585605 :  -0.0547978215  0.0008565062 17.9704058406 
1.441961 :   0.009882625 -0.001695086 21.702312091 
1.439949 :   0.005205693 -0.001552527 21.738214351 
1.439947 :   0.005127873 -0.001551229 21.736261337 
1.439947 :   0.005122612 -0.001551050 21.736284905 
7.62737 :  -0.010 -0.001  0.500 
3.434288 :  -0.0678767932  0.0004215954  1.2435233834 
2.854117 :  -0.0318276321 -0.0004534027  1.2441042796 
2.837838 :  -0.0370945094 -0.0003333676  1.2548967937 
2.83783 :  -0.037282167 -0.000328442  1.255708629 
2.83783 :  -0.0372850778 -0.0003283416  1.2557241925 
19.06487 :  -0.010 -0.001  0.500 
11.77592 :  -0.32561887  0.00675237  6.06202386 
7.314158 :   0.079102645 -0.002989258 13.223530698 
5.900958 :  -0.152575580  0.002373942 22.798915094 
2.870201 :  -0.0531856196  0.0001088890 22.6562043917 
2.837855 :  -0.0377004826 -0.0003137324 22.7543466257 
2.83783 :  -0.0372946257 -0.0003280065 22.7505831560 
2.83783 :  -0.037285356 -0.000328332 22.750462797 
5.154317 :  -0.010 -0.001  0.500 
1.162232 :  -0.028070218 -0.000318941  1.049142994 
1.109465 :  -0.0198485192 -0.0006356372  1.0552729092 
1.108963 :  -0.0186375586 -0.0006787812  1.0489074770 
1.108962 :  -0.0185740564 -0.0006808382  1.0486073166 
1.108962 :  -0.0185717815 -0.0006809078  1.0485955158 
16.08643 :  -0.010 -0.001  0.500 
14.86258 :  -0.113092734  0.002885522  6.288283897 
14.00101 :  -0.304031247  0.003805209 13.694568555 
9.104295 :  -0.286045190  0.005017335 14.741371455 
5.945512 :  -0.205179353  0.003414038 16.317642866 
2.325922 :  -0.094155130  0.001160032 19.765992234 
1.143551 :  -0.0151197687 -0.0006457704 23.8033914897 
1.109012 :  -0.0190361739 -0.0006660158 23.6732883929 
1.108962 :  -0.0185888655 -0.0006803782 23.6720733186 
1.108962 :  -0.0185722842 -0.0006808925 23.6716229064 
4.906489 :  -0.010 -0.001  0.500 
0.8354108 :  -0.009917857 -0.001125306  1.030571404 
0.8300544 :  -0.008853095 -0.001099887  1.025602192 
0.8300393 :  -0.009185346 -0.001089748  1.027225512 
0.830039 :  -0.009221540 -0.001088370  1.027368907 
0.830039 :  -0.009227823 -0.001088137  1.027394982 
0.830039 :  -0.009228859 -0.001088099  1.027399261 
15.86168 :  -0.010 -0.001  0.500 
5.173376 :  -0.008154910 -0.003814882 22.667883369 
4.675885 :  -0.045620540  0.000954816 20.753476386 
1.20507 :  -0.0642385141  0.0004816771 22.8439289621 
0.8460406 :  -0.0180294109 -0.0007511339 22.8617346132 
0.8306716 :  -0.011154587 -0.001015625 22.701098318 
0.8300576 :  -0.009573096 -0.001075292 22.660766850 
0.8300395 :  -0.009286848 -0.001085947 22.651282315 
0.830039 :  -0.009238648 -0.001087736 22.649578624 
0.830039 :  -0.009230648 -0.001088033 22.649292463 
0.830039 :  -0.009229330 -0.001088082 22.649245054 
5.297491 :  -0.010 -0.001  0.500 
1.691647 :  -0.001122684 -0.001135688  0.953062592 
1.663554 :  -0.006166289 -0.001048546  0.957620227 
1.663531 :  -0.005913937 -0.001057271  0.955700590 
1.663531 :  -0.005903679 -0.001057810  0.955694823 
1.663531 :  -0.005902012 -0.001057876  0.955689409 
15.83194 :  -0.010 -0.001  0.500 
8.854524 :   0.189420616 -0.004048092 22.403110564 
5.6262 :  -0.129882213  0.001502357 22.104524502 
1.687776 :  -0.0200194924 -0.0006497555 22.5124859712 
1.663729 :  -0.006227742 -0.001035921 22.439472561 
1.663533 :  -0.005992161 -0.001054448 22.409764883 
1.663531 :  -0.005907563 -0.001057618 22.406662962 
1.663531 :  -0.005902560 -0.001057854 22.406300170 
5.166898 :  -0.010 -0.001  0.500 
1.821970 :  -0.0173327460 -0.0003608975  0.9538896486 
1.710111 :  -0.0154156111 -0.0006169407  0.9616868962 
1.708434 :  -0.0134531238 -0.0006974312  0.9539789738 
1.708427 :  -0.0132333721 -0.0007043366  0.9529272444 
1.708427 :  -0.0132161863 -0.0007048421  0.9528393476 
1.708427 :  -0.0132149053 -0.0007048798  0.9528327649 
15.46351 :  -0.010 -0.001  0.500 
13.72616 :  -0.050668608  0.002544565  5.951179843 
8.639193 :  -0.290578460  0.005125216  9.871736718 
4.064404 :  -0.104593339  0.001803982 14.553453318 
1.813729 :   0.014954292 -0.001356103 22.320645507 
1.708576 :  -0.0122625848 -0.0007374792 22.2937825314 
1.708427 :  -0.0131395643 -0.0007070553 22.3114509718 
1.708427 :  -0.013209252 -0.000705046 22.312085448 
1.708427 :  -0.0132143839 -0.0007048951 22.3121307134 
7.249767 :  -0.010 -0.001  0.500 
3.325453 :   0.0009650775 -0.0014168563  0.9887919038 
3.314342 :  -0.003310480 -0.001257534  0.984927091 
3.314308 :  -0.003641719 -0.001244112  0.985723613 
3.314308 :  -0.003675855 -0.001242736  0.985839140 
3.314308 :  -0.003679440 -0.001242592  0.985851320 
18.09082 :  -0.010 -0.001  0.500 
7.23809 :   0.24022862 -0.01051287 22.72423307 
3.543234 :  -0.001400219 -0.001307660 19.907796289 
3.314320 :  -0.003930792 -0.001237117 22.685694829 
3.314308 :  -0.003676333 -0.001242580 22.693082290 
3.314308 :  -0.003680380 -0.001242558 22.692771724 
4.859298 :  -0.010 -0.001  0.500 
1.195223 :  -0.004253106 -0.001374885  0.996335790 
1.187924 :  -0.006271610 -0.001220528  0.992955460 
1.187920 :  -0.006385009 -0.001218316  0.993527325 
1.187920 :  -0.006385028 -0.001218302  0.993525064 
15.40329 :  -0.010 -0.001  0.500 
5.397986 :   0.117492586 -0.009316683 21.673446374 
2.422711 :  -0.0170382980 -0.0002731544 18.3515418320 
1.203839 :  -0.0183716787 -0.0008910594 21.7021347923 
1.187947 :  -0.006795775 -0.001202443 21.674657430 
1.187920 :  -0.006406772 -0.001217455 21.664907741 
1.187920 :  -0.006386187 -0.001218257 21.664282782 
1.187920 :  -0.006385118 -0.001218298 21.664248951 
5.350342 :  -0.010 -0.001  0.500 
1.783965 :  -0.0243469281 -0.0005668656  1.0245790267 
1.759518 :  -0.0176571473 -0.0007594617  1.0261189638 
1.759472 :  -0.0175911185 -0.0007663984  1.0258999947 
1.759472 :  -0.0175541330 -0.0007677119  1.0257431182 
1.759472 :  -0.017551107 -0.000767833  1.025733188 
15.84217 :  -0.010 -0.001  0.500 
9.77545 :  -0.17114551  0.00386499 11.37961429 
2.397071 :   0.033595661 -0.001700162 21.882825531 
1.773957 :  -0.0267817215 -0.0005581563 22.2978058862 
1.759488 :  -0.0176111684 -0.0007624946 22.2989966208 
1.759472 :  -0.0175775286 -0.0007668945 22.2852830632 
1.759472 :  -0.0175529293 -0.0007677595 22.2845271832 
1.759472 :  -0.0175509785 -0.0007678379 22.2844299928 
5.125406 :  -0.010 -0.001  0.500 
1.628599 :   0.004258735 -0.001165121  0.922225830 
1.535134 :  -0.003023790 -0.001068633  0.925883413 
1.534916 :  -0.003003845 -0.001078417  0.925025917 
1.534916 :  -0.002976297 -0.001079436  0.924918779 
1.534916 :  -0.002975769 -0.001079462  0.924918227 
15.58083 :  -0.010 -0.001  0.500 
9.127906 :   0.148162490 -0.002831580 11.360719462 
4.289382 :  -0.131592783  0.001600410 16.590270989 
1.684928 :   0.013371636 -0.001249438 22.200424712 
1.535678 :  -0.005604776 -0.001005451 22.236552511 
1.534916 :  -0.002969232 -0.001078939 22.226406313 
1.534916 :  -0.002977783 -0.001079393 22.224580935 
1.534916 :  -0.002975779 -0.001079462 22.224536228 
5.524541 :  -0.010 -0.001  0.500 
1.468665 :   0.01819063 -0.00207385  0.96775970 
1.383094 :   0.004004396 -0.001546707  0.972114090 
1.382987 :   0.004262441 -0.001555310  0.968432814 
1.382987 :   0.004252809 -0.001555044  0.968492329 
16.48811 :  -0.010 -0.001  0.500 
13.33784 :   0.61539879 -0.02482297 22.18970953 
2.132210 :  -0.001364615 -0.001419773 17.326382145 
1.383460 :   0.006119305 -0.001602012 22.193836600 
1.382988 :   0.004161129 -0.001552261 22.196520020 
1.382987 :   0.004257148 -0.001555171 22.195805293 
1.382987 :   0.004253061 -0.001555052 22.195821440 
5.412324 :  -0.010 -0.001  0.500 
2.206537 :   0.015882539 -0.001617590  0.883059187 
2.078546 :   0.004253541 -0.001340472  0.884157855 
2.078236 :   0.003450830 -0.001321969  0.885641166 
2.078236 :   0.003452209 -0.001322005  0.885625041 
15.62967 :  -0.010 -0.001  0.500 
14.32764 :   0.57142834 -0.01487360 21.85276844 
2.970426 :  -0.0515956634  0.0001047125 17.2520097999 
2.095298 :   0.014284875 -0.001566579 21.860875679 
2.078241 :   0.003242041 -0.001316603 21.851939655 
2.078236 :   0.003452902 -0.001322017 21.851493924 
5.673243 :  -0.010 -0.001  0.500 
1.86691 :  -4.417696e-02 -7.178155e-05  1.113263e+00 
1.697551 :  -0.025907169 -0.000563969  1.117574159 
1.696699 :  -0.027031696 -0.000536818  1.118165336 
1.696699 :  -0.0270638811 -0.0005358519  1.1183212129 
16.45570 :  -0.010 -0.001  0.500 
9.82788 :  -0.382753571  0.009123685 11.249801932 
4.416516 :   0.120549068 -0.003858394 18.648005882 
2.435718 :  -0.091038717  0.000980525 22.052490815 
1.701481 :  -0.0335340903 -0.0003579139 21.9957682002 
1.696703 :  -0.0272570840 -0.0005297283 22.0032356159 
1.696699 :  -0.0270696576 -0.0005356699 22.0024186746 
1.696699 :  -0.0270648264 -0.0005358222 22.0023927249 
4.938224 :  -0.010 -0.001  0.500 
1.964901 :  -0.003894402 -0.001069171  0.919009406 
1.95206 :  -0.006730316 -0.001036706  0.919251069 
1.952055 :  -0.006750289 -0.001037835  0.919238280 
1.952055 :  -0.006745952 -0.001037990  0.919220561 
14.71226 :  -0.010 -0.001  0.500 
7.233497 :   0.120221391 -0.002475289 20.304104994 
4.148647 :  -0.122931933  0.001729149 20.193792666 
1.986025 :  -0.0274034888 -0.0004144245 20.2992928744 
1.952245 :  -0.0081472782 -0.0009867335 20.3182334911 
1.952056 :  -0.006849462 -0.001034174 20.305213826 
1.952055 :  -0.006753158 -0.001037726 20.303969933 
1.952055 :  -0.006746163 -0.001037982 20.303875350 
4.421224 :  -0.010 -0.001  0.500 
1.016372 :  -0.010964676 -0.000986129  0.980719728 
1.016084 :  -0.0105153836 -0.0009921604  0.9808339216 
1.016084 :  -0.0105053030 -0.0009925323  0.9807824735 
14.63213 :  -0.010 -0.001  0.500 
1.167934 :  -0.0305746807 -0.0007041577 20.8147410311 
1.016536 :  -0.012769350 -0.000916863 20.819434974 
1.016084 :  -0.0105344042 -0.0009917384 20.8144298710 
1.016084 :  -0.0105056600 -0.0009925214 20.8147978968 
4.809587 :  -0.010 -0.001  0.500 
1.412050 :  -4.993891e-02 -1.192066e-05  1.114407e+00 
1.175772 :  -0.0280291664 -0.0005474847  1.1160253161 
1.173496 :  -0.0301231561 -0.0005011077  1.1200591021 
1.173496 :  -0.0301580854 -0.0005000771  1.1201838754 
15.27994 :  -0.010 -0.001  0.500 
11.09046 :  -0.453015130  0.009960091 11.115119837 
4.284868 :   0.089777771 -0.002885042 15.900445854 
2.730855 :  -0.111986128  0.001259251 21.813020768 
1.185095 :  -0.0399934367 -0.0002351652 21.7337725327 
1.173504 :  -0.0303856000 -0.0004918138 21.7401360572 
1.173496 :  -0.0301646327 -0.0004998383 21.7362058607 
1.173496 :  -0.0301588416 -0.0005000493 21.7360628543 
8.05596 :  -0.010 -0.001  0.500 
4.240395 :   0.041749878 -0.002643097  0.893573147 
3.834274 :   0.021523807 -0.002023647  0.882470073 
3.831933 :   0.018954392 -0.001946697  0.886604534 
3.831932 :   0.018881524 -0.001944076  0.886848907 
3.831932 :   0.018879071 -0.001943982  0.886858111 
19.07261 :  -0.010 -0.001  0.500 
9.856104 :   0.57660074 -0.01962501 11.52251393 
5.617938 :   0.019679868 -0.001996391 14.924719772 
3.832186 :   0.018546145 -0.001919941 22.533820644 
3.831932 :   0.018842164 -0.001942603 22.537512493 
3.831932 :   0.018877636 -0.001943928 22.536532549 
5.324777 :  -0.010 -0.001  0.500 
1.568256 :   0.009432336 -0.001355579  0.930438812 
1.445137 :   0.0000707503 -0.0011832473  0.9325212104 
1.444866 :  -0.0004107107 -0.0011762183  0.9331760182 
1.444866 :  -0.0003996086 -0.0011765385  0.9331091833 
16.09262 :  -0.010 -0.001  0.500 
14.7623 :   0.43054287 -0.00906119 23.04910357 
3.075032 :  -0.0962220942  0.0008814056 18.7891868851 
1.481378 :   0.008924309 -0.001302676 23.125075718 
1.444913 :  -0.001014714 -0.001159727 23.050215035 
1.444866 :  -0.000406016 -0.001176194 23.045975668 
1.444866 :  -0.000399990 -0.001176526 23.045310525 
4.504382 :  -0.010 -0.001  0.500 
0.8925442 :  -0.0356432492 -0.0002479529  1.0637642129 
0.8090075 :  -0.0218542734 -0.0006562207  1.0638787855 
0.8087869 :  -0.022628560 -0.000633406  1.064854859 
0.8087869 :  -0.0226246201 -0.0006336652  1.0648549154 
15.06696 :  -0.010 -0.001  0.500 
14.58005 :  -0.294443168  0.007341949 11.306436321 
2.126234 :  -0.0007490724 -0.0007106289 17.6701792273 
0.853361 :  -0.0344652022 -0.0004306637 22.1000975705 
0.808823 :  -0.0231753933 -0.0006187991 22.1068123155 
0.8087869 :  -0.0226235650 -0.0006337756 22.1067006316 
0.8087869 :  -0.0226250503 -0.0006336494 22.1069850158 
4.533358 :  -0.010 -0.001  0.500 
0.9538474 :  -0.0222869956 -0.0004886281  1.0074123583 
0.9407958 :  -0.0172170942 -0.0007032323  1.0114327210 
0.9407165 :  -0.0166438111 -0.0007259361  1.0090804705 
0.940716 :  -0.0165956731 -0.0007278248  1.0089126179 
0.940716 :  -0.0165918606 -0.0007279741  1.0088992304 
14.97158 :  -0.010 -0.001  0.500 
12.17827 :  -0.144009083  0.004577318 11.127645425 
8.561892 :  -0.181969645  0.002415544 20.049242558 
2.076596 :  -0.063726049  0.001246187 21.671211455 
0.9997452 :  -0.0324132975 -0.0001111933 21.8537934441 
0.9417442 :  -0.0186253366 -0.0006442675 21.8036656786 
0.9407235 :  -0.0167895699 -0.0007202151 21.7776096861 
0.940716 :  -0.0166073155 -0.0007273682 21.7732763124 
0.940716 :  -0.0165927752 -0.0007279383 21.7728699712 
0.940716 :  -0.016591633 -0.000727983 21.772837537 
5.104357 :  -0.010 -0.001  0.500 
1.041399 :   0.004559819 -0.001206171  0.961450287 
0.946071 :  -0.002255816 -0.001113090  0.960615925 
0.9458687 :  -0.002657874 -0.001109057  0.961817999 
0.9458687 :  -0.002659174 -0.001109032  0.961822420 
16.12153 :  -0.010 -0.001  0.500 
15.31222 :   0.317073426 -0.005631439 23.292387230 
7.406594 :  -0.169575053  0.002011705 19.116157507 
2.258962 :  -0.0353330167  0.0003859721 23.1094929435 
1.019957 :  -0.0220310240 -0.0004602487 23.3747472429 
0.947271 :  -0.005118784 -0.001019090 23.316699763 
0.9458759 :  -0.002870940 -0.001101834 23.292374214 
0.9458687 :  -0.002673758 -0.001108550 23.288225330 
0.9458687 :  -0.002660177 -0.001108999 23.287879276 
0.9458687 :  -0.002659286 -0.001109029 23.287856212 
5.587236 :  -0.010 -0.001  0.500 
1.814347 :  -0.0128175678 -0.0006619467  0.9851469825 
1.782522 :  -0.0105929159 -0.0008590182  0.9819715448 
1.78248 :  -0.010615506 -0.000863394  0.982204793 
1.78248 :  -0.0106365052 -0.0008626541  0.9822924234 
16.22420 :  -0.010 -0.001  0.500 
15.78761 :  -0.040730108  0.002687007 11.343240457 
6.466843 :  -0.186449916  0.004370323 13.934025954 
2.97694 :  -0.070415067  0.001122935 17.910187876 
1.787912 :  -0.004032407 -0.001030134 22.122557889 
1.782486 :  -0.0104605870 -0.0008662332 22.1793089715 
1.78248 :  -0.0106264701 -0.0008629385 22.1754819468 
1.78248 :  -0.0106361508 -0.0008626725 22.1754627803 
4.155695 :  -0.010 -0.001  0.500 
0.686413 :  -0.001091939 -0.001116756  0.941524920 
0.6556057 :  -0.005376705 -0.001060384  0.942234908 
0.6555831 :  -0.005451901 -0.001060799  0.942219105 
0.655583 :  -0.005442512 -0.001061101  0.942175030 
0.655583 :  -0.005441513 -0.001061135  0.942170922 
14.56908 :  -0.010 -0.001  0.500 
9.455959 :   0.191951165 -0.003646925 22.435376546 
6.867776 :  -0.152833953  0.001737089 21.652692255 
0.846683 :  -4.023052e-02 -1.034129e-05  2.239489e+01 
0.6631934 :  -0.01103461 -0.00085350 22.54086343 
0.6557349 :  -0.006376714 -0.001028155 22.457776032 
0.6555854 :  -0.005563197 -0.001056927 22.437127880 
0.6555831 :  -0.005456301 -0.001060625 22.433539588 
0.655583 :  -0.005443178 -0.001061078 22.433077094 
0.655583 :  -0.005441594 -0.001061133 22.433020625 
> length(sim4ur)
[1] 400
> sim4ur <- foreach(i=1:100,.combine=c) %do% {
+ 
+     k <- which.min(sapply(modl4.100[[i]],KZ.k))-1
+     bb <- prep.nls.finite(sim4.100[[i]],k)
+     
+     sn4u <- try(nls(that~theta.u214(index,lambda,beta),data=bb,start=list(lambda=c(-0.01,-0.001),beta=0.5),trace=FALSE))
+ 
+     sn4r <- try(nls(that~theta.r214(index,lambda,beta),data=bb,start=list(lambda=c(-0.01,-0.001),beta=0.5),trace=FALSE))
+     
+     list(list(k=k,bb=bb,u=sn4u,r=sn4r))
+ }
Error in nls(that ~ theta.u214(index, lambda, beta), data = bb, start = list(lambda = c(-0.01,  : 
  le pas 0.000488281 est devenu inférieur à 'minFactor' de 0.000976562
> sapply(sim4ur,function(l)l$k)
  [1] 13 15 13 13 12 14 11 12 13 14 15 12 15 17 12 16 14 14 16 13 14 15 10 14 12
 [26] 12 14 11 13 15 13 17 11 13 12 13 15 12 14 15 10 12 15 11 13 15 15 13 12 15
 [51] 14 15 13 10 12 17 17 15 11 11 10 11 17 15 16 11 14 16 12 13 17 14 14 12 14
 [76] 13 15 10 12 16 14 14 13 16 13 14 13 13 14 12 11 11 13 15 15 13 12 14 12 15
> table(sapply(sim4ur,function(l)l$k))

10 11 12 13 14 15 16 17 
 5 10 17 20 18 18  6  6 
> 
> sim4dif <- foreach(i=1:100,.combine=c) %do% {
+     bb <- sim4ur$bb
+     sn4r <- sim4ur$r
+     sn4u <- sim4ur$u
+     list(cbind(theta.r214(bb$index,coef(sn4r)[1:2],coef(sn4r)[3]),  theta.u214(bb$index,coef(sn4u)[1:2],coef(sn4u)[3])))
+ }
Erreur dans { : 
  task 1 failed - "'degree' must be less than number of unique points"
> theta.r214(bb$index,coef(sn4r)[1:2],coef(sn4r)[3]) - theta.u214(bb$index,coef(sn4u)[1:2],coef(sn4u)[3])
Erreur dans poly((index + 1), 2, raw = TRUE) : 
  'degree' must be less than number of unique points
> 
> sim4dif <- foreach(i=1:100,.combine=c) %do% {
+     bb <- sim4ur[[i]]$bb
+     sn4r <- sim4ur[[i]]$r
+     sn4u <- sim4ur[[i]]$u
+     list(cbind(theta.r214(bb$index,coef(sn4r)[1:2],coef(sn4r)[3]),  theta.u214(bb$index,coef(sn4u)[1:2],coef(sn4u)[3])))
+ }
Erreur dans { : task 55 failed - "$ operator is invalid for atomic vectors"
> 
> sim4dif <- foreach(i=1:100,.combine=c) %do% {
+     bb <- sim4ur[[i]]$bb
+     sn4r <- sim4ur[[i]]$r
+     sn4u <- sim4ur[[i]]$u
+     if(class(sn4r)=="try-error" | class(sn4u)=="try-error") NULL
+     else
+     list(cbind(theta.r214(bb$index,coef(sn4r)[1:2],coef(sn4r)[3]),  theta.u214(bb$index,coef(sn4u)[1:2],coef(sn4u)[3])))
+ }
> dd <- sapply(sim4dif,function(l)sum((l[,1]-l[,2])^2))
> dd
 [1] 4.718217e-10 1.924533e-14 2.163503e-12 2.656193e-12 1.471785e-10
 [6] 1.624076e-11 1.009838e-10 8.199320e-11 1.066771e-11 7.738827e-11
[11] 2.565902e-11 5.954717e-12 1.009641e-10 7.606749e-11 3.134029e-13
[16] 1.068974e-11 1.888597e-11 3.566584e-11 7.668760e-13 1.125591e-10
[21] 1.863408e-15 9.378606e-11 9.945253e-11 1.650734e-10 7.014427e-12
[26] 5.097159e-12 8.819781e-11 4.261846e-11 8.249261e-14 8.946377e-11
[31] 5.388985e-11 4.430901e-10 6.685775e-15 1.130900e-10 1.379884e-10
[36] 1.530565e-12 1.440168e-12 1.445372e-11 4.490713e-12 9.270398e-11
[41] 1.107043e-10 2.552609e-10 6.924035e-13 2.674418e-10 9.118988e-12
[46] 7.105375e-13 3.311626e-11 6.709467e-13 3.226936e-10 4.181246e-12
[51] 8.171683e-11 1.482657e-10 6.765953e-12 1.268456e-10 5.981055e-11
[56] 2.059757e-12 2.483977e-11 3.607409e-11 3.457357e-12 3.978509e-11
[61] 9.330752e-11 3.419863e-11 4.189561e-12 6.096966e-13 2.676212e-11
[66] 2.949676e-10 2.573760e-11 4.932245e-11 3.554369e-12 7.585790e-11
[71] 1.830444e-10 4.074504e-10 3.987657e-11 1.956103e-10 1.995151e-11
[76] 3.053182e-10 9.503562e-11 1.087747e-11 4.585848e-11 4.073839e-11
[81] 8.538520e-11 3.263576e-11 1.537216e-10 1.306645e-12 4.373975e-12
[86] 1.744770e-13 6.348113e-12 1.147096e-10 9.898487e-11 4.633415e-12
[91] 1.093953e-11 1.024211e-10 2.994202e-10 2.125921e-11 3.506994e-11
[96] 1.057771e-11 1.885689e-12 8.515102e-11 1.144821e-12
> hist(dd)
> quantile(dd)
          0%          25%          50%          75%         100% 
1.863408e-15 4.562064e-12 3.506994e-11 9.921870e-11 4.718217e-10 
> sapply(sim4ur,function(l)coef(l$u))
Erreur dans object$coefficients : $ operator is invalid for atomic vectors
> sapply(sim4ur,function(l)class(l$u))
  [1] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
  [7] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [13] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [19] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [25] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [31] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [37] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [43] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [49] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [55] "try-error" "nls"       "nls"       "nls"       "nls"       "nls"      
 [61] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [67] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [73] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [79] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [85] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [91] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [97] "nls"       "nls"       "nls"       "nls"      
> sim4urr[[55]] <- NULL
Erreur dans sim4urr[[55]] <- NULL : objet 'sim4urr' introuvable
> sim4urr <- sim4ur
> sim4urr[[55]] <- NULL
> sapply(sim4urt,function(l)class(l$u))
Erreur dans is.vector(X) : objet 'sim4urt' introuvable
> sapply(sim4urr,function(l)class(l$u))
 [1] "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls"
[13] "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls"
[25] "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls"
[37] "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls"
[49] "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls"
[61] "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls"
[73] "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls"
[85] "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls" "nls"
[97] "nls" "nls" "nls"
> sapply(sim4urr,function(l)coef(l$u))
                 [,1]          [,2]         [,3]         [,4]          [,5]
lambda1 -0.0242541007 -0.0241875253  0.003100258  0.007525636 -0.0152550784
                 [,6]          [,7]          [,8]         [,9]         [,10]
lambda1 -0.0103632119 -0.0205863989 -0.0103602287 -0.000982291  0.0003181133
                [,11]         [,12]         [,13]        [,14]         [,15]
lambda1 -0.0109450554 -0.0158203086 -0.0092332995 -0.011021273 -0.0145740272
                [,16]        [,17]        [,18]         [,19]        [,20]
lambda1 -0.0135294898 -0.008740914 -0.018791668 -0.0104007845 -0.007303233
                [,21]         [,22]        [,23]        [,24]         [,25]
lambda1 -0.0115050114 -0.0159255795  0.006904980 -0.002560558 -0.0096663549
                [,26]         [,27]        [,28]         [,29]         [,30]
lambda1 -0.0178595561 -0.0203474921  0.001542172 -0.0139306853 -0.0252407692
                [,31]         [,32]        [,33]         [,34]         [,35]
lambda1 -0.0169180054 -0.0200490742  0.011204886 -0.0239699526 -0.0145886023
                [,36]        [,37]        [,38]         [,39]         [,40]
lambda1 -0.0217940426 -0.016398109 -0.022424514 -0.0123074894 -0.0195653001
                [,41]         [,42]         [,43]         [,44]        [,45]
lambda1 -0.0171637799 -0.0116643652 -0.0115425849 -0.0126027777  0.004984509
                [,46]         [,47]       [,48]         [,49]        [,50]
lambda1 -0.0090749958 -0.0142397105 -0.01225549 -0.0316311831 -0.004274095
               [,51]         [,52]         [,53]        [,54]        [,55]
lambda1 -0.003834573 -0.0212369665 -0.0288640544 -0.005037656 -0.011823129
               [,56]         [,57]        [,58]         [,59]        [,60]
lambda1 -0.003944508 -0.0113173772  0.002317037 -0.0230694216 -0.009695664
               [,61]        [,62]         [,63]         [,64]         [,65]
lambda1 -0.010551684 -0.006507967 -0.0060186550 -0.0222625440 -0.0261787643
               [,66]         [,67]         [,68]        [,69]         [,70]
lambda1 -0.007215183 -0.0123032783 -0.0462414487 -0.010961627 -0.0166831535
               [,71]        [,72]        [,73]         [,74]         [,75]
lambda1  0.003856732  0.007003089 -0.002320503 -0.0139676399 -0.0085084848
               [,76]        [,77]         [,78]         [,79]        [,80]
lambda1 -0.004760797  0.005123438 -0.0372850778 -0.0185717815 -0.009228859
               [,81]         [,82]        [,83]        [,84]        [,85]
lambda1 -0.005902012 -0.0132149053 -0.003679440 -0.006385028 -0.017551107
               [,86]        [,87]        [,88]         [,89]        [,90]
lambda1 -0.002975769  0.004252809  0.003452209 -0.0270638811 -0.006745952
                [,91]         [,92]        [,93]         [,94]         [,95]
lambda1 -0.0105053030 -0.0301580854  0.018879071 -0.0003996086 -0.0226246201
                [,96]        [,97]         [,98]        [,99]
lambda1 -0.0165918606 -0.002659174 -0.0106365052 -0.005441513
 [getOption("max.print") est atteint -- 2 lignes omises ]]
> dd <- sapply(sim4urr,function(l)coef(l$u))
> dd[1,]
 [1] -0.0242541007 -0.0241875253  0.0031002577  0.0075256361 -0.0152550784
 [6] -0.0103632119 -0.0205863989 -0.0103602287 -0.0009822911  0.0003181133
[11] -0.0109450554 -0.0158203086 -0.0092332995 -0.0110212732 -0.0145740272
[16] -0.0135294898 -0.0087409139 -0.0187916679 -0.0104007845 -0.0073032325
[21] -0.0115050114 -0.0159255795  0.0069049795 -0.0025605577 -0.0096663549
[26] -0.0178595561 -0.0203474921  0.0015421717 -0.0139306853 -0.0252407692
[31] -0.0169180054 -0.0200490742  0.0112048857 -0.0239699526 -0.0145886023
[36] -0.0217940426 -0.0163981091 -0.0224245140 -0.0123074894 -0.0195653001
[41] -0.0171637799 -0.0116643652 -0.0115425849 -0.0126027777  0.0049845093
[46] -0.0090749958 -0.0142397105 -0.0122554858 -0.0316311831 -0.0042740954
[51] -0.0038345729 -0.0212369665 -0.0288640544 -0.0050376558 -0.0118231291
[56] -0.0039445078 -0.0113173772  0.0023170372 -0.0230694216 -0.0096956639
[61] -0.0105516842 -0.0065079675 -0.0060186550 -0.0222625440 -0.0261787643
[66] -0.0072151829 -0.0123032783 -0.0462414487 -0.0109616274 -0.0166831535
[71]  0.0038567321  0.0070030892 -0.0023205032 -0.0139676399 -0.0085084848
[76] -0.0047607973  0.0051234384 -0.0372850778 -0.0185717815 -0.0092288592
[81] -0.0059020122 -0.0132149053 -0.0036794401 -0.0063850279 -0.0175511066
[86] -0.0029757688  0.0042528091  0.0034522087 -0.0270638811 -0.0067459517
[91] -0.0105053030 -0.0301580854  0.0188790712 -0.0003996086 -0.0226246201
[96] -0.0165918606 -0.0026591744 -0.0106365052 -0.0054415132
> dd[2,]
 [1] -0.0006886992 -0.0005658193 -0.0014978829 -0.0014059072 -0.0008243007
 [6] -0.0009563121 -0.0006924853 -0.0009309383 -0.0013074103 -0.0011341478
[11] -0.0009387106 -0.0007387448 -0.0008865586 -0.0008778950 -0.0007801413
[16] -0.0009018521 -0.0009827960 -0.0006232720 -0.0009185368 -0.0011287867
[21] -0.0009228325 -0.0009886965 -0.0018061281 -0.0012228307 -0.0009921867
[26] -0.0006956986 -0.0006475808 -0.0014756559 -0.0007963832 -0.0006078071
[31] -0.0006711333 -0.0006892276 -0.0015640277 -0.0004739165 -0.0007366424
[36] -0.0006166986 -0.0006710510 -0.0006714480 -0.0008502834 -0.0007140613
[41] -0.0009995708 -0.0008318415 -0.0009482267 -0.0006008356 -0.0014202802
[46] -0.0009346549 -0.0008664907 -0.0010326699 -0.0003413027 -0.0011886396
[51] -0.0012504392 -0.0006677357 -0.0004220345 -0.0011742534 -0.0010692098
[56] -0.0010464660 -0.0008861874 -0.0013826172 -0.0005584382 -0.0011748591
[61] -0.0010367194 -0.0010331256 -0.0009325477 -0.0005574595 -0.0005552456
[66] -0.0011703605 -0.0009627546  0.0001817555 -0.0012111974 -0.0007550117
[71] -0.0014444328 -0.0013613233 -0.0014517848 -0.0006933319 -0.0009242547
[76] -0.0010904881 -0.0015510699 -0.0003283416 -0.0006809078 -0.0010880990
[81] -0.0010578760 -0.0007048798 -0.0012425919 -0.0012183016 -0.0007678329
[86] -0.0010794625 -0.0015550445 -0.0013220052 -0.0005358519 -0.0010379900
[91] -0.0009925323 -0.0005000771 -0.0019439824 -0.0011765385 -0.0006336652
[96] -0.0007279741 -0.0011090325 -0.0008626541 -0.0010611354
> dd[3,]
 [1] 1.1020518 1.0716012 0.9600245 0.9381168 1.0013505 0.9750019 1.0487279
 [8] 0.9574398 0.9393870 0.8691219 1.0007285 1.0310716 0.9629720 1.0143574
[15] 1.0071909 1.0311744 0.9442810 1.0234835 1.0073499 0.9686104 1.0198834
[22] 1.1039349 0.8735715 0.9548019 0.9607289 1.0258374 1.0559891 0.9311279
[29] 0.9881287 1.1167971 1.0075393 1.0447936 0.8821593 1.0718611 1.0222903
[36] 1.0490604 0.9927580 1.0785632 0.9975521 1.0784499 1.0929002 1.0182102
[43] 1.0333841 0.9424630 0.9285956 0.9893766 1.0259793 1.0252426 1.0863320
[50] 0.9467271 0.9799631 1.0699412 1.0704693 0.9408627 1.0288569 0.9229912
[57] 1.0135469 0.9262207 1.0152614 0.9902234 1.0193739 0.9799991 0.9309248
[64] 1.0551221 1.1089436 0.9528598 1.0216535 1.2010711 1.0388740 1.0090315
[71] 0.9367479 0.8702982 0.9855778 0.9926414 0.9724637 0.9329970 0.9864391
[78] 1.2557242 1.0485955 1.0273993 0.9556894 0.9528328 0.9858513 0.9935251
[85] 1.0257332 0.9249182 0.9684923 0.8856250 1.1183212 0.9192206 0.9807825
[92] 1.1201839 0.8868581 0.9331092 1.0648549 1.0088992 0.9618224 0.9822924
[99] 0.9421709
> mean(dd[1,])
[1] -0.01127585
> mean(dd[2,])
[1] -0.000945135
> mean(dd[3,])
[1] 1.000963
> ee <- sapply(sim4urr,function(l)coef(l$r))
> mean(ee[3,])
[1] 22.21171
> mean(ee[1,])
[1] -0.01127598
> mean(ee[2,])
[1] -0.0009451305
> theta.r214(0:100,c(-0.01,-0.0001),22) 
             [,1]
  [1,] 0.43206484
  [2,] 0.42763741
  [3,] 0.42317071
  [4,] 0.41866692
  [5,] 0.41412823
  [6,] 0.40955683
  [7,] 0.40495489
  [8,] 0.40032458
  [9,] 0.39566808
 [10,] 0.39098753
 [11,] 0.38628509
 [12,] 0.38156288
 [13,] 0.37682303
 [14,] 0.37206764
 [15,] 0.36729879
 [16,] 0.36251856
 [17,] 0.35772898
 [18,] 0.35293209
 [19,] 0.34812989
 [20,] 0.34332436
 [21,] 0.33851746
 [22,] 0.33371111
 [23,] 0.32890721
 [24,] 0.32410764
 [25,] 0.31931423
 [26,] 0.31452881
 [27,] 0.30975314
 [28,] 0.30498899
 [29,] 0.30023805
 [30,] 0.29550202
 [31,] 0.29078253
 [32,] 0.28608119
 [33,] 0.28139958
 [34,] 0.27673923
 [35,] 0.27210164
 [36,] 0.26748826
 [37,] 0.26290051
 [38,] 0.25833977
 [39,] 0.25380739
 [40,] 0.24930466
 [41,] 0.24483283
 [42,] 0.24039314
 [43,] 0.23598675
 [44,] 0.23161480
 [45,] 0.22727839
 [46,] 0.22297857
 [47,] 0.21871635
 [48,] 0.21449269
 [49,] 0.21030854
 [50,] 0.20616476
 [51,] 0.20206222
 [52,] 0.19800171
 [53,] 0.19398400
 [54,] 0.19000980
 [55,] 0.18607981
 [56,] 0.18219466
 [57,] 0.17835495
 [58,] 0.17456125
 [59,] 0.17081407
 [60,] 0.16711391
 [61,] 0.16346120
 [62,] 0.15985636
 [63,] 0.15629975
 [64,] 0.15279172
 [65,] 0.14933255
 [66,] 0.14592250
 [67,] 0.14256181
 [68,] 0.13925067
 [69,] 0.13598923
 [70,] 0.13277762
 [71,] 0.12961593
 [72,] 0.12650422
 [73,] 0.12344253
 [74,] 0.12043084
 [75,] 0.11746914
 [76,] 0.11455736
 [77,] 0.11169542
 [78,] 0.10888319
 [79,] 0.10612055
 [80,] 0.10340731
 [81,] 0.10074330
 [82,] 0.09812829
 [83,] 0.09556204
 [84,] 0.09304429
 [85,] 0.09057477
 [86,] 0.08815315
 [87,] 0.08577912
 [88,] 0.08345234
 [89,] 0.08117243
 [90,] 0.07893902
 [91,] 0.07675171
 [92,] 0.07461008
 [93,] 0.07251371
 [94,] 0.07046215
 [95,] 0.06845494
 [96,] 0.06649160
 [97,] 0.06457166
 [98,] 0.06269462
 [99,] 0.06085997
[100,] 0.05906719
 [getOption("max.print") est atteint -- dernière ligne omises ]]
> theta.u214(0:100,c(-0.01,-0.0001),1) 
            [,1]
  [1,] 0.9899508
  [2,] 0.9798067
  [3,] 0.9695725
  [4,] 0.9592534
  [5,] 0.9488543
  [6,] 0.9383803
  [7,] 0.9278363
  [8,] 0.9172273
  [9,] 0.9065582
 [10,] 0.8958341
 [11,] 0.8850599
 [12,] 0.8742403
 [13,] 0.8633803
 [14,] 0.8524847
 [15,] 0.8415583
 [16,] 0.8306058
 [17,] 0.8196319
 [18,] 0.8086412
 [19,] 0.7976383
 [20,] 0.7866279
 [21,] 0.7756142
 [22,] 0.7646019
 [23,] 0.7535951
 [24,] 0.7425983
 [25,] 0.7316156
 [26,] 0.7206512
 [27,] 0.7097092
 [28,] 0.6987935
 [29,] 0.6879081
 [30,] 0.6770569
 [31,] 0.6662435
 [32,] 0.6554718
 [33,] 0.6447453
 [34,] 0.6340674
 [35,] 0.6234417
 [36,] 0.6128715
 [37,] 0.6023600
 [38,] 0.5919104
 [39,] 0.5815258
 [40,] 0.5712091
 [41,] 0.5609632
 [42,] 0.5507909
 [43,] 0.5406950
 [44,] 0.5306779
 [45,] 0.5207423
 [46,] 0.5108905
 [47,] 0.5011249
 [48,] 0.4914476
 [49,] 0.4818608
 [50,] 0.4723666
 [51,] 0.4629668
 [52,] 0.4536633
 [53,] 0.4444579
 [54,] 0.4353522
 [55,] 0.4263477
 [56,] 0.4174460
 [57,] 0.4086485
 [58,] 0.3999563
 [59,] 0.3913707
 [60,] 0.3828929
 [61,] 0.3745238
 [62,] 0.3662643
 [63,] 0.3581154
 [64,] 0.3500778
 [65,] 0.3421521
 [66,] 0.3343389
 [67,] 0.3266389
 [68,] 0.3190524
 [69,] 0.3115797
 [70,] 0.3042213
 [71,] 0.2969772
 [72,] 0.2898476
 [73,] 0.2828326
 [74,] 0.2759322
 [75,] 0.2691463
 [76,] 0.2624749
 [77,] 0.2559175
 [78,] 0.2494741
 [79,] 0.2431443
 [80,] 0.2369278
 [81,] 0.2308239
 [82,] 0.2248324
 [83,] 0.2189526
 [84,] 0.2131839
 [85,] 0.2075257
 [86,] 0.2019773
 [87,] 0.1965379
 [88,] 0.1912067
 [89,] 0.1859830
 [90,] 0.1808658
 [91,] 0.1758542
 [92,] 0.1709473
 [93,] 0.1661441
 [94,] 0.1614435
 [95,] 0.1568446
 [96,] 0.1523462
 [97,] 0.1479472
 [98,] 0.1436465
 [99,] 0.1394429
[100,] 0.1353353
 [getOption("max.print") est atteint -- dernière ligne omises ]]
> theta.r214(0:100,c(-0.01,-0.0001),11) 
             [,1]
  [1,] 0.21603242
  [2,] 0.21381871
  [3,] 0.21158536
  [4,] 0.20933346
  [5,] 0.20706412
  [6,] 0.20477841
  [7,] 0.20247744
  [8,] 0.20016229
  [9,] 0.19783404
 [10,] 0.19549377
 [11,] 0.19314254
 [12,] 0.19078144
 [13,] 0.18841152
 [14,] 0.18603382
 [15,] 0.18364940
 [16,] 0.18125928
 [17,] 0.17886449
 [18,] 0.17646605
 [19,] 0.17406495
 [20,] 0.17166218
 [21,] 0.16925873
 [22,] 0.16685555
 [23,] 0.16445360
 [24,] 0.16205382
 [25,] 0.15965712
 [26,] 0.15726440
 [27,] 0.15487657
 [28,] 0.15249449
 [29,] 0.15011903
 [30,] 0.14775101
 [31,] 0.14539126
 [32,] 0.14304060
 [33,] 0.14069979
 [34,] 0.13836962
 [35,] 0.13605082
 [36,] 0.13374413
 [37,] 0.13145025
 [38,] 0.12916989
 [39,] 0.12690369
 [40,] 0.12465233
 [41,] 0.12241642
 [42,] 0.12019657
 [43,] 0.11799338
 [44,] 0.11580740
 [45,] 0.11363920
 [46,] 0.11148928
 [47,] 0.10935817
 [48,] 0.10724635
 [49,] 0.10515427
 [50,] 0.10308238
 [51,] 0.10103111
 [52,] 0.09900086
 [53,] 0.09699200
 [54,] 0.09500490
 [55,] 0.09303990
 [56,] 0.09109733
 [57,] 0.08917748
 [58,] 0.08728062
 [59,] 0.08540704
 [60,] 0.08355695
 [61,] 0.08173060
 [62,] 0.07992818
 [63,] 0.07814988
 [64,] 0.07639586
 [65,] 0.07466627
 [66,] 0.07296125
 [67,] 0.07128091
 [68,] 0.06962533
 [69,] 0.06799461
 [70,] 0.06638881
 [71,] 0.06480796
 [72,] 0.06325211
 [73,] 0.06172126
 [74,] 0.06021542
 [75,] 0.05873457
 [76,] 0.05727868
 [77,] 0.05584771
 [78,] 0.05444160
 [79,] 0.05306027
 [80,] 0.05170366
 [81,] 0.05037165
 [82,] 0.04906414
 [83,] 0.04778102
 [84,] 0.04652215
 [85,] 0.04528738
 [86,] 0.04407658
 [87,] 0.04288956
 [88,] 0.04172617
 [89,] 0.04058622
 [90,] 0.03946951
 [91,] 0.03837586
 [92,] 0.03730504
 [93,] 0.03625686
 [94,] 0.03523107
 [95,] 0.03422747
 [96,] 0.03324580
 [97,] 0.03228583
 [98,] 0.03134731
 [99,] 0.03042999
[100,] 0.02953360
 [getOption("max.print") est atteint -- dernière ligne omises ]]
> theta.r214(0:999,c(-0.01,-0.0001),22)[1:20] 
 [1] 0.4028286 0.3987008 0.3945363 0.3903373 0.3861057 0.3818437 0.3775531
 [8] 0.3732361 0.3688947 0.3645309 0.3601466 0.3557440 0.3513248 0.3468912
[15] 0.3424451 0.3379883 0.3335228 0.3290505 0.3245733 0.3200929
> theta.u214(0:999,c(-0.01,-0.0001),1)[1:20] 
 [1] 0.9899508 0.9798067 0.9695725 0.9592534 0.9488543 0.9383803 0.9278363
 [8] 0.9172273 0.9065582 0.8958341 0.8850599 0.8742403 0.8633803 0.8524847
[15] 0.8415583 0.8306058 0.8196319 0.8086412 0.7976383 0.7866279
> theta.r214(0:999,c(-0.01,-0.0001),44)[1:20] 
 [1] 0.8056573 0.7974016 0.7890727 0.7806746 0.7722115 0.7636873 0.7551062
 [8] 0.7464723 0.7377894 0.7290618 0.7202933 0.7114879 0.7026497 0.6937825
[15] 0.6848901 0.6759766 0.6670456 0.6581010 0.6491465 0.6401858
> theta.r214(0:999,c(-0.01,-0.0001),45)[1:20] 
 [1] 0.8239677 0.8155244 0.8070062 0.7984172 0.7897617 0.7810439 0.7722677
 [8] 0.7634375 0.7545574 0.7456313 0.7366636 0.7276581 0.7186190 0.7095502
[15] 0.7004558 0.6913397 0.6822058 0.6730579 0.6638998 0.6547355
> theta.r214(0:999,c(-0.01,-0.0001),46)[1:20] 
 [1] 0.8422781 0.8336471 0.8249396 0.8161598 0.8073120 0.7984004 0.7894292
 [8] 0.7804028 0.7713253 0.7622009 0.7530339 0.7438283 0.7345883 0.7253180
[15] 0.7160215 0.7067028 0.6973659 0.6880147 0.6786532 0.6692852
> theta.r214(0:999,c(-0.01,-0.0001),50)[1:20] 
 [1] 0.9155196 0.9061382 0.8966735 0.8871303 0.8775130 0.8678265 0.8580753
 [8] 0.8482639 0.8383971 0.8284793 0.8185151 0.8085090 0.7984656 0.7883892
[15] 0.7782843 0.7681552 0.7580064 0.7478421 0.7376665 0.7274839
> theta.r214(0:999,c(-0.01,-0.0001),55)[1:20] 
 [1] 1.0070716 0.9967520 0.9863409 0.9758433 0.9652644 0.9546092 0.9438828
 [8] 0.9330903 0.9222368 0.9113272 0.9003666 0.8893599 0.8783121 0.8672281
[15] 0.8561127 0.8449707 0.8338070 0.8226263 0.8114331 0.8002323
> theta.r214(0:999,c(-0.01,-0.0001),54)[1:20] 
 [1] 0.9887612 0.9786292 0.9684074 0.9581007 0.9477141 0.9372526 0.9267213
 [8] 0.9161250 0.9054688 0.8947576 0.8839963 0.8731897 0.8623428 0.8514603
[15] 0.8405470 0.8296076 0.8186469 0.8076694 0.7966798 0.7856826
> sim4.100$theta
NULL
> sim4.100[[1]]$theta
                 [,1]
   [1,]  9.890603e-01
   [2,]  9.762857e-01
   [3,]  9.617507e-01
   [4,]  9.455391e-01
   [5,]  9.277435e-01
   [6,]  9.084640e-01
   [7,]  8.878078e-01
   [8,]  8.658877e-01
   [9,]  8.428216e-01
  [10,]  8.187308e-01
  [11,]  7.937395e-01
  [12,]  7.679735e-01
  [13,]  7.415594e-01
  [14,]  7.146231e-01
  [15,]  6.872893e-01
  [16,]  6.596803e-01
  [17,]  6.319152e-01
  [18,]  6.041094e-01
  [19,]  5.763731e-01
  [20,]  5.488116e-01
  [21,]  5.215240e-01
  [22,]  4.946029e-01
  [23,]  4.681343e-01
  [24,]  4.421969e-01
  [25,]  4.168620e-01
  [26,]  3.921935e-01
  [27,]  3.682475e-01
  [28,]  3.450728e-01
  [29,]  3.227104e-01
  [30,]  3.011942e-01
  [31,]  2.805509e-01
  [32,]  2.608004e-01
  [33,]  2.419559e-01
  [34,]  2.240245e-01
  [35,]  2.070076e-01
  [36,]  1.909011e-01
  [37,]  1.756960e-01
  [38,]  1.613789e-01
  [39,]  1.479324e-01
  [40,]  1.353353e-01
  [41,]  1.235635e-01
  [42,]  1.125903e-01
  [43,]  1.023865e-01
  [44,]  9.292152e-02
  [45,]  8.416299e-02
  [46,]  7.607771e-02
  [47,]  6.863175e-02
  [48,]  6.179085e-02
  [49,]  5.552066e-02
  [50,]  4.978707e-02
  [51,]  4.455638e-02
  [52,]  3.979556e-02
  [53,]  3.547241e-02
  [54,]  3.155573e-02
  [55,]  2.801543e-02
  [56,]  2.482262e-02
  [57,]  2.194974e-02
  [58,]  1.937058e-02
  [59,]  1.706032e-02
  [60,]  1.499558e-02
  [61,]  1.315439e-02
  [62,]  1.151621e-02
  [63,]  1.006189e-02
  [64,]  8.773671e-03
  [65,]  7.635094e-03
  [66,]  6.630998e-03
  [67,]  5.747444e-03
  [68,]  4.971667e-03
  [69,]  4.292011e-03
  [70,]  3.697864e-03
  [71,]  3.179600e-03
  [72,]  2.728509e-03
  [73,]  2.336736e-03
  [74,]  1.997218e-03
  [75,]  1.703620e-03
  [76,]  1.450278e-03
  [77,]  1.232143e-03
  [78,]  1.044727e-03
  [79,]  8.840473e-04
  [80,]  7.465858e-04
  [81,]  6.292386e-04
  [82,]  5.292763e-04
  [83,]  4.443047e-04
  [84,]  3.722295e-04
  [85,]  3.112233e-04
  [86,]  2.596957e-04
  [87,]  2.162663e-04
  [88,]  1.797399e-04
  [89,]  1.490841e-04
  [90,]  1.234098e-04
  [91,]  1.019529e-04
  [92,]  8.405830e-05
  [93,]  6.916608e-05
  [94,]  5.679854e-05
  [95,]  4.654923e-05
  [96,]  3.807320e-05
  [97,]  3.107832e-05
  [98,]  2.531787e-05
  [99,]  2.058393e-05
 [100,]  1.670170e-05
 [getOption("max.print") est atteint -- 2903 lignes omises ]]
> table(sapply(sim4ur,function(l)l$k))

10 11 12 13 14 15 16 17 
 5 10 17 20 18 18  6  6 
> table(sapply(sim4ur,function(l)ncol(l$bb)))
> sapply(sim4ur,function(l)ncol(l$bb))
[[1]]
NULL

[[2]]
NULL

[[3]]
NULL

[[4]]
NULL

[[5]]
NULL

[[6]]
NULL

[[7]]
NULL

[[8]]
NULL

[[9]]
NULL

[[10]]
NULL

[[11]]
NULL

[[12]]
NULL

[[13]]
NULL

[[14]]
NULL

[[15]]
NULL

[[16]]
NULL

[[17]]
NULL

[[18]]
NULL

[[19]]
NULL

[[20]]
NULL

[[21]]
NULL

[[22]]
NULL

[[23]]
NULL

[[24]]
NULL

[[25]]
NULL

[[26]]
NULL

[[27]]
NULL

[[28]]
NULL

[[29]]
NULL

[[30]]
NULL

[[31]]
NULL

[[32]]
NULL

[[33]]
NULL

[[34]]
NULL

[[35]]
NULL

[[36]]
NULL

[[37]]
NULL

[[38]]
NULL

[[39]]
NULL

[[40]]
NULL

[[41]]
NULL

[[42]]
NULL

[[43]]
NULL

[[44]]
NULL

[[45]]
NULL

[[46]]
NULL

[[47]]
NULL

[[48]]
NULL

[[49]]
NULL

[[50]]
NULL

[[51]]
NULL

[[52]]
NULL

[[53]]
NULL

[[54]]
NULL

[[55]]
NULL

[[56]]
NULL

[[57]]
NULL

[[58]]
NULL

[[59]]
NULL

[[60]]
NULL

[[61]]
NULL

[[62]]
NULL

[[63]]
NULL

[[64]]
NULL

[[65]]
NULL

[[66]]
NULL

[[67]]
NULL

[[68]]
NULL

[[69]]
NULL

[[70]]
NULL

[[71]]
NULL

[[72]]
NULL

[[73]]
NULL

[[74]]
NULL

[[75]]
NULL

[[76]]
NULL

[[77]]
NULL

[[78]]
NULL

[[79]]
NULL

[[80]]
NULL

[[81]]
NULL

[[82]]
NULL

[[83]]
NULL

[[84]]
NULL

[[85]]
NULL

[[86]]
NULL

[[87]]
NULL

[[88]]
NULL

[[89]]
NULL

[[90]]
NULL

[[91]]
NULL

[[92]]
NULL

[[93]]
NULL

[[94]]
NULL

[[95]]
NULL

[[96]]
NULL

[[97]]
NULL

[[98]]
NULL

[[99]]
NULL

[[100]]
NULL

> sapply(sim4ur,function(l)ncols(l$bb))
Erreur dans FUN(X[[1L]], ...) : impossible de trouver la fonction "ncols"
> sim4ur[[1]]$bb
$that
         X1          X2          X3          X4          X5          X6 
 1.08986856  1.25762328  0.82042624  0.91164832  1.02655154  0.76162854 
         X7          X8          X9         X10         X11         X12 
 1.28665193  0.75461262  0.55169190  0.73882782  0.99568108  0.65526921 
        X13         X14         X15         X16         X17         X18 
 0.72934718  0.61433543  0.59039604  0.58763861  0.91117072  0.64976878 
        X19         X20         X21         X22         X23         X24 
 0.54737836  0.45651190  0.45497371  0.77930917 -0.05232950  0.79068137 
        X25         X26         X27         X28         X29         X30 
 0.05733133  0.60377234  0.51996746  0.04635271  0.24437347  0.28364547 
        X31         X32         X33         X34         X35         X36 
 0.33394352  0.03747087  0.38806058  0.37020693  0.17139650  0.14584761 
        X37         X38         X39         X40         X41         X42 
 0.29189490 -0.21000505  0.29243984 -0.11874564 -0.04342343  0.60632068 

$index
 [1]  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
[26] 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41

> modl3.100[[1]]
[[1]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
      X1        X2        X3  
-0.04051   1.16987   2.47549  


[[2]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
     X1       X2       X3       X4       X5       X6  
-0.2135   0.9908   1.5345   1.4099   1.0978   2.8953  


[[3]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
     X1       X2       X3       X4       X5       X6       X7       X8  
-0.5013   1.0038   0.6088   1.6258   0.9808   1.8391   1.6397   1.3524  
     X9  
 2.6431  


[[4]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
     X1       X2       X3       X4       X5       X6       X7       X8  
-0.0959   0.8870   0.7455   1.2861   1.0298   1.0034   1.6223   1.2342  
     X9      X10      X11      X12  
 1.7383   1.4228   1.2429   2.4379  


[[5]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
     X1       X2       X3       X4       X5       X6       X7       X8  
-0.2654   1.1145   0.9912   1.4977   0.9169   1.1464   1.3377   1.2644  
     X9      X10      X11      X12      X13      X14      X15  
 1.0654   1.4163   1.1542   1.7226   1.0212   1.0528   1.9549  


[[6]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
     X1       X2       X3       X4       X5       X6       X7       X8  
-0.1815   1.2599   1.2840   1.2580   1.0732   1.3496   1.2504   1.0869  
     X9      X10      X11      X12      X13      X14      X15      X16  
 1.1410   1.2169   1.0778   1.1407   1.1992   1.0558   1.1235   1.1527  
    X17      X18  
 1.2978   1.2659  


[[7]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
     X1       X2       X3       X4       X5       X6       X7       X8  
-0.1765   1.2512   1.2727   1.2308   1.0823   1.3383   1.2882   1.0486  
     X9      X10      X11      X12      X13      X14      X15      X16  
 1.1324   1.1938   1.0800   1.1383   1.1746   1.0584   1.1036   1.2065  
    X17      X18      X19      X20      X21  
 1.3127   1.1965   0.1102   0.1296  -0.2002  


[[8]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
      X1        X2        X3        X4        X5        X6        X7        X8  
-0.19059   1.23342   1.28116   1.21683   1.10368   1.31606   1.34155   1.05364  
      X9       X10       X11       X12       X13       X14       X15       X16  
 1.12040   1.16147   1.12019   1.13779   1.19590   1.04498   1.10827   1.22838  
     X17       X18       X19       X20       X21       X22       X23       X24  
 1.31738   1.21143   0.03996   0.12193  -0.13024  -0.06567  -0.20025   0.18360  


[[9]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
      X1        X2        X3        X4        X5        X6        X7        X8  
-0.22760   1.24690   1.28921   1.23496   1.10756   1.30296   1.33665   1.06629  
      X9       X10       X11       X12       X13       X14       X15       X16  
 1.11890   1.14689   1.11326   1.11618   1.22418   1.02304   1.10113   1.23007  
     X17       X18       X19       X20       X21       X22       X23       X24  
 1.33010   1.19016   0.05764   0.11382  -0.09597  -0.06783  -0.19053   0.22774  
     X25       X26       X27  
-0.07550  -0.01405  -0.08837  


[[10]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
       X1         X2         X3         X4         X5         X6         X7  
-0.153713   1.253117   1.270360   1.175415   1.157070   1.346095   1.345685  
       X8         X9        X10        X11        X12        X13        X14  
 1.094094   1.120092   1.136609   1.101456   1.196306   1.091597   0.992584  
      X15        X16        X17        X18        X19        X20        X21  
 1.104476   1.298743   1.237293   1.221688   0.044791   0.170803  -0.134242  
      X22        X23        X24        X25        X26        X27        X28  
-0.054549  -0.215860   0.256234   0.030637  -0.004709  -0.088087  -0.069855  
      X29        X30  
 0.166688  -0.304760  


[[11]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
       X1         X2         X3         X4         X5         X6         X7  
-0.142494   1.264336   1.250249   1.177452   1.180548   1.338185   1.344388  
       X8         X9        X10        X11        X12        X13        X14  
 1.099397   1.122748   1.146092   1.115223   1.227530   1.062980   0.995810  
      X15        X16        X17        X18        X19        X20        X21  
 1.122547   1.261040   1.217530   1.240814   0.058718   0.149000  -0.119175  
      X22        X23        X24        X25        X26        X27        X28  
-0.073422  -0.198363   0.257769   0.028822  -0.008982  -0.084202  -0.046561  
      X29        X30        X31        X32        X33  
 0.163301  -0.347470   0.088545  -0.015248  -0.082114  


[[12]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
       X1         X2         X3         X4         X5         X6         X7  
-0.157659   1.285141   1.231567   1.163667   1.200315   1.325150   1.388184  
       X8         X9        X10        X11        X12        X13        X14  
 1.090297   1.113870   1.136735   1.129001   1.248986   1.056729   0.991493  
      X15        X16        X17        X18        X19        X20        X21  
 1.101715   1.278160   1.210999   1.242341   0.046483   0.153993  -0.132739  
      X22        X23        X24        X25        X26        X27        X28  
-0.054555  -0.227258   0.268465   0.016724  -0.005028  -0.092360  -0.049638  
      X29        X30        X31        X32        X33        X34        X35  
 0.152080  -0.353560   0.134992  -0.009504  -0.085997  -0.039339   0.093918  
      X36  
-0.098004  


[[13]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
      X1        X2        X3        X4        X5        X6        X7        X8  
-0.16797   1.25595   1.24900   1.14201   1.22052   1.30730   1.36373   1.12603  
      X9       X10       X11       X12       X13       X14       X15       X16  
 1.09165   1.19957   1.12696   1.22987   1.05387   1.01244   1.12862   1.27013  
     X17       X18       X19       X20       X21       X22       X23       X24  
 1.20715   1.21847   0.05692   0.15060  -0.13828  -0.06967  -0.22081   0.25161  
     X25       X26       X27       X28       X29       X30       X31       X32  
 0.04819  -0.05287  -0.07000  -0.07322   0.15910  -0.34918   0.11622  -0.02608  
     X33       X34       X35       X36       X37       X38       X39  
-0.09210   0.02330   0.09677  -0.11471  -0.01922   0.10728  -0.15598  


[[14]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
      X1        X2        X3        X4        X5        X6        X7        X8  
-0.12849   1.18182   1.27867   1.06260   1.29681   1.30037   1.38597   1.06570  
      X9       X10       X11       X12       X13       X14       X15       X16  
 1.16872   1.22064   1.06128   1.27052   0.99159   1.08692   1.14129   1.20467  
     X17       X18       X19       X20       X21       X22       X23       X24  
 1.18806   1.18489   0.10007   0.16362  -0.11553  -0.09315  -0.19882   0.24418  
     X25       X26       X27       X28       X29       X30       X31       X32  
 0.05645  -0.07151  -0.06132  -0.07957   0.18542  -0.35154   0.11668  -0.03592  
     X33       X34       X35       X36       X37       X38       X39       X40  
-0.09821   0.06822   0.09302  -0.08291  -0.10680   0.15163  -0.10046   0.01253  
     X41       X42  
-0.28261   0.06903  


[[15]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
      X1        X2        X3        X4        X5        X6        X7        X8  
-0.11164   1.17079   1.30409   1.05623   1.39182   1.31082   1.36428   0.99473  
      X9       X10       X11       X12       X13       X14       X15       X16  
 1.22741   1.16416   1.11329   1.18127   0.95759   1.19299   1.09150   1.30253  
     X17       X18       X19       X20       X21       X22       X23       X24  
 1.13056   1.16125   0.17788   0.17256  -0.03102  -0.15767  -0.22545   0.18323  
     X25       X26       X27       X28       X29       X30       X31       X32  
 0.10432  -0.09361  -0.12932  -0.01840   0.24059  -0.40360   0.12686  -0.09261  
     X33       X34       X35       X36       X37       X38       X39       X40  
-0.11237   0.05197   0.06924  -0.05533  -0.18970   0.15725  -0.16415   0.14150  
     X41       X42       X43       X44       X45  
-0.32763  -0.01226   0.05063   0.27052  -0.17934  


[[16]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
      X1        X2        X3        X4        X5        X6        X7        X8  
-0.19206   1.23380   1.37821   0.97641   1.42752   1.37226   1.39484   0.96013  
      X9       X10       X11       X12       X13       X14       X15       X16  
 1.27804   1.05644   1.18836   1.24150   0.94512   1.10239   1.17952   1.30950  
     X17       X18       X19       X20       X21       X22       X23       X24  
 1.05495   1.24331   0.09548   0.21982  -0.02263  -0.17770  -0.28038   0.15818  
     X25       X26       X27       X28       X29       X30       X31       X32  
 0.12883  -0.09590  -0.16646  -0.02040   0.25310  -0.50821   0.25330  -0.07475  
     X33       X34       X35       X36       X37       X38       X39       X40  
-0.16987   0.04171   0.13678  -0.11884  -0.15979   0.08506  -0.15863   0.15423  
     X41       X42       X43       X44       X45       X46       X47       X48  
-0.32271   0.02382  -0.09543   0.30178  -0.06324  -0.02342  -0.27948   0.14616  


[[17]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
       X1         X2         X3         X4         X5         X6         X7  
-0.195101   1.184331   1.448013   1.020032   1.367252   1.313995   1.448030  
       X8         X9        X10        X11        X12        X13        X14  
 0.947116   1.224101   1.017048   1.171639   1.199979   1.063340   1.039023  
      X15        X16        X17        X18        X19        X20        X21  
 1.134854   1.313893   1.117549   1.217399   0.060238   0.233885  -0.082365  
      X22        X23        X24        X25        X26        X27        X28  
-0.096711  -0.305481   0.169935   0.081155  -0.025973  -0.200578  -0.012339  
      X29        X30        X31        X32        X33        X34        X35  
 0.265873  -0.439807   0.239862  -0.076605  -0.008243  -0.130784   0.073441  
      X36        X37        X38        X39        X40        X41        X42  
-0.048054  -0.126313   0.047250  -0.067659   0.118834  -0.244482   0.020190  
      X43        X44        X45        X46        X47        X48        X49  
-0.096086   0.285257  -0.036683   0.037670  -0.281253   0.128171  -0.095181  
      X50        X51  
 0.175557  -0.075054  


[[18]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
        X1          X2          X3          X4          X5          X6  
-0.2024012   1.1629851   1.5770901   0.9204820   1.3191531   1.3718877  
        X7          X8          X9         X10         X11         X12  
 1.4594921   0.9058916   1.2344451   1.0029898   1.1782601   1.2096934  
       X13         X14         X15         X16         X17         X18  
 1.0771782   1.0637070   1.1261667   1.3470258   1.0350639   1.2847343  
       X19         X20         X21         X22         X23         X24  
 0.0004109   0.2812308  -0.1046524  -0.1680582  -0.3201308   0.1474095  
       X25         X26         X27         X28         X29         X30  
 0.1938880  -0.0372670  -0.2230601  -0.0452468   0.2957745  -0.4207061  
       X31         X32         X33         X34         X35         X36  
 0.2362339  -0.0760487  -0.0273416  -0.1222363   0.0649677   0.0054835  
       X37         X38         X39         X40         X41         X42  
-0.2096825   0.0416346  -0.0959027   0.1915830  -0.3300462   0.0519293  
       X43         X44         X45         X46         X47         X48  
-0.1182027   0.3302051   0.0037373  -0.0151433  -0.3241064   0.1623700  
       X49         X50         X51         X52         X53         X54  
-0.0026916   0.1847058   0.0012170  -0.2210010   0.1922683  -0.1430786  


> reflow(sim4.100[[1]],0)
                      Y           X1            X2          X3
result.1     3.62365267  0.159209411  0.0968357312  0.64914757
result.2     5.27869057  0.746028269 -1.8666367270  1.72533023
result.3     9.05997667  0.356761749  2.1086934892  1.37020857
result.4     7.40931098 -1.274326751 -0.4487172006  1.04798169
result.5     3.24537668 -1.064602291 -1.7272380509 -2.00424226
result.6     0.08277073  0.768730887 -0.2403359103 -1.27243321
result.7    -1.20147155 -1.913959134 -0.9926328024 -0.68171067
result.8    -3.33983998 -0.103858288  0.5378059579 -0.68213975
result.9    -3.23004673  0.476234943 -0.0125209944 -0.98943391
result.10   -1.50146593  0.516564348  0.6702557517  0.85451239
result.11    0.84981945  0.876787024  0.6850996261  0.38529666
result.12    1.90362479 -0.682020555 -0.1071890033  1.70475228
result.13   -0.93728641 -0.145933341 -0.7635609249 -1.01602265
result.14    1.02206007  0.533570906  1.4045215582 -0.33276179
result.15    1.33607910 -0.922362741 -0.0001432979  1.23591304
result.16   -0.47496002 -0.317487272 -1.0429561663 -1.06981366
result.17   -0.06634751  0.616916648 -0.2066643767 -0.04655752
result.18    1.14150183  0.898348886  1.0209794890  1.45548634
result.19    4.58254592  0.083564758  0.3320853270  0.76558936
result.20    4.40721918  0.320627549 -0.2291570660 -0.65708381
result.21    5.79216571  0.885850752  1.6266982293  1.05045642
result.22    6.04521493 -0.024218524 -0.6453972782  0.86329800
result.23    9.19653843  1.493539575  1.5464617828  0.21211622
result.24    4.47877422 -2.325785781 -0.7714868975 -1.23974232
result.25    2.05846588  0.306168862 -0.6699046050 -1.98474262
 [getOption("max.print") est atteint -- 75 lignes omises ]]
> 
> sim4.100 <- foreach(i=1:100,.combine=c) %do% {
+     list(sim.Y.finite(100,4,1000,tfun=theta.u214,xfun=sim.X,lambda=c(-0.01,-0.001),beta=1))
+ }
> 
> modl4.100 <- lapply(sim4.100,gen.k,kmax=17)
> sim4ur <- foreach(i=1:100,.combine=c) %do% {
+ 
+     k <- which.min(sapply(modl4.100[[i]],KZ.k))-1
+     bb <- prep.nls.finite(sim4.100[[i]],k)
+     
+     sn4u <- try(nls(that~theta.u214(index,lambda,beta),data=bb,start=list(lambda=c(-0.01,-0.001),beta=0.5),trace=FALSE))
+ 
+     sn4r <- try(nls(that~theta.r214(index,lambda,beta),data=bb,start=list(lambda=c(-0.01,-0.001),beta=0.5),trace=FALSE))
+     
+     list(list(k=k,bb=bb,u=sn4u,r=sn4r))
+ }
> 
> sim4dif <- foreach(i=1:100,.combine=c) %do% {
+     bb <- sim4ur[[i]]$bb
+     sn4r <- sim4ur[[i]]$r
+     sn4u <- sim4ur[[i]]$u
+     if(class(sn4r)=="try-error" | class(sn4u)=="try-error") NULL
+     else
+     list(cbind(theta.r214(bb$index,coef(sn4r)[1:2],coef(sn4r)[3]),  theta.u214(bb$index,coef(sn4u)[1:2],coef(sn4u)[3])))
+ }
> dd <- sapply(sim4dif,function(l)sum((l[,1]-l[,2])^2))
> quantile(dd)
          0%          25%          50%          75%         100% 
1.899729e-14 3.033507e-12 1.920707e-11 7.240659e-11 5.630595e-10 
> sim4.100[[1]]$theta
                 [,1]
   [1,]  9.890603e-01
   [2,]  9.762857e-01
   [3,]  9.617507e-01
   [4,]  9.455391e-01
   [5,]  9.277435e-01
   [6,]  9.084640e-01
   [7,]  8.878078e-01
   [8,]  8.658877e-01
   [9,]  8.428216e-01
  [10,]  8.187308e-01
  [11,]  7.937395e-01
  [12,]  7.679735e-01
  [13,]  7.415594e-01
  [14,]  7.146231e-01
  [15,]  6.872893e-01
  [16,]  6.596803e-01
  [17,]  6.319152e-01
  [18,]  6.041094e-01
  [19,]  5.763731e-01
  [20,]  5.488116e-01
  [21,]  5.215240e-01
  [22,]  4.946029e-01
  [23,]  4.681343e-01
  [24,]  4.421969e-01
  [25,]  4.168620e-01
  [26,]  3.921935e-01
  [27,]  3.682475e-01
  [28,]  3.450728e-01
  [29,]  3.227104e-01
  [30,]  3.011942e-01
  [31,]  2.805509e-01
  [32,]  2.608004e-01
  [33,]  2.419559e-01
  [34,]  2.240245e-01
  [35,]  2.070076e-01
  [36,]  1.909011e-01
  [37,]  1.756960e-01
  [38,]  1.613789e-01
  [39,]  1.479324e-01
  [40,]  1.353353e-01
  [41,]  1.235635e-01
  [42,]  1.125903e-01
  [43,]  1.023865e-01
  [44,]  9.292152e-02
  [45,]  8.416299e-02
  [46,]  7.607771e-02
  [47,]  6.863175e-02
  [48,]  6.179085e-02
  [49,]  5.552066e-02
  [50,]  4.978707e-02
  [51,]  4.455638e-02
  [52,]  3.979556e-02
  [53,]  3.547241e-02
  [54,]  3.155573e-02
  [55,]  2.801543e-02
  [56,]  2.482262e-02
  [57,]  2.194974e-02
  [58,]  1.937058e-02
  [59,]  1.706032e-02
  [60,]  1.499558e-02
  [61,]  1.315439e-02
  [62,]  1.151621e-02
  [63,]  1.006189e-02
  [64,]  8.773671e-03
  [65,]  7.635094e-03
  [66,]  6.630998e-03
  [67,]  5.747444e-03
  [68,]  4.971667e-03
  [69,]  4.292011e-03
  [70,]  3.697864e-03
  [71,]  3.179600e-03
  [72,]  2.728509e-03
  [73,]  2.336736e-03
  [74,]  1.997218e-03
  [75,]  1.703620e-03
  [76,]  1.450278e-03
  [77,]  1.232143e-03
  [78,]  1.044727e-03
  [79,]  8.840473e-04
  [80,]  7.465858e-04
  [81,]  6.292386e-04
  [82,]  5.292763e-04
  [83,]  4.443047e-04
  [84,]  3.722295e-04
  [85,]  3.112233e-04
  [86,]  2.596957e-04
  [87,]  2.162663e-04
  [88,]  1.797399e-04
  [89,]  1.490841e-04
  [90,]  1.234098e-04
  [91,]  1.019529e-04
  [92,]  8.405830e-05
  [93,]  6.916608e-05
  [94,]  5.679854e-05
  [95,]  4.654923e-05
  [96,]  3.807320e-05
  [97,]  3.107832e-05
  [98,]  2.531787e-05
  [99,]  2.058393e-05
 [100,]  1.670170e-05
 [getOption("max.print") est atteint -- 3904 lignes omises ]]
> plot(sim4.100[[1]]$theta,type="l")
> plot(sim4.100[[1]]$theta[1:10],type="l")
> plot(sim4.100[[1]]$theta[1:20],type="l")
> plot(sim4.100[[1]]$theta[1:100],type="l")
> sapply(sim4urr,function(l)coef(l$u))
                 [,1]          [,2]         [,3]         [,4]          [,5]
lambda1 -0.0242541007 -0.0241875253  0.003100258  0.007525636 -0.0152550784
                 [,6]          [,7]          [,8]         [,9]         [,10]
lambda1 -0.0103632119 -0.0205863989 -0.0103602287 -0.000982291  0.0003181133
                [,11]         [,12]         [,13]        [,14]         [,15]
lambda1 -0.0109450554 -0.0158203086 -0.0092332995 -0.011021273 -0.0145740272
                [,16]        [,17]        [,18]         [,19]        [,20]
lambda1 -0.0135294898 -0.008740914 -0.018791668 -0.0104007845 -0.007303233
                [,21]         [,22]        [,23]        [,24]         [,25]
lambda1 -0.0115050114 -0.0159255795  0.006904980 -0.002560558 -0.0096663549
                [,26]         [,27]        [,28]         [,29]         [,30]
lambda1 -0.0178595561 -0.0203474921  0.001542172 -0.0139306853 -0.0252407692
                [,31]         [,32]        [,33]         [,34]         [,35]
lambda1 -0.0169180054 -0.0200490742  0.011204886 -0.0239699526 -0.0145886023
                [,36]        [,37]        [,38]         [,39]         [,40]
lambda1 -0.0217940426 -0.016398109 -0.022424514 -0.0123074894 -0.0195653001
                [,41]         [,42]         [,43]         [,44]        [,45]
lambda1 -0.0171637799 -0.0116643652 -0.0115425849 -0.0126027777  0.004984509
                [,46]         [,47]       [,48]         [,49]        [,50]
lambda1 -0.0090749958 -0.0142397105 -0.01225549 -0.0316311831 -0.004274095
               [,51]         [,52]         [,53]        [,54]        [,55]
lambda1 -0.003834573 -0.0212369665 -0.0288640544 -0.005037656 -0.011823129
               [,56]         [,57]        [,58]         [,59]        [,60]
lambda1 -0.003944508 -0.0113173772  0.002317037 -0.0230694216 -0.009695664
               [,61]        [,62]         [,63]         [,64]         [,65]
lambda1 -0.010551684 -0.006507967 -0.0060186550 -0.0222625440 -0.0261787643
               [,66]         [,67]         [,68]        [,69]         [,70]
lambda1 -0.007215183 -0.0123032783 -0.0462414487 -0.010961627 -0.0166831535
               [,71]        [,72]        [,73]         [,74]         [,75]
lambda1  0.003856732  0.007003089 -0.002320503 -0.0139676399 -0.0085084848
               [,76]        [,77]         [,78]         [,79]        [,80]
lambda1 -0.004760797  0.005123438 -0.0372850778 -0.0185717815 -0.009228859
               [,81]         [,82]        [,83]        [,84]        [,85]
lambda1 -0.005902012 -0.0132149053 -0.003679440 -0.006385028 -0.017551107
               [,86]        [,87]        [,88]         [,89]        [,90]
lambda1 -0.002975769  0.004252809  0.003452209 -0.0270638811 -0.006745952
                [,91]         [,92]        [,93]         [,94]         [,95]
lambda1 -0.0105053030 -0.0301580854  0.018879071 -0.0003996086 -0.0226246201
                [,96]        [,97]         [,98]        [,99]
lambda1 -0.0165918606 -0.002659174 -0.0106365052 -0.005441513
 [getOption("max.print") est atteint -- 2 lignes omises ]]
> sapply(sim4ur,function(l)l$k)
  [1]  9  9 12  8 10  9  9 10  9  9  9 13 12 10  9  9 10  9 11 10 10 10 12  9 10
 [26]  9  8 11 12 11  9  9  9 11 10 11  9  9 11 12  9 10 10  9 12  9 14  9  9  8
 [51] 12 12  9 10 12  9 12 10  9 11  9 11 10 11  9 11 10 10  9  9 10 10 10 13 10
 [76] 10 10 11 11  9 10  9  8  9 12  9  9  8 10 12  8 10 10 10 11  9 15 13  9  8
> table(sapply(sim4ur,function(l)l$k))

 8  9 10 11 12 13 14 15 
 7 36 27 13 12  3  1  1 
> sim4ur.5 <- foreach(i=1:100,.combine=c) %do% {
+    
+     bb <- prep.nls.finite(sim4.100[[i]],4)
+     
+     sn4u <- try(nls(that~theta.u214(index,lambda,beta),data=bb,start=list(lambda=c(-0.01,-0.001),beta=0.5),trace=FALSE))
+ 
+     sn4r <- try(nls(that~theta.r214(index,lambda,beta),data=bb,start=list(lambda=c(-0.01,-0.001),beta=0.5),trace=FALSE))
+     
+     list(list(k=k,bb=bb,u=sn4u,r=sn4r))
+ }
Error in nls(that ~ theta.u214(index, lambda, beta), data = bb, start = list(lambda = c(-0.01,  : 
  le pas 0.000488281 est devenu inférieur à 'minFactor' de 0.000976562
> 
> sim4dif.5 <- foreach(i=1:100,.combine=c) %do% {
+     bb <- sim4ur.5[[i]]$bb
+     sn4r <- sim4ur.5[[i]]$r
+     sn4u <- sim4ur.5[[i]]$u
+     if(class(sn4r)=="try-error" | class(sn4u)=="try-error") NULL
+     else
+     list(cbind(theta.r214(bb$index,coef(sn4r)[1:2],coef(sn4r)[3]),  theta.u214(bb$index,coef(sn4u)[1:2],coef(sn4u)[3])))
+ }
> dd <- sapply(sim4dif.5,function(l)sum((l[,1]-l[,2])^2))
> quantile(dd)
          0%          25%          50%          75%         100% 
8.344765e-14 1.343386e-11 5.694284e-11 1.667488e-10 3.354447e-09 
> sapply(sim4urr,function(l)coef(l$u))
                 [,1]          [,2]         [,3]         [,4]          [,5]
lambda1 -0.0242541007 -0.0241875253  0.003100258  0.007525636 -0.0152550784
                 [,6]          [,7]          [,8]         [,9]         [,10]
lambda1 -0.0103632119 -0.0205863989 -0.0103602287 -0.000982291  0.0003181133
                [,11]         [,12]         [,13]        [,14]         [,15]
lambda1 -0.0109450554 -0.0158203086 -0.0092332995 -0.011021273 -0.0145740272
                [,16]        [,17]        [,18]         [,19]        [,20]
lambda1 -0.0135294898 -0.008740914 -0.018791668 -0.0104007845 -0.007303233
                [,21]         [,22]        [,23]        [,24]         [,25]
lambda1 -0.0115050114 -0.0159255795  0.006904980 -0.002560558 -0.0096663549
                [,26]         [,27]        [,28]         [,29]         [,30]
lambda1 -0.0178595561 -0.0203474921  0.001542172 -0.0139306853 -0.0252407692
                [,31]         [,32]        [,33]         [,34]         [,35]
lambda1 -0.0169180054 -0.0200490742  0.011204886 -0.0239699526 -0.0145886023
                [,36]        [,37]        [,38]         [,39]         [,40]
lambda1 -0.0217940426 -0.016398109 -0.022424514 -0.0123074894 -0.0195653001
                [,41]         [,42]         [,43]         [,44]        [,45]
lambda1 -0.0171637799 -0.0116643652 -0.0115425849 -0.0126027777  0.004984509
                [,46]         [,47]       [,48]         [,49]        [,50]
lambda1 -0.0090749958 -0.0142397105 -0.01225549 -0.0316311831 -0.004274095
               [,51]         [,52]         [,53]        [,54]        [,55]
lambda1 -0.003834573 -0.0212369665 -0.0288640544 -0.005037656 -0.011823129
               [,56]         [,57]        [,58]         [,59]        [,60]
lambda1 -0.003944508 -0.0113173772  0.002317037 -0.0230694216 -0.009695664
               [,61]        [,62]         [,63]         [,64]         [,65]
lambda1 -0.010551684 -0.006507967 -0.0060186550 -0.0222625440 -0.0261787643
               [,66]         [,67]         [,68]        [,69]         [,70]
lambda1 -0.007215183 -0.0123032783 -0.0462414487 -0.010961627 -0.0166831535
               [,71]        [,72]        [,73]         [,74]         [,75]
lambda1  0.003856732  0.007003089 -0.002320503 -0.0139676399 -0.0085084848
               [,76]        [,77]         [,78]         [,79]        [,80]
lambda1 -0.004760797  0.005123438 -0.0372850778 -0.0185717815 -0.009228859
               [,81]         [,82]        [,83]        [,84]        [,85]
lambda1 -0.005902012 -0.0132149053 -0.003679440 -0.006385028 -0.017551107
               [,86]        [,87]        [,88]         [,89]        [,90]
lambda1 -0.002975769  0.004252809  0.003452209 -0.0270638811 -0.006745952
                [,91]         [,92]        [,93]         [,94]         [,95]
lambda1 -0.0105053030 -0.0301580854  0.018879071 -0.0003996086 -0.0226246201
                [,96]        [,97]         [,98]        [,99]
lambda1 -0.0165918606 -0.002659174 -0.0106365052 -0.005441513
 [getOption("max.print") est atteint -- 2 lignes omises ]]
>
> sim4urr.5 <- sim4ur.5
> sapply(sim4urr.5,function(l)class(l$u))
  [1] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
  [7] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [13] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [19] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [25] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [31] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [37] "nls"       "nls"       "try-error" "nls"       "nls"       "nls"      
 [43] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [49] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [55] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [61] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [67] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [73] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [79] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [85] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [91] "nls"       "nls"       "nls"       "nls"       "nls"       "nls"      
 [97] "nls"       "nls"       "nls"       "nls"      
> sim4urr.5[[39]] <- NULL
> rr <- sapply(sim4urr.5,function(l)coef(l$u))
> apply(rr,1,mean)
      lambda1       lambda2          beta 
-0.0397930606  0.0009599122  1.0822826813 
> rr
                [,1]         [,2]          [,3]         [,4]         [,5]
lambda1 -0.081668153  0.006596819 -3.046758e-02 -0.058288779 -0.029615776
                [,6]          [,7]         [,8]         [,9]         [,10]
lambda1 -0.005563329 -0.0315017836 -0.028660427  0.009635601 -0.0160219222
               [,11]        [,12]        [,13]        [,14]        [,15]
lambda1 -0.008812719 -0.056948988  0.035355562 -0.030214703 -0.054245551
               [,16]         [,17]         [,18]        [,19]         [,20]
lambda1 -0.068372401 -0.0285926926 -0.0286122044 -0.059176047 -0.0361231613
               [,21]       [,22]         [,23]        [,24]         [,25]
lambda1  0.011735604 -0.11013612 -0.0393895015 -0.064812643 -1.705300e-02
                [,26]         [,27]         [,28]        [,29]        [,30]
lambda1 -0.0066241260 -2.736381e-02 -0.0341419006 -0.062723067 -0.052672637
                [,31]         [,32]        [,33]        [,34]         [,35]
lambda1 -3.788360e-02 -0.0182555277  0.006532536 -0.048713440 -0.0409836523
               [,36]         [,37]       [,38]        [,39]        [,40]
lambda1 -0.038062031 -0.0370853559 -0.06029164 -0.068991717 -0.048357660
               [,41]        [,42]        [,43]        [,44]        [,45]
lambda1 -0.050366023 -0.148745227 -0.035491520 -0.060373993 -0.041612823
               [,46]         [,47]        [,48]        [,49]         [,50]
lambda1 -0.119165323 -0.0378394509 -0.050774882 -0.047916509 -0.0126474732
               [,51]        [,52]        [,53]        [,54]        [,55]
lambda1  0.026173427 -0.003110883 -0.026935474 -0.102236349 -0.050854274
               [,56]        [,57]        [,58]        [,59]         [,60]
lambda1 -0.044796749 -0.020995370 -0.035467147  0.012904661 -0.0412117382
               [,61]        [,62]        [,63]        [,64]         [,65]
lambda1  0.005617089  0.018056825  0.005025918 -0.075001879 -0.0267525432
                [,66]         [,67]         [,68]        [,69]        [,70]
lambda1 -0.0316864659 -0.0245520484 -0.0054713495  0.009369462 -0.030018474
               [,71]         [,72]        [,73]        [,74]         [,75]
lambda1 -0.064130716 -0.0423517300 -0.068271572 -0.034675465 -0.0298784418
               [,76]         [,77]         [,78]         [,79]        [,80]
lambda1 -0.051348460 -0.0271224515 -0.0066071621 -0.0229419862 -0.133692537
               [,81]       [,82]        [,83]        [,84]         [,85]
lambda1 -0.069415560 -0.14305334 -0.047672843 -0.063508000 -0.0228307861
               [,86]        [,87]        [,88]        [,89]        [,90]
lambda1 -0.070874473 -0.035221711 -0.054064700 -0.001735447  0.022799491
               [,91]        [,92]        [,93]         [,94]        [,95]
lambda1 -0.053006416 -0.116542112 -0.051674544 -0.0185416283 -0.044270505
              [,96]        [,97]        [,98]         [,99]
lambda1 -0.07605690 -0.085357812 -0.067974928 -1.604216e-02
 [getOption("max.print") est atteint -- 2 lignes omises ]]
> cu <- sapply(sim4urr.5,function(l)coef(l$u))
> cr <- sapply(sim4urr.5,function(l)coef(l$r))
> apply(cu,1,mean)
      lambda1       lambda2          beta 
-0.0397930606  0.0009599122  1.0822826813 
> apply(cr,1,mean)
     lambda1      lambda2         beta 
-0.039792731  0.000959892 16.374908080 
> prep.nls.finite
function(object,k) {
    mod <- lm(Y~.-1,data=reflow(object,k=k))
    that <- coef(mod)
    lst <- list(that=that,index=1:(object$m*(k+1))-1)
    lst
}
> modl4.100[[i]]
[[1]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
    X1      X2      X3      X4  
0.1378  3.8483  0.8921  0.9840  


[[2]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
     X1       X2       X3       X4       X5       X6       X7       X8  
0.24434  2.52286  1.35214  0.01747  0.58285  3.08691  0.91242  0.74793  




> 
> modl4.100[[1]]
[[1]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
     X1       X2       X3       X4  
0.60495  1.33977  0.05039  1.75775  


[[2]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
    X1      X2      X3      X4      X5      X6      X7      X8  
0.3337  1.3569  0.1397  0.6245  1.2257  0.8371  0.3046  1.5089  


[[3]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
     X1       X2       X3       X4       X5       X6       X7       X8  
0.64015  1.29792  0.10069  0.94410  0.73925  0.83681  0.44746  0.41265  
     X9      X10      X11      X12  
1.01062  1.17751  0.02766  1.37366  


[[4]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
    X1      X2      X3      X4      X5      X6      X7      X8      X9     X10  
0.1955  1.1432  0.6211  0.8341  1.1550  0.8117  0.3204  0.7403  0.6510  1.1387  
   X11     X12     X13     X14     X15     X16  
0.2041  0.3704  0.6436  1.0093  0.2133  1.3212  


[[5]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
    X1      X2      X3      X4      X5      X6      X7      X8      X9     X10  
0.9877  0.9767  0.7074  0.9992  0.3977  0.7161  0.8566  0.6743  1.0829  0.9435  
   X11     X12     X13     X14     X15     X16     X17     X18     X19     X20  
0.1948  0.8358  0.3897  0.8898  0.3403  0.2623  0.6465  0.8434  0.2175  1.1268  


[[6]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
    X1      X2      X3      X4      X5      X6      X7      X8      X9     X10  
0.5943  1.1787  0.7895  0.8712  1.2749  0.5765  0.8612  0.8143  0.4124  0.8591  
   X11     X12     X13     X14     X15     X16     X17     X18     X19     X20  
0.6953  0.6140  0.7851  0.8242  0.2787  0.8393  0.3611  0.7588  0.2918  0.1259  
   X21     X22     X23     X24  
0.6305  0.6261  0.1330  1.0851  


[[7]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
    X1      X2      X3      X4      X5      X6      X7      X8      X9     X10  
0.7761  0.9635  0.8052  1.0501  0.7465  0.8459  0.8560  0.7199  1.2089  0.6668  
   X11     X12     X13     X14     X15     X16     X17     X18     X19     X20  
0.7275  0.7376  0.3168  0.7709  0.6245  0.7192  0.6101  0.6676  0.3066  0.6091  
   X21     X22     X23     X24     X25     X26     X27     X28  
0.3355  0.5495  0.1397  0.3482  0.5081  0.5613  0.1469  0.7196  


[[8]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
     X1       X2       X3       X4       X5       X6       X7       X8  
0.85742  0.93579  0.83271  1.14553  0.89285  0.51259  0.98232  0.89796  
     X9      X10      X11      X12      X13      X14      X15      X16  
0.60083  0.96562  0.70701  0.73029  1.09091  0.57648  0.65374  0.75143  
    X17      X18      X19      X20      X21      X22      X23      X24  
0.21889  0.57241  0.67023  0.53561  0.61538  0.38967  0.23570  0.81105  
    X25      X26      X27      X28      X29      X30      X31      X32  
0.19199  0.43937  0.16216  0.03915  0.52983  0.41429  0.27999  0.69527  


[[9]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
     X1       X2       X3       X4       X5       X6       X7       X8  
 0.6426   0.9916   0.9547   0.9737   1.1020   0.5559   0.9160   1.0453  
     X9      X10      X11      X12      X13      X14      X15      X16  
 0.6155   0.7767   0.8181   0.7579   0.6692   0.7930   0.6832   0.7634  
    X17      X18      X19      X20      X21      X22      X23      X24  
 0.6703   0.5412   0.6527   0.4134   0.4635   0.4506   0.3870   0.8576  
    X25      X26      X27      X28      X29      X30      X31      X32  
 0.2253   0.3904   0.2021   0.2162   0.3054   0.3742   0.2701   0.2086  
    X33      X34      X35      X36  
 0.4789   0.4322  -0.1039   0.2869  


[[10]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
      X1        X2        X3        X4        X5        X6        X7        X8  
 0.80547   0.90227   0.91133   0.89573   0.93802   0.60375   1.00998   0.94392  
      X9       X10       X11       X12       X13       X14       X15       X16  
 0.77895   0.81190   0.75686   0.90697   0.66875   0.60194   0.81086   0.72727  
     X17       X18       X19       X20       X21       X22       X23       X24  
 0.37544   0.72646   0.66126   0.46109   0.76334   0.40048   0.37022   0.73979  
     X25       X26       X27       X28       X29       X30       X31       X32  
 0.14196   0.42284   0.27537   0.28535   0.31248   0.33236   0.32595   0.31444  
     X33       X34       X35       X36       X37       X38       X39       X40  
 0.28678   0.42577  -0.10408  -0.02999   0.31352   0.29801  -0.01087   0.09551  


[[11]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
        X1          X2          X3          X4          X5          X6  
 0.8069972   0.9349592   0.9493761   0.9057119   0.9114081   0.6488551  
        X7          X8          X9         X10         X11         X12  
 0.9836573   0.8971560   0.7443480   0.8614313   0.7845231   0.8453588  
       X13         X14         X15         X16         X17         X18  
 0.7472325   0.6003010   0.7781161   0.7165142   0.3999546   0.6820790  
       X19         X20         X21         X22         X23         X24  
 0.6225195   0.4768088   0.6661977   0.4881275   0.3137063   0.7570463  
       X25         X26         X27         X28         X29         X30  
 0.3109085   0.3563459   0.3036621   0.2481001   0.2876393   0.3311952  
       X31         X32         X33         X34         X35         X36  
 0.3846636   0.3194760   0.3503941   0.3434232  -0.0426882   0.0773320  
       X37         X38         X39         X40         X41         X42  
 0.2023668   0.2368095   0.0142454   0.0001497   0.1849750  -0.0771487  
       X43         X44  
 0.1112956   0.1414221  


[[12]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
        X1          X2          X3          X4          X5          X6  
 0.8356778   0.9038242   0.9273297   0.8623487   0.9240773   0.6812354  
        X7          X8          X9         X10         X11         X12  
 1.0129786   0.9154743   0.7881959   0.8704223   0.7327576   0.8458648  
       X13         X14         X15         X16         X17         X18  
 0.6614748   0.6177916   0.8345412   0.6505002   0.4569921   0.7163862  
       X19         X20         X21         X22         X23         X24  
 0.5869365   0.5124904   0.7154767   0.4044371   0.3135836   0.7342003  
       X25         X26         X27         X28         X29         X30  
 0.1814701   0.4678701   0.2501417   0.2983010   0.4255063   0.2752816  
       X31         X32         X33         X34         X35         X36  
 0.4192099   0.2484000   0.3377276   0.3700549  -0.0339657   0.0986954  
       X37         X38         X39         X40         X41         X42  
 0.2573439   0.2067886   0.0730608   0.0602409   0.0271630  -0.0876184  
       X43         X44         X45         X46         X47         X48  
 0.1140072   0.0279628   0.2420027  -0.0667691   0.1291970   0.0003471  


[[13]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
      X1        X2        X3        X4        X5        X6        X7        X8  
 0.87792   0.87853   0.95969   0.80829   0.93216   0.66425   1.03174   0.93169  
      X9       X10       X11       X12       X13       X14       X15       X16  
 0.73823   0.91751   0.70535   0.85815   0.61127   0.61664   0.85152   0.53775  
     X17       X18       X19       X20       X21       X22       X23       X24  
 0.55616   0.69423   0.54119   0.52193   0.80446   0.30727   0.37218   0.69512  
     X25       X26       X27       X28       X29       X30       X31       X32  
 0.11072   0.45538   0.30979   0.34763   0.37550   0.25607   0.46843   0.25158  
     X33       X34       X35       X36       X37       X38       X39       X40  
 0.41002   0.32649  -0.07566   0.16541   0.13153   0.19236   0.18221   0.01302  
     X41       X42       X43       X44       X45       X46       X47       X48  
 0.08799  -0.17780   0.09792   0.11979   0.39357  -0.21444   0.19098  -0.01333  
     X49       X50       X51       X52  
-0.33059   0.31378  -0.01545   0.27533  


[[14]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
      X1        X2        X3        X4        X5        X6        X7        X8  
 0.79871   0.88462   1.01053   0.81353   0.96917   0.71370   0.97798   0.96412  
      X9       X10       X11       X12       X13       X14       X15       X16  
 0.81432   0.81197   0.80435   0.86457   0.47449   0.66749   0.83723   0.61421  
     X17       X18       X19       X20       X21       X22       X23       X24  
 0.68948   0.58664   0.52826   0.46719   0.72826   0.27283   0.44909   0.61965  
     X25       X26       X27       X28       X29       X30       X31       X32  
 0.20417   0.49261   0.28000   0.50775   0.34846   0.14687   0.56244   0.18359  
     X33       X34       X35       X36       X37       X38       X39       X40  
 0.24918   0.37847  -0.01514   0.22994   0.29368   0.20833   0.12277  -0.02911  
     X41       X42       X43       X44       X45       X46       X47       X48  
-0.05467  -0.12400   0.13407   0.14165   0.44045  -0.23815   0.18494   0.04380  
     X49       X50       X51       X52       X53       X54       X55       X56  
-0.41941   0.25903  -0.01394   0.09740   0.03432   0.41002  -0.22428   0.10913  


[[15]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
       X1         X2         X3         X4         X5         X6         X7  
 0.805493   0.979649   0.936750   0.892108   0.678244   0.888488   1.099590  
       X8         X9        X10        X11        X12        X13        X14  
 0.827664   0.927881   0.755752   0.624800   0.993766   0.391135   0.592552  
      X15        X16        X17        X18        X19        X20        X21  
 0.989241   0.555122   0.590509   0.772214   0.250360   0.482812   0.811391  
      X22        X23        X24        X25        X26        X27        X28  
 0.207502   0.575403   0.459911   0.359463   0.476932   0.283283   0.654041  
      X29        X30        X31        X32        X33        X34        X35  
 0.181916   0.071784   0.674989   0.115640   0.151255   0.447343   0.013682  
      X36        X37        X38        X39        X40        X41        X42  
 0.242274   0.635024  -0.060512   0.280510  -0.088766  -0.355841   0.002652  
      X43        X44        X45        X46        X47        X48        X49  
 0.094890   0.288573   0.427181  -0.311635   0.193066   0.019149  -0.556874  
      X50        X51        X52        X53        X54        X55        X56  
 0.379885  -0.154786  -0.027491   0.265219   0.476645  -0.147032   0.176688  
      X57        X58        X59        X60  
-0.271965   0.162346  -0.229528   0.096688  


[[16]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
      X1        X2        X3        X4        X5        X6        X7        X8  
 0.75606   0.97252   0.88456   0.95501   0.54434   0.99601   1.15465   0.84570  
      X9       X10       X11       X12       X13       X14       X15       X16  
 0.91307   0.84523   0.54864   0.94467   0.50954   0.39723   1.06535   0.57708  
     X17       X18       X19       X20       X21       X22       X23       X24  
 0.73290   0.80718   0.18908   0.72109   0.53084   0.05080   0.77760   0.30313  
     X25       X26       X27       X28       X29       X30       X31       X32  
 0.39594   0.46751   0.34890   0.76135   0.33583   0.04416   0.69144   0.04045  
     X33       X34       X35       X36       X37       X38       X39       X40  
-0.11687   0.47868   0.02916   0.40744   0.74841  -0.15879   0.26367  -0.15785  
     X41       X42       X43       X44       X45       X46       X47       X48  
-0.33180  -0.03470   0.14872   0.28324   0.38726  -0.15601   0.18823   0.10546  
     X49       X50       X51       X52       X53       X54       X55       X56  
-0.72755   0.34284  -0.14634  -0.03652   0.19148   0.62087  -0.25364  -0.01523  
     X57       X58       X59       X60       X61       X62       X63       X64  
 0.04756  -0.03189  -0.13762   0.26517  -0.30234   0.38775  -0.45425   0.14283  


[[17]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
       X1         X2         X3         X4         X5         X6         X7  
 0.543301   1.215321   0.766936   1.056904   0.531299   0.975526   1.245424  
       X8         X9        X10        X11        X12        X13        X14  
 0.766967   0.726815   0.967803   0.588680   0.869606   0.583325   0.451489  
      X15        X16        X17        X18        X19        X20        X21  
 0.997955   0.562879   0.918224   0.615510   0.150998   0.802981   0.488738  
      X22        X23        X24        X25        X26        X27        X28  
 0.021935   0.970548   0.495763   0.203719   0.240716   0.573502   0.642283  
      X29        X30        X31        X32        X33        X34        X35  
 0.459708  -0.040896   0.754095   0.158028  -0.132424   0.456629   0.070177  
      X36        X37        X38        X39        X40        X41        X42  
 0.453000   0.585534  -0.340964   0.345113   0.065138  -0.232778  -0.106059  
      X43        X44        X45        X46        X47        X48        X49  
 0.230578   0.221516   0.250260  -0.082655   0.284013   0.155588  -0.811119  
      X50        X51        X52        X53        X54        X55        X56  
 0.600407  -0.250325  -0.057761  -0.013362   0.710597  -0.300249  -0.017311  
      X57        X58        X59        X60        X61        X62        X63  
 0.095459   0.007393  -0.264903   0.102571  -0.131987   0.371423  -0.564791  
      X64        X65        X66        X67        X68  
 0.295756  -0.338591   0.644262  -0.529970  -0.060752  


[[18]]

Call:
lm(formula = Y ~ . - 1, data = reflow(object, k))

Coefficients:
      X1        X2        X3        X4        X5        X6        X7        X8  
 0.63321   1.16611   0.99400   1.09245   0.82417   0.65560   1.28409   0.75379  
      X9       X10       X11       X12       X13       X14       X15       X16  
 0.52000   0.91107   0.84464   0.87940   0.58005   0.49047   0.87119   0.70551  
     X17       X18       X19       X20       X21       X22       X23       X24  
 0.91205   0.38115   0.34328   0.73926   0.19179   0.41290   0.82752   0.51594  
     X25       X26       X27       X28       X29       X30       X31       X32  
 0.64250   0.24352   0.25211   0.55761   0.39987   0.09879   0.76857   0.30409  
     X33       X34       X35       X36       X37       X38       X39       X40  
-0.03548   0.37647   0.04800   0.53960   0.26280  -0.20881   0.39172  -0.23543  
     X41       X42       X43       X44       X45       X46       X47       X48  
 0.05735   0.16709   0.08632   0.33097   0.18783  -0.15511   0.05197   0.09221  
     X49       X50       X51       X52       X53       X54       X55       X56  
-0.86933   0.67496  -0.39785  -0.01997   0.30488   0.60956  -0.35664  -0.05275  
     X57       X58       X59       X60       X61       X62       X63       X64  
 0.04246   0.12039  -0.22840   0.08691  -0.16690   0.43290  -0.42899   0.31736  
     X65       X66       X67       X68       X69       X70       X71       X72  
-0.57939   0.48553  -0.35484  -0.41017   0.62286  -0.34073   0.08884   0.03228  


> object.size(modl4.100)
317186440 bytes
> object.size(modl4.100)/1024^2
302.492561340332 bytes
> prep.nls.finite
function(object,k) {
    mod <- lm(Y~.-1,data=reflow(object,k=k))
    that <- coef(mod)
    lst <- list(that=that,index=1:(object$m*(k+1))-1)
    lst
}
> reflow(sim4.100[[1]],2)
                    Y           X1          X2          X3           X4
result.1   -3.8552766  2.498165568  1.38753280 -0.05920139 -0.614706276
result.2   -0.3069145  2.310835357 -0.45094823 -0.34581781  1.152306818
result.3    5.5127185  1.398106697  1.04184136 -0.20066606  1.938047298
result.4    0.1947112 -1.065614282 -0.72049165 -2.04119732 -0.386564032
result.5   -1.1909366 -0.464605291 -0.55018996  0.28713620 -0.943424909
result.6   -1.0117115 -0.389849579 -0.47820744 -1.21593951  0.739119504
result.7   -5.3367408 -2.092632643 -1.38773177 -1.37046124  0.514768462
                    X5          X6          X7           X8           X9
result.1  -0.824424817 -0.80292102  0.74306907 -0.302502993 -2.002831082
result.2   2.498165568  1.38753280 -0.05920139 -0.614706276 -0.824424817
result.3   2.310835357 -0.45094823 -0.34581781  1.152306818  2.498165568
result.4   1.398106697  1.04184136 -0.20066606  1.938047298  2.310835357
result.5  -1.065614282 -0.72049165 -2.04119732 -0.386564032  1.398106697
result.6  -0.464605291 -0.55018996  0.28713620 -0.943424909 -1.065614282
result.7  -0.389849579 -0.47820744 -1.21593951  0.739119504 -0.464605291
                  X10         X11          X12
result.1  -2.55876497 -1.18359749  1.250278884
result.2  -0.80292102  0.74306907 -0.302502993
result.3   1.38753280 -0.05920139 -0.614706276
result.4  -0.45094823 -0.34581781  1.152306818
result.5   1.04184136 -0.20066606  1.938047298
result.6  -0.72049165 -2.04119732 -0.386564032
result.7  -0.55018996  0.28713620 -0.943424909
 [getOption("max.print") est atteint -- 91 lignes omises ]]
> system.time(reflow(sim4.100[[1]],2))
utilisateur     système      écoulé 
      0.059       0.001       0.073 
> aa <- sim4.100[[1]]
> aa$X
  [1]  1.250278884 -1.183597494 -2.558764975 -2.002831082 -0.302502993
  [6]  0.743069067 -0.802921022 -0.824424817 -0.614706276 -0.059201387
 [11]  1.387532795  2.498165568  1.152306818 -0.345817811 -0.450948226
 [16]  2.310835357  1.938047298 -0.200666058  1.041841364  1.398106697
 [21] -0.386564032 -2.041197325 -0.720491654 -1.065614282 -0.943424909
 [26]  0.287136204 -0.550189964 -0.464605291  0.739119504 -1.215939508
 [31] -0.478207442 -0.389849579  0.514768462 -1.370461244 -1.387731765
 [36] -2.092632643  0.182190753  2.053098206 -0.142376091 -1.118384578
 [41] -1.358346936 -1.732972984  0.824076350  1.752599029  0.002841306
 [46]  1.166621712  0.855975937  2.446584665  2.556847777  0.172340309
 [51]  0.367012365  4.258481759  1.758924396  0.982161729 -0.181215620
 [56]  0.907228842  0.527193536  0.478687242 -0.994265580 -1.697734907
 [61] -1.616916412 -0.959167824 -0.078798536  0.119587479 -0.156197181
 [66] -0.790149952  0.599476789  0.531372365  0.757229720  0.448213345
 [71]  1.677188748  1.021388763  0.699078494  1.016874768 -0.242364158
 [76]  0.037450517 -1.489935910 -0.891067965 -1.263980052 -0.580012620
 [81]  0.111755721 -1.054241475 -0.925528076  1.357959495  1.930910446
 [86] -0.279378707 -1.852131621 -1.086289917 -0.798003810  0.301092309
 [91] -1.763681881 -2.636750848 -2.477652743 -0.665349727 -1.060583772
 [96] -1.763122020 -0.829563298 -0.719920701 -0.648547843 -1.114426102
 [ reached getOption("max.print") -- omitted 300 entries ]]
> length(X)
Erreur : objet 'X' introuvable
> length(aa$X)
[1] 400
> bb <- reflow(aa,k=0)
> bb
                     Y           X1          X2          X3           X4
result.1    -6.8960610 -2.002831082 -2.55876497 -1.18359749  1.250278884
result.2    -6.0076608 -0.824424817 -0.80292102  0.74306907 -0.302502993
result.3    -3.8552766  2.498165568  1.38753280 -0.05920139 -0.614706276
result.4    -0.3069145  2.310835357 -0.45094823 -0.34581781  1.152306818
result.5     5.5127185  1.398106697  1.04184136 -0.20066606  1.938047298
result.6     0.1947112 -1.065614282 -0.72049165 -2.04119732 -0.386564032
result.7    -1.1909366 -0.464605291 -0.55018996  0.28713620 -0.943424909
result.8    -1.0117115 -0.389849579 -0.47820744 -1.21593951  0.739119504
result.9    -5.3367408 -2.092632643 -1.38773177 -1.37046124  0.514768462
result.10   -5.8250230 -1.118384578 -0.14237609  2.05309821  0.182190753
result.11   -4.5550540  1.752599029  0.82407635 -1.73297298 -1.358346936
result.12    0.1750832  2.446584665  0.85597594  1.16662171  0.002841306
result.13    7.9090413  4.258481759  0.36701237  0.17234031  2.556847777
result.14   11.2877834  0.907228842 -0.18121562  0.98216173  1.758924396
result.15    8.1318141 -1.697734907 -0.99426558  0.47868724  0.527193536
result.16    4.7050022  0.119587479 -0.07879854 -0.95916782 -1.616916412
result.17    3.7185287  0.531372365  0.59947679 -0.79014995 -0.156197181
result.18    7.6181378  1.021388763  1.67718875  0.44821335  0.757229720
result.19    8.9487643  0.037450517 -0.24236416  1.01687477  0.699078494
result.20    3.6634590 -0.580012620 -1.26398005 -0.89106797 -1.489935910
 [getOption("max.print") est atteint -- 80 lignes omises ]]
>
> object$X
Erreur : objet 'object' introuvable
> bb$X
NULL
> aa$X[1:100]
  [1]  1.250278884 -1.183597494 -2.558764975 -2.002831082 -0.302502993
  [6]  0.743069067 -0.802921022 -0.824424817 -0.614706276 -0.059201387
 [11]  1.387532795  2.498165568  1.152306818 -0.345817811 -0.450948226
 [16]  2.310835357  1.938047298 -0.200666058  1.041841364  1.398106697
 [21] -0.386564032 -2.041197325 -0.720491654 -1.065614282 -0.943424909
 [26]  0.287136204 -0.550189964 -0.464605291  0.739119504 -1.215939508
 [31] -0.478207442 -0.389849579  0.514768462 -1.370461244 -1.387731765
 [36] -2.092632643  0.182190753  2.053098206 -0.142376091 -1.118384578
 [41] -1.358346936 -1.732972984  0.824076350  1.752599029  0.002841306
 [46]  1.166621712  0.855975937  2.446584665  2.556847777  0.172340309
 [51]  0.367012365  4.258481759  1.758924396  0.982161729 -0.181215620
 [56]  0.907228842  0.527193536  0.478687242 -0.994265580 -1.697734907
 [61] -1.616916412 -0.959167824 -0.078798536  0.119587479 -0.156197181
 [66] -0.790149952  0.599476789  0.531372365  0.757229720  0.448213345
 [71]  1.677188748  1.021388763  0.699078494  1.016874768 -0.242364158
 [76]  0.037450517 -1.489935910 -0.891067965 -1.263980052 -0.580012620
 [81]  0.111755721 -1.054241475 -0.925528076  1.357959495  1.930910446
 [86] -0.279378707 -1.852131621 -1.086289917 -0.798003810  0.301092309
 [91] -1.763681881 -2.636750848 -2.477652743 -0.665349727 -1.060583772
 [96] -1.763122020 -0.829563298 -0.719920701 -0.648547843 -1.114426102
> 1:(10-3)
[1] 1 2 3 4 5 6 7
> integer(3)
[1] 0 0 0
> library(inline)
> library(Rcpp)
> 
>  src <-
+       'NumericVector X(x);
+        IntegerVector Dims(dims);
+        int n=Dims[0]; m=Dims[1]; k=Dims[2];
+        NumericMatrix xx(n-k,m);
+        for(int i=0;i<n-k;i++) {
+          for(int j=0;j<m;j++) {
+            xx[i,j]=X[m*(k+1)-j-1+i*m];
+          }
+        }
+        Return xx;'
> 
>     rcppreflow <- cxxfunction(signature(X="numeric",Dims="integer"),                        src,plugin="Rcpp")
file3ab50c2a.cpp: In function 'SEXPREC* file3ab50c2a(SEXPREC*, SEXPREC*)':
file3ab50c2a.cpp:30: error: 'x' was not declared in this scope
file3ab50c2a.cpp:31: error: 'dims' was not declared in this scope
file3ab50c2a.cpp:32: error: 'm' was not declared in this scope
file3ab50c2a.cpp:32: error: 'k' was not declared in this scope
file3ab50c2a.cpp:39: error: 'Return' was not declared in this scope
file3ab50c2a.cpp:39: error: expected `;' before 'xx'
make: *** [file3ab50c2a.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: 
  2: // includes from the plugin
  3: 
  4: #include <Rcpp.h>
  5: 
  6: 
  7: #ifndef BEGIN_RCPP
  8: #define BEGIN_RCPP
  9: #endif
 10: 
 11: #ifndef END_RCPP
 12: #define END_RCPP
 13: #endif
 14: 
 15: using namespace Rcpp;
 16: 
 17: 
 18: // user includes
 19: 
 20: 
 21: // declarations
 22: extern "C" {
 23: SEXP file3ab50c2a( SEXP X, SEXP Dims) ;
 24: }
 25: 
 26: // definition
 27: 
 28: SEXP file3ab50c2a( SEXP X, SEXP Dims ){
 29: BEGIN_RCPP
 30: NumericVector X(x);
 31:        IntegerVector Dims(dims);
 32:        int n=Dims[0]; m=Dims[1]; k=Dims[2];
 33:        NumericMatrix xx(n-k,m);
 34:        for(int i=0;i<n-k;i++) {
 35:          for(int j=0;j<m;j++) {
 36:            xx[i,j]=X[m*(k+1)-j-1+i*m];
 37:          }
 38:        }
 39:        Return xx;
 40: END_RCPP
 41: }
 42: 
 43: 
Erreur dans compileCode(f, code, language = language, verbose = verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file3ab50c2a.cpp: In function 'SEXPREC* file3ab50c2a(SEXPREC*, SEXPREC*)':
file3ab50c2a.cpp:30: error: 'x' was not declared in this scope
file3ab50c2a.cpp:31: error: 'dims' was not declared in this scope
file3ab50c2a.cpp:32: error: 'm' was not declared in this scope
file3ab50c2a.cpp:32: error: 'k' was not declared in this scope
file3ab50c2a.cpp:39: error: 'Return' was not declared in this scope
file3ab50c2a.cpp:39: error: expected `;' before 'xx'
make: *** [file3ab50c2a.o] Error 1
> 
>     rcppreflow <- cxxfunction(signature(x="numeric",dims="integer"),                        src,plugin="Rcpp")
file4431b782.cpp: In function 'SEXPREC* file4431b782(SEXPREC*, SEXPREC*)':
file4431b782.cpp:32: error: 'm' was not declared in this scope
file4431b782.cpp:32: error: 'k' was not declared in this scope
file4431b782.cpp:39: error: 'Return' was not declared in this scope
file4431b782.cpp:39: error: expected `;' before 'xx'
make: *** [file4431b782.o] Error 1

ERROR(s) during compilation: source code errors or compiler configuration errors!

Program source:
  1: 
  2: // includes from the plugin
  3: 
  4: #include <Rcpp.h>
  5: 
  6: 
  7: #ifndef BEGIN_RCPP
  8: #define BEGIN_RCPP
  9: #endif
 10: 
 11: #ifndef END_RCPP
 12: #define END_RCPP
 13: #endif
 14: 
 15: using namespace Rcpp;
 16: 
 17: 
 18: // user includes
 19: 
 20: 
 21: // declarations
 22: extern "C" {
 23: SEXP file4431b782( SEXP x, SEXP dims) ;
 24: }
 25: 
 26: // definition
 27: 
 28: SEXP file4431b782( SEXP x, SEXP dims ){
 29: BEGIN_RCPP
 30: NumericVector X(x);
 31:        IntegerVector Dims(dims);
 32:        int n=Dims[0]; m=Dims[1]; k=Dims[2];
 33:        NumericMatrix xx(n-k,m);
 34:        for(int i=0;i<n-k;i++) {
 35:          for(int j=0;j<m;j++) {
 36:            xx[i,j]=X[m*(k+1)-j-1+i*m];
 37:          }
 38:        }
 39:        Return xx;
 40: END_RCPP
 41: }
 42: 
 43: 
Erreur dans compileCode(f, code, language = language, verbose = verbose) : 
  Compilation ERROR, function(s)/method(s) not created! file4431b782.cpp: In function 'SEXPREC* file4431b782(SEXPREC*, SEXPREC*)':
file4431b782.cpp:32: error: 'm' was not declared in this scope
file4431b782.cpp:32: error: 'k' was not declared in this scope
file4431b782.cpp:39: error: 'Return' was not declared in this scope
file4431b782.cpp:39: error: expected `;' before 'xx'
make: *** [file4431b782.o] Error 1
> 
>  src <-
+       'NumericVector X(x);
+        IntegerVector Dims(dims);
+        int n=Dims[0]; int m=Dims[1]; int k=Dims[2];
+        NumericMatrix xx(n-k,m);
+        for(int i=0;i<n-k;i++) {
+          for(int j=0;j<m;j++) {
+            xx[i,j]=X[m*(k+1)-j-1+i*m];
+          }
+        }
+        return xx;'
> 
>     rcppreflow <- cxxfunction(signature(x="numeric",dims="integer"),                        src,plugin="Rcpp")
> rcppreflow(aa$X,c(100,4,0))
             [,1] [,2] [,3] [,4]
  [1,]  0.3754595    0    0    0
  [2,]  0.1870814    0    0    0
  [3,] -1.0601108    0    0    0
  [4,]  0.1338346    0    0    0
  [5,]  0.0000000    0    0    0
  [6,]  0.0000000    0    0    0
  [7,]  0.0000000    0    0    0
  [8,]  0.0000000    0    0    0
  [9,]  0.0000000    0    0    0
 [10,]  0.0000000    0    0    0
 [11,]  0.0000000    0    0    0
 [12,]  0.0000000    0    0    0
 [13,]  0.0000000    0    0    0
 [14,]  0.0000000    0    0    0
 [15,]  0.0000000    0    0    0
 [16,]  0.0000000    0    0    0
 [17,]  0.0000000    0    0    0
 [18,]  0.0000000    0    0    0
 [19,]  0.0000000    0    0    0
 [20,]  0.0000000    0    0    0
 [21,]  0.0000000    0    0    0
 [22,]  0.0000000    0    0    0
 [23,]  0.0000000    0    0    0
 [24,]  0.0000000    0    0    0
 [25,]  0.0000000    0    0    0
 [getOption("max.print") est atteint -- 75 lignes omises ]]
> aa$X
  [1]  1.250278884 -1.183597494 -2.558764975 -2.002831082 -0.302502993
  [6]  0.743069067 -0.802921022 -0.824424817 -0.614706276 -0.059201387
 [11]  1.387532795  2.498165568  1.152306818 -0.345817811 -0.450948226
 [16]  2.310835357  1.938047298 -0.200666058  1.041841364  1.398106697
 [21] -0.386564032 -2.041197325 -0.720491654 -1.065614282 -0.943424909
 [26]  0.287136204 -0.550189964 -0.464605291  0.739119504 -1.215939508
 [31] -0.478207442 -0.389849579  0.514768462 -1.370461244 -1.387731765
 [36] -2.092632643  0.182190753  2.053098206 -0.142376091 -1.118384578
 [41] -1.358346936 -1.732972984  0.824076350  1.752599029  0.002841306
 [46]  1.166621712  0.855975937  2.446584665  2.556847777  0.172340309
 [51]  0.367012365  4.258481759  1.758924396  0.982161729 -0.181215620
 [56]  0.907228842  0.527193536  0.478687242 -0.994265580 -1.697734907
 [61] -1.616916412 -0.959167824 -0.078798536  0.119587479 -0.156197181
 [66] -0.790149952  0.599476789  0.531372365  0.757229720  0.448213345
 [71]  1.677188748  1.021388763  0.699078494  1.016874768 -0.242364158
 [76]  0.037450517 -1.489935910 -0.891067965 -1.263980052 -0.580012620
 [81]  0.111755721 -1.054241475 -0.925528076  1.357959495  1.930910446
 [86] -0.279378707 -1.852131621 -1.086289917 -0.798003810  0.301092309
 [91] -1.763681881 -2.636750848 -2.477652743 -0.665349727 -1.060583772
 [96] -1.763122020 -0.829563298 -0.719920701 -0.648547843 -1.114426102
 [ reached getOption("max.print") -- omitted 300 entries ]]
> whic(aa$X==0.1870814)
Erreur : impossible de trouver la fonction "whic"
> which(aa$X==0.1870814)
integer(0)
> which(abs((aa$X-0.1870814))<0.000001)
[1] 399
> aa$X[399]
[1] 0.1870814
> tail(aa$X)
[1] -0.1647060  1.4294920  0.1338346 -1.0601108  0.1870814  0.3754595
> 
>  src <-
+       'NumericVector X(x);
+        IntegerVector Dims(dims);
+        int n=Dims[0]; int m=Dims[1]; int k=Dims[2];
+        NumericMatrix xx(n-k,m);
+        for(int i=0;i<n-k;i++) {
+          for(int j=0;j<m;j++) {
+            xx[i,j]=m*(k+1)-j-1+i*m;
+          }
+        }
+        return xx;'
> 
>     rcppreflow <- cxxfunction(signature(x="numeric",dims="integer"),                        src,plugin="Rcpp")
> rcppreflow(aa$X,c(100,4,0))
       [,1] [,2] [,3] [,4]
  [1,]  399    0    0    0
  [2,]  398    0    0    0
  [3,]  397    0    0    0
  [4,]  396    0    0    0
  [5,]    0    0    0    0
  [6,]    0    0    0    0
  [7,]    0    0    0    0
  [8,]    0    0    0    0
  [9,]    0    0    0    0
 [10,]    0    0    0    0
 [11,]    0    0    0    0
 [12,]    0    0    0    0
 [13,]    0    0    0    0
 [14,]    0    0    0    0
 [15,]    0    0    0    0
 [16,]    0    0    0    0
 [17,]    0    0    0    0
 [18,]    0    0    0    0
 [19,]    0    0    0    0
 [20,]    0    0    0    0
 [21,]    0    0    0    0
 [22,]    0    0    0    0
 [23,]    0    0    0    0
 [24,]    0    0    0    0
 [25,]    0    0    0    0
 [getOption("max.print") est atteint -- 75 lignes omises ]]
> aa <- rcppreflow(aa$X,c(100,4,0))
> aa <- sim4.100[[1]]
> dd <- rcppreflow(aa$X,c(100,4,0))
> dim(dd)
[1] 100   4
> 
>  src <-
+       'NumericVector X(x);
+        IntegerVector Dims(dims);
+        int n=Dims[0]; int m=Dims[1]; int k=Dims[2];
+        NumericMatrix xx(n-k,m);
+        for(int i=0;i<n-k;i++) {
+          for(int j=0;j<m;j++) {
+           // xx[i,j]=m*(k+1)-j-1+i*m;
+ xx[i,j]=i;
+          }
+        }
+        return xx;'
> 
>     rcppreflow <- cxxfunction(signature(x="numeric",dims="integer"),                        src,plugin="Rcpp")
> rcppreflow(aa$X,c(100,4,0))
       [,1] [,2] [,3] [,4]
  [1,]   99    0    0    0
  [2,]   99    0    0    0
  [3,]   99    0    0    0
  [4,]   99    0    0    0
  [5,]    0    0    0    0
  [6,]    0    0    0    0
  [7,]    0    0    0    0
  [8,]    0    0    0    0
  [9,]    0    0    0    0
 [10,]    0    0    0    0
 [11,]    0    0    0    0
 [12,]    0    0    0    0
 [13,]    0    0    0    0
 [14,]    0    0    0    0
 [15,]    0    0    0    0
 [16,]    0    0    0    0
 [17,]    0    0    0    0
 [18,]    0    0    0    0
 [19,]    0    0    0    0
 [20,]    0    0    0    0
 [21,]    0    0    0    0
 [22,]    0    0    0    0
 [23,]    0    0    0    0
 [24,]    0    0    0    0
 [25,]    0    0    0    0
 [getOption("max.print") est atteint -- 75 lignes omises ]]
> 
>  src <-
+       'NumericVector X(x);
+        IntegerVector Dims(dims);
+        int n=Dims[0]; int m=Dims[1]; int k=Dims[2];
+        NumericMatrix xx(n-k,m);
+        for(int i=0;i<n-k;i++) {
+          for(int j=0;j<m;j++) {
+           // xx[i,j]=m*(k+1)-j-1+i*m;
+ xx(i,j)=i;
+          }
+        }
+        return xx;'
> 
>     rcppreflow <- cxxfunction(signature(x="numeric",dims="integer"),                        src,plugin="Rcpp")
> rcppreflow(aa$X,c(100,4,0))
       [,1] [,2] [,3] [,4]
  [1,]    0    0    0    0
  [2,]    1    1    1    1
  [3,]    2    2    2    2
  [4,]    3    3    3    3
  [5,]    4    4    4    4
  [6,]    5    5    5    5
  [7,]    6    6    6    6
  [8,]    7    7    7    7
  [9,]    8    8    8    8
 [10,]    9    9    9    9
 [11,]   10   10   10   10
 [12,]   11   11   11   11
 [13,]   12   12   12   12
 [14,]   13   13   13   13
 [15,]   14   14   14   14
 [16,]   15   15   15   15
 [17,]   16   16   16   16
 [18,]   17   17   17   17
 [19,]   18   18   18   18
 [20,]   19   19   19   19
 [21,]   20   20   20   20
 [22,]   21   21   21   21
 [23,]   22   22   22   22
 [24,]   23   23   23   23
 [25,]   24   24   24   24
 [getOption("max.print") est atteint -- 75 lignes omises ]]
> 
>  src <-
+       'NumericVector X(x);
+        IntegerVector Dims(dims);
+        int n=Dims(0); int m=Dims(1); int k=Dims(2);
+        NumericMatrix xx(n-k,m);
+        for(int i=0;i<n-k;i++) {
+          for(int j=0;j<m;j++) {
+            xx(i,j)=X(m*(k+1)-j-1+i*m);
+          }
+        }
+        return xx;'
> 
>     rcppreflow <- cxxfunction(signature(x="numeric",dims="integer"),                        src,plugin="Rcpp")
> rcppreflow(aa$X,c(100,4,0))
               [,1]        [,2]        [,3]         [,4]
  [1,] -2.002831082 -2.55876497 -1.18359749  1.250278884
  [2,] -0.824424817 -0.80292102  0.74306907 -0.302502993
  [3,]  2.498165568  1.38753280 -0.05920139 -0.614706276
  [4,]  2.310835357 -0.45094823 -0.34581781  1.152306818
  [5,]  1.398106697  1.04184136 -0.20066606  1.938047298
  [6,] -1.065614282 -0.72049165 -2.04119732 -0.386564032
  [7,] -0.464605291 -0.55018996  0.28713620 -0.943424909
  [8,] -0.389849579 -0.47820744 -1.21593951  0.739119504
  [9,] -2.092632643 -1.38773177 -1.37046124  0.514768462
 [10,] -1.118384578 -0.14237609  2.05309821  0.182190753
 [11,]  1.752599029  0.82407635 -1.73297298 -1.358346936
 [12,]  2.446584665  0.85597594  1.16662171  0.002841306
 [13,]  4.258481759  0.36701237  0.17234031  2.556847777
 [14,]  0.907228842 -0.18121562  0.98216173  1.758924396
 [15,] -1.697734907 -0.99426558  0.47868724  0.527193536
 [16,]  0.119587479 -0.07879854 -0.95916782 -1.616916412
 [17,]  0.531372365  0.59947679 -0.79014995 -0.156197181
 [18,]  1.021388763  1.67718875  0.44821335  0.757229720
 [19,]  0.037450517 -0.24236416  1.01687477  0.699078494
 [20,] -0.580012620 -1.26398005 -0.89106797 -1.489935910
 [21,]  1.357959495 -0.92552808 -1.05424148  0.111755721
 [22,] -1.086289917 -1.85213162 -0.27937871  1.930910446
 [23,] -2.636750848 -1.76368188  0.30109231 -0.798003810
 [24,] -1.763122020 -1.06058377 -0.66534973 -2.477652743
 [25,] -1.114426102 -0.64854784 -0.71992070 -0.829563298
 [getOption("max.print") est atteint -- 75 lignes omises ]]
> aa$X
  [1]  1.250278884 -1.183597494 -2.558764975 -2.002831082 -0.302502993
  [6]  0.743069067 -0.802921022 -0.824424817 -0.614706276 -0.059201387
 [11]  1.387532795  2.498165568  1.152306818 -0.345817811 -0.450948226
 [16]  2.310835357  1.938047298 -0.200666058  1.041841364  1.398106697
 [21] -0.386564032 -2.041197325 -0.720491654 -1.065614282 -0.943424909
 [26]  0.287136204 -0.550189964 -0.464605291  0.739119504 -1.215939508
 [31] -0.478207442 -0.389849579  0.514768462 -1.370461244 -1.387731765
 [36] -2.092632643  0.182190753  2.053098206 -0.142376091 -1.118384578
 [41] -1.358346936 -1.732972984  0.824076350  1.752599029  0.002841306
 [46]  1.166621712  0.855975937  2.446584665  2.556847777  0.172340309
 [51]  0.367012365  4.258481759  1.758924396  0.982161729 -0.181215620
 [56]  0.907228842  0.527193536  0.478687242 -0.994265580 -1.697734907
 [61] -1.616916412 -0.959167824 -0.078798536  0.119587479 -0.156197181
 [66] -0.790149952  0.599476789  0.531372365  0.757229720  0.448213345
 [71]  1.677188748  1.021388763  0.699078494  1.016874768 -0.242364158
 [76]  0.037450517 -1.489935910 -0.891067965 -1.263980052 -0.580012620
 [81]  0.111755721 -1.054241475 -0.925528076  1.357959495  1.930910446
 [86] -0.279378707 -1.852131621 -1.086289917 -0.798003810  0.301092309
 [91] -1.763681881 -2.636750848 -2.477652743 -0.665349727 -1.060583772
 [96] -1.763122020 -0.829563298 -0.719920701 -0.648547843 -1.114426102
 [ reached getOption("max.print") -- omitted 300 entries ]]
> reflow(sim4.100[[1]],2)
                    Y           X1          X2          X3           X4
result.1   -3.8552766  2.498165568  1.38753280 -0.05920139 -0.614706276
result.2   -0.3069145  2.310835357 -0.45094823 -0.34581781  1.152306818
result.3    5.5127185  1.398106697  1.04184136 -0.20066606  1.938047298
result.4    0.1947112 -1.065614282 -0.72049165 -2.04119732 -0.386564032
result.5   -1.1909366 -0.464605291 -0.55018996  0.28713620 -0.943424909
result.6   -1.0117115 -0.389849579 -0.47820744 -1.21593951  0.739119504
result.7   -5.3367408 -2.092632643 -1.38773177 -1.37046124  0.514768462
                    X5          X6          X7           X8           X9
result.1  -0.824424817 -0.80292102  0.74306907 -0.302502993 -2.002831082
result.2   2.498165568  1.38753280 -0.05920139 -0.614706276 -0.824424817
result.3   2.310835357 -0.45094823 -0.34581781  1.152306818  2.498165568
result.4   1.398106697  1.04184136 -0.20066606  1.938047298  2.310835357
result.5  -1.065614282 -0.72049165 -2.04119732 -0.386564032  1.398106697
result.6  -0.464605291 -0.55018996  0.28713620 -0.943424909 -1.065614282
result.7  -0.389849579 -0.47820744 -1.21593951  0.739119504 -0.464605291
                  X10         X11          X12
result.1  -2.55876497 -1.18359749  1.250278884
result.2  -0.80292102  0.74306907 -0.302502993
result.3   1.38753280 -0.05920139 -0.614706276
result.4  -0.45094823 -0.34581781  1.152306818
result.5   1.04184136 -0.20066606  1.938047298
result.6  -0.72049165 -2.04119732 -0.386564032
result.7  -0.55018996  0.28713620 -0.943424909
 [getOption("max.print") est atteint -- 91 lignes omises ]]
> reflowcc.midas_sim(sim4.100[[1]],2)
Erreur : impossible de trouver la fonction "reflowcc.midas_sim"
> reflowcc.midas_sim(sim4.100[[1]],2)
Erreur : impossible de trouver la fonction "reflowcc.midas_sim"
> reflowcc.midas_sim(sim4.100[[1]],2)
             Y           X1          X2          X3           X4
1   -3.8552766  2.498165568  1.38753280 -0.05920139 -0.614706276
2   -0.3069145  2.310835357 -0.45094823 -0.34581781  1.152306818
3    5.5127185  1.398106697  1.04184136 -0.20066606  1.938047298
4    0.1947112 -1.065614282 -0.72049165 -2.04119732 -0.386564032
5   -1.1909366 -0.464605291 -0.55018996  0.28713620 -0.943424909
6   -1.0117115 -0.389849579 -0.47820744 -1.21593951  0.739119504
7   -5.3367408 -2.092632643 -1.38773177 -1.37046124  0.514768462
8   -5.8250230 -1.118384578 -0.14237609  2.05309821  0.182190753
9   -4.5550540  1.752599029  0.82407635 -1.73297298 -1.358346936
10   0.1750832  2.446584665  0.85597594  1.16662171  0.002841306
11   7.9090413  4.258481759  0.36701237  0.17234031  2.556847777
12  11.2877834  0.907228842 -0.18121562  0.98216173  1.758924396
13   8.1318141 -1.697734907 -0.99426558  0.47868724  0.527193536
14   4.7050022  0.119587479 -0.07879854 -0.95916782 -1.616916412
15   3.7185287  0.531372365  0.59947679 -0.79014995 -0.156197181
16   7.6181378  1.021388763  1.67718875  0.44821335  0.757229720
17   8.9487643  0.037450517 -0.24236416  1.01687477  0.699078494
18   3.6634590 -0.580012620 -1.26398005 -0.89106797 -1.489935910
19   2.9541212  1.357959495 -0.92552808 -1.05424148  0.111755721
20  -1.3406949 -1.086289917 -1.85213162 -0.27937871  1.930910446
 [getOption("max.print") est atteint -- 78 lignes omises ]]
> reflowcc.midas_sim(sim4.100[[1]],2)
             Y           X1          X2          X3           X4
1   -3.8552766  2.498165568  1.38753280 -0.05920139 -0.614706276
2   -0.3069145  2.310835357 -0.45094823 -0.34581781  1.152306818
3    5.5127185  1.398106697  1.04184136 -0.20066606  1.938047298
4    0.1947112 -1.065614282 -0.72049165 -2.04119732 -0.386564032
5   -1.1909366 -0.464605291 -0.55018996  0.28713620 -0.943424909
6   -1.0117115 -0.389849579 -0.47820744 -1.21593951  0.739119504
7   -5.3367408 -2.092632643 -1.38773177 -1.37046124  0.514768462
8   -5.8250230 -1.118384578 -0.14237609  2.05309821  0.182190753
9   -4.5550540  1.752599029  0.82407635 -1.73297298 -1.358346936
10   0.1750832  2.446584665  0.85597594  1.16662171  0.002841306
11   7.9090413  4.258481759  0.36701237  0.17234031  2.556847777
12  11.2877834  0.907228842 -0.18121562  0.98216173  1.758924396
13   8.1318141 -1.697734907 -0.99426558  0.47868724  0.527193536
14   4.7050022  0.119587479 -0.07879854 -0.95916782 -1.616916412
15   3.7185287  0.531372365  0.59947679 -0.79014995 -0.156197181
16   7.6181378  1.021388763  1.67718875  0.44821335  0.757229720
17   8.9487643  0.037450517 -0.24236416  1.01687477  0.699078494
18   3.6634590 -0.580012620 -1.26398005 -0.89106797 -1.489935910
19   2.9541212  1.357959495 -0.92552808 -1.05424148  0.111755721
20  -1.3406949 -1.086289917 -1.85213162 -0.27937871  1.930910446
 [getOption("max.print") est atteint -- 78 lignes omises ]]
> reflowcc.midas_sim(sim4.100[[1]],2)
             Y           X1          X2          X3           X4           X5
1   -3.8552766  2.498165568  1.38753280 -0.05920139 -0.614706276 -0.824424817
2   -0.3069145  2.310835357 -0.45094823 -0.34581781  1.152306818  2.498165568
3    5.5127185  1.398106697  1.04184136 -0.20066606  1.938047298  2.310835357
4    0.1947112 -1.065614282 -0.72049165 -2.04119732 -0.386564032  1.398106697
5   -1.1909366 -0.464605291 -0.55018996  0.28713620 -0.943424909 -1.065614282
6   -1.0117115 -0.389849579 -0.47820744 -1.21593951  0.739119504 -0.464605291
7   -5.3367408 -2.092632643 -1.38773177 -1.37046124  0.514768462 -0.389849579
            X6          X7           X8           X9         X10         X11
1  -0.80292102  0.74306907 -0.302502993 -2.002831082 -2.55876497 -1.18359749
2   1.38753280 -0.05920139 -0.614706276 -0.824424817 -0.80292102  0.74306907
3  -0.45094823 -0.34581781  1.152306818  2.498165568  1.38753280 -0.05920139
4   1.04184136 -0.20066606  1.938047298  2.310835357 -0.45094823 -0.34581781
5  -0.72049165 -2.04119732 -0.386564032  1.398106697  1.04184136 -0.20066606
6  -0.55018996  0.28713620 -0.943424909 -1.065614282 -0.72049165 -2.04119732
7  -0.47820744 -1.21593951  0.739119504 -0.464605291 -0.55018996  0.28713620
            X12
1   1.250278884
2  -0.302502993
3  -0.614706276
4   1.152306818
5   1.938047298
6  -0.386564032
7  -0.943424909
 [getOption("max.print") est atteint -- 91 lignes omises ]]
> v2 <- reflowcc.midas_sim(sim4.100[[1]],2)
> v1 <- reflow(sim4.100[[1]],2)
> sum(abs(v1-v2))
[1] 0
> system.time(reflow(sim4.100[[1]],2))
utilisateur     système      écoulé 
      0.062       0.000       0.062 
> system.time(reflowcc.midas_sim(sim4.100[[1]],2))
utilisateur     système      écoulé 
      0.002       0.000       0.001 
> system.time(reflowcc.midas_sim(sim4.100[[1]],2))
utilisateur     système      écoulé 
      0.001       0.000       0.002 
> system.time(reflowcc.midas_sim(sim4.100[[1]],2))
utilisateur     système      écoulé 
      0.001       0.001       0.001 
> system.time(reflowcc.midas_sim(sim4.100[[1]],2))
utilisateur     système      écoulé 
      0.001       0.000       0.001 
> system.time(reflow(sim4.100[[1]],2))
utilisateur     système      écoulé 
      0.064       0.001       0.065 
> system.time(reflow(sim4.100[[1]],2))
utilisateur     système      écoulé 
      0.061       0.001       0.062 
> prep.nls.finite
function(object,k) {
    mod <- lm(Y~.-1,data=reflow(object,k=k))
    that <- coef(mod)
    lst <- list(that=that,index=1:(object$m*(k+1))-1)
    lst
}
> prep.nls.finite(aa,1)
$that
       X1        X2        X3        X4        X5        X6        X7        X8 
0.3336809 1.3569090 0.1397293 0.6245274 1.2256973 0.8371029 0.3046137 1.5089065 

$index
[1] 0 1 2 3 4 5 6 7

> prep.nls.finite.old(aa,1)
$that
       X1        X2        X3        X4        X5        X6        X7        X8 
0.3336809 1.3569090 0.1397293 0.6245274 1.2256973 0.8371029 0.3046137 1.5089065 

$index
[1] 0 1 2 3 4 5 6 7

> system.time(prep.nls.finite.old(aa,1))
utilisateur     système      écoulé 
      0.006       0.000       0.006 
> system.time(prep.nls.finite(aa,1))
utilisateur     système      écoulé 
      0.002       0.000       0.002 
> system.time(prep.nls.finite(aa,1))
utilisateur     système      écoulé 
      0.002       0.000       0.002 
> system.time(prep.nls.finite.old(aa,1))
utilisateur     système      écoulé 
      0.071       0.001       0.073 
> system.time(prep.nls.finite(aa,1))
utilisateur     système      écoulé 
      0.002       0.001       0.002 
> system.time(prep.nls.finite.old(aa,1))
utilisateur     système      écoulé 
      0.068       0.000       0.068 
> 
> gen.k(sim4.100,k=3)
Erreur dans { : 
  task 1 failed - "pas de méthode pour 'reflow' applicable pour un objet de classe "list""
> gen.k(sim4.100[[1]],k=3)
       result.1   result.2   result.3   result.4
[1,] 630.979345 601.600353 566.004232 528.432397
[2,] 644.005196 624.956432 599.608809 572.202484
[3,]   3.098286   3.049878   2.934963   2.774307
> gen.k(sim4.100[[1]],k=3)
         Lag      AIC      BIC     KZIC
result.1   0 630.9793 644.0052 3.098286
result.2   1 601.6004 624.9564 3.049878
result.3   2 566.0042 599.6088 2.934963
result.4   3 528.4324 572.2025 2.774307
> 
> modl4.100 <- lapply(sim4.100,gen.k,kmax=17)
> modl4.100
[[1]]
          Lag      AIC      BIC     KZIC
result.1    0 630.9793 644.0052 3.098286
result.2    1 601.6004 624.9564 3.049878
result.3    2 566.0042 599.6088 2.934963
result.4    3 528.4324 572.2025 2.774307
result.5    4 490.6404 544.4917 2.605846
result.6    5 448.4598 512.3067 2.423737
result.7    6 409.6606 483.4162 2.272102
result.8    7 349.2145 432.7903 1.994404
result.9    8 315.9890 409.2952 1.841265
result.10   9 301.8869 404.8322 1.806394
result.11  10 299.3546 411.8461 1.854882
result.12  11 299.7773 421.7205 1.944706
result.13  12 285.7654 417.0642 1.954411
result.14  13 276.8568 417.4136 2.063374
result.15  14 262.4697 412.1849 2.100275
result.16  15 248.9450 407.7173 2.151266
result.17  16 227.8453 395.5716 2.242711
result.18  17 214.0652 390.6406 2.453610

[[2]]
          Lag      AIC      BIC     KZIC
result.1    0 666.6788 679.7047 3.246444
result.2    1 625.9727 649.3288 3.104969
result.3    2 583.2575 616.8621 2.927077
result.4    3 535.7758 579.5458 2.746051
result.5    4 489.4895 543.3408 2.553696
result.6    5 442.7065 506.5535 2.360224
result.7    6 403.6390 477.3945 2.198956
result.8    7 369.4455 453.0213 2.065669
result.9    8 336.4415 429.7477 1.933943
result.10   9 297.8460 400.7913 1.796347
result.11  10 293.7950 406.2864 1.855416
result.12  11 287.9236 409.8668 1.909785
result.13  12 274.1551 405.4539 1.952774
result.14  13 275.2908 415.8475 2.040562
result.15  14 274.0473 423.7625 2.128396
result.16  15 277.7336 436.5060 2.304325
result.17  16 264.3142 432.0406 2.394414
result.18  17 243.1403 419.7156 2.501474

[[3]]
          Lag      AIC      BIC     KZIC
result.1    0 622.2891 635.3150 2.977135
result.2    1 586.1853 609.5414 2.862314
result.3    2 550.9647 584.5693 2.776420
result.4    3 515.2384 559.0085 2.631275
result.5    4 477.4087 531.2600 2.462840
result.6    5 434.7026 498.5495 2.261912
result.7    6 379.7006 453.4561 2.022047
result.8    7 336.6548 420.2306 1.818486
result.9    8 297.8329 391.1391 1.655632
result.10   9 288.9670 391.9123 1.641847
result.11  10 278.0609 390.5523 1.632327
result.12  11 275.3399 397.2831 1.729083
result.13  12 239.9951 371.2940 1.603540
result.14  13 223.9203 364.4770 1.616020
result.15  14 228.5007 378.2159 1.724599
result.16  15 219.2679 378.0402 1.802334
result.17  16 213.1516 380.8780 2.041282
result.18  17 192.7175 369.2929 2.150348

[[4]]
          Lag      AIC      BIC     KZIC
result.1    0 697.2860 710.3118 3.386451
result.2    1 654.6323 677.9883 3.223962
result.3    2 608.7526 642.3571 3.031240
result.4    3 557.1878 600.9579 2.843809
result.5    4 489.2729 543.1242 2.523573
result.6    5 434.4765 498.3234 2.283247
result.7    6 385.2679 459.0234 2.085204
result.8    7 362.8315 446.4073 2.023202
result.9    8 327.1326 420.4388 1.883215
result.10   9 304.1920 407.1372 1.900778
result.11  10 291.2886 403.7800 1.925123
result.12  11 290.8181 412.7612 1.998844
result.13  12 291.1838 422.4827 2.092461
result.14  13 295.6881 436.2449 2.227924
result.15  14 293.5125 443.2277 2.273261
result.16  15 235.4882 394.2605 2.062089
result.17  16 179.2170 346.9433 1.943272
result.18  17 142.9214 319.4968 2.023655

[[5]]
          Lag      AIC      BIC     KZIC
result.1    0 705.5150 718.5408 3.391605
result.2    1 669.0829 692.4390 3.250774
result.3    2 629.8992 663.5038 3.094914
result.4    3 587.2988 631.0688 2.952335
result.5    4 536.9275 590.7788 2.788346
result.6    5 486.5342 550.3811 2.580625
result.7    6 433.2732 507.0288 2.353894
result.8    7 390.1507 473.7265 2.181932
result.9    8 342.3869 435.6930 1.983055
result.10   9 312.0755 415.0207 1.876163
result.11  10 286.8960 399.3874 1.810652
result.12  11 292.5404 414.4836 1.895571
result.13  12 269.9404 401.2393 1.869896
result.14  13 273.9373 414.4941 1.960493
result.15  14 276.2024 425.9175 2.078733
result.16  15 273.2433 432.0157 2.217213
result.17  16 250.0600 417.7863 2.301367
result.18  17 247.3673 423.9427 2.585666

[[6]]
          Lag      AIC      BIC     KZIC
result.1    0 656.7505 669.7764 3.151033
result.2    1 626.9571 650.3131 3.059594
result.3    2 590.7939 624.3984 2.925068
result.4    3 549.6569 593.4270 2.746188
result.5    4 510.6924 564.5437 2.582392
result.6    5 471.4245 535.2714 2.432191
result.7    6 424.5644 498.3199 2.207409
result.8    7 367.3050 450.8808 1.931767
result.9    8 329.8091 423.1153 1.779164
result.10   9 321.9427 424.8879 1.768473
result.11  10 317.9701 430.4615 1.812490
result.12  11 296.5450 418.4882 1.787738
result.13  12 291.2963 422.5952 1.883399
result.14  13 290.3702 430.9269 2.007430
result.15  14 280.6991 430.4143 2.084314
result.16  15 248.3279 407.1002 2.058492
result.17  16 237.2844 405.0108 2.151737
result.18  17 224.1764 400.7517 2.456069

[[7]]
          Lag      AIC      BIC     KZIC
result.1    0 657.2279 670.2537 3.147905
result.2    1 619.9880 643.3441 3.032445
result.3    2 577.7778 611.3824 2.880512
result.4    3 535.1317 578.9018 2.712065
result.5    4 494.0489 547.9002 2.535519
result.6    5 444.7355 508.5824 2.325985
result.7    6 401.2116 474.9672 2.115136
result.8    7 349.2566 432.8324 1.862724
result.9    8 325.8802 419.1863 1.798416
result.10   9 291.2414 394.1866 1.672292
result.11  10 288.7541 401.2455 1.721352
result.12  11 284.0499 405.9930 1.723949
result.13  12 282.9953 414.2942 1.777601
result.14  13 274.6366 415.1934 1.784429
result.15  14 261.3799 411.0951 1.826630
result.16  15 239.6941 398.4664 1.857702
result.17  16 210.5895 378.3159 2.000079
result.18  17 197.1534 373.7288 2.252538

[[8]]
          Lag      AIC      BIC     KZIC
result.1    0 636.9946 650.0204 3.065110
result.2    1 608.4849 631.8410 3.001277
result.3    2 571.4920 605.0966 2.867719
result.4    3 531.9258 575.6959 2.722141
result.5    4 477.8901 531.7414 2.487673
result.6    5 428.9081 492.7550 2.331073
result.7    6 394.4981 468.2536 2.243547
result.8    7 373.9196 457.4954 2.188978
result.9    8 349.3170 442.6231 2.085580
result.10   9 327.1877 430.1329 2.022502
result.11  10 304.4120 416.9034 1.948209
result.12  11 302.8370 424.7802 1.997420
result.13  12 298.0741 429.3729 2.027289
result.14  13 298.2819 438.8386 2.117119
result.15  14 303.2236 452.9388 2.283665
result.16  15 306.3892 465.1616 2.528045
result.17  16 303.7973 471.5236 2.687257
result.18  17 291.5087 468.0841 2.958493

[[9]]
          Lag      AIC      BIC     KZIC
result.1    0 712.3225 725.3483 3.400940
result.2    1 675.1027 698.4588 3.272880
result.3    2 623.4046 657.0092 3.058580
result.4    3 567.2233 610.9933 2.811186
result.5    4 512.0881 565.9394 2.598578
result.6    5 463.7886 527.6355 2.391778
result.7    6 410.7150 484.4706 2.183623
result.8    7 347.7247 431.3005 1.898965
result.9    8 307.5185 400.8247 1.749490
result.10   9 297.5222 400.4675 1.738130
result.11  10 295.5205 408.0119 1.797708
result.12  11 292.1737 414.1169 1.820872
result.13  12 281.1573 412.4561 1.811923
result.14  13 261.4424 401.9992 1.764442
result.15  14 258.3239 408.0391 1.827401
result.16  15 250.5091 409.2814 2.016885
result.17  16 233.5640 401.2903 2.167972
result.18  17 231.3941 407.9695 2.389114

[[10]]
          Lag      AIC      BIC     KZIC
result.1    0 655.5757 668.6015 3.175762
result.2    1 629.0134 652.3695 3.169911
result.3    2 592.0971 625.7017 3.063457
result.4    3 534.2723 578.0424 2.817897
result.5    4 484.7049 538.5562 2.586077
result.6    5 439.1735 503.0204 2.355747
result.7    6 394.1199 467.8755 2.149231
result.8    7 348.0348 431.6106 1.933290
result.9    8 303.3200 396.6262 1.755047
result.10   9 248.7411 351.6864 1.500299
result.11  10 249.2291 361.7206 1.576680
result.12  11 240.3530 362.2962 1.573458
result.13  12 226.5364 357.8352 1.543973
result.14  13 229.6608 370.2175 1.602185
result.15  14 228.1381 377.8533 1.735046
result.16  15 223.8824 382.6547 1.840754
result.17  16 217.4337 385.1601 1.961027
result.18  17 180.1066 356.6819 2.370667

[[11]]
          Lag      AIC      BIC     KZIC
result.1    0 639.7150 652.7409 3.193882
result.2    1 605.1288 628.4849 3.056286
result.3    2 564.9869 598.5915 2.922401
result.4    3 521.5416 565.3117 2.733234
result.5    4 476.3025 530.1538 2.554451
result.6    5 417.3510 481.1979 2.271156
result.7    6 373.9194 447.6749 2.073237
result.8    7 311.7834 395.3592 1.769897
result.9    8 269.6205 362.9267 1.577778
result.10   9 262.4238 365.3690 1.575840
result.11  10 263.1367 375.6281 1.721951
result.12  11 260.9952 382.9383 1.751005
result.13  12 246.4267 377.7256 1.781105
result.14  13 245.9147 386.4714 1.852543
result.15  14 243.7238 393.4389 1.967854
result.16  15 240.8988 399.6711 2.029729
result.17  16 231.8345 399.5608 2.106916
result.18  17 165.4016 341.9769 2.001241

[[12]]
          Lag      AIC      BIC     KZIC
result.1    0 668.9960 682.0218 3.181568
result.2    1 635.6414 658.9975 3.114441
result.3    2 590.2761 623.8807 3.007016
result.4    3 540.2368 584.0069 2.794587
result.5    4 491.5091 545.3604 2.563450
result.6    5 431.5534 495.4003 2.307819
result.7    6 385.1405 458.8961 2.146609
result.8    7 349.6521 433.2279 1.989542
result.9    8 327.8493 421.1555 1.971698
result.10   9 306.5852 409.5304 1.881507
result.11  10 289.1513 401.6427 1.868963
result.12  11 286.9985 408.9417 1.925660
result.13  12 269.8551 401.1540 1.909228
result.14  13 236.6495 377.2063 1.811148
result.15  14 238.9446 388.6597 1.907849
result.16  15 241.5201 400.2924 2.051520
result.17  16 222.1582 389.8846 2.256480
result.18  17 183.3496 359.9250 2.192049

[[13]]
          Lag      AIC      BIC     KZIC
result.1    0 693.4983 706.5241 3.338221
result.2    1 656.6837 680.0398 3.267236
result.3    2 607.7903 641.3949 3.065981
result.4    3 557.9583 601.7284 2.849753
result.5    4 512.2205 566.0718 2.639301
result.6    5 466.1020 529.9489 2.439243
result.7    6 419.9112 493.6667 2.231342
result.8    7 379.4132 462.9890 2.041242
result.9    8 339.4151 432.7213 1.859217
result.10   9 324.8005 427.7457 1.847586
result.11  10 307.7115 420.2029 1.854849
result.12  11 289.8396 411.7827 1.826505
result.13  12 278.4724 409.7713 1.813573
result.14  13 268.1419 408.6986 1.844800
result.15  14 265.7527 415.4679 1.971301
result.16  15 260.8090 419.5813 2.094868
result.17  16 234.8577 402.5840 2.198735
result.18  17 202.6667 379.2421 2.294287

[[14]]
          Lag      AIC      BIC     KZIC
result.1    0 666.3769 679.4028 3.210260
result.2    1 636.3004 659.6565 3.136361
result.3    2 593.8428 627.4473 2.972897
result.4    3 545.8399 589.6099 2.771708
result.5    4 502.3718 556.2231 2.596974
result.6    5 461.8240 525.6709 2.442544
result.7    6 412.6117 486.3673 2.213015
result.8    7 371.5081 455.0838 2.027366
result.9    8 344.5896 437.8958 1.900736
result.10   9 330.5045 433.4498 1.877361
result.11  10 305.5393 418.0307 1.810648
result.12  11 303.4484 425.3915 1.884948
result.13  12 301.9866 433.2855 1.986893
result.14  13 302.7241 443.2808 2.087195
result.15  14 261.9023 411.6175 1.963867
result.16  15 252.5631 411.3355 2.040388
result.17  16 245.2543 412.9807 2.163854
result.18  17 203.5533 380.1287 2.195464

[[15]]
          Lag      AIC      BIC     KZIC
result.1    0 634.8652 647.8911 3.007554
result.2    1 600.7048 624.0609 2.911645
result.3    2 560.6090 594.2136 2.767362
result.4    3 527.1565 570.9265 2.640477
result.5    4 476.1072 529.9585 2.445519
result.6    5 436.4150 500.2619 2.266180
result.7    6 396.1586 469.9142 2.112756
result.8    7 364.4752 448.0509 1.985871
result.9    8 329.1773 422.4835 1.856054
result.10   9 297.9716 400.9169 1.754381
result.11  10 293.9440 406.4354 1.778599
result.12  11 294.1628 416.1059 1.884986
result.13  12 287.2321 418.5310 1.945151
result.14  13 279.1078 419.6646 2.006453
result.15  14 268.5021 418.2173 2.165042
result.16  15 263.7623 422.5346 2.308625
result.17  16 224.0538 391.7802 2.240639
result.18  17 192.7947 369.3701 2.380334

[[16]]
          Lag      AIC      BIC     KZIC
result.1    0 691.1208 704.1467 3.416761
result.2    1 652.8383 676.1944 3.255097
result.3    2 615.2143 648.8189 3.124239
result.4    3 568.7444 612.5145 2.945969
result.5    4 514.4239 568.2753 2.719753
result.6    5 468.4103 532.2573 2.533186
result.7    6 419.2016 492.9571 2.317310
result.8    7 375.2210 458.7968 2.137648
result.9    8 349.1328 442.4389 2.033861
result.10   9 325.7388 428.6840 1.943787
result.11  10 325.9379 438.4293 2.025863
result.12  11 325.5320 447.4752 2.106288
result.13  12 324.8561 456.1550 2.202390
result.14  13 299.5764 440.1332 2.143769
result.15  14 288.7442 438.4594 2.154701
result.16  15 277.8487 436.6210 2.244903
result.17  16 284.5345 452.2608 2.518936
result.18  17 211.8957 388.4711 2.484387

[[17]]
          Lag      AIC      BIC     KZIC
result.1    0 643.6471 656.6729 3.114760
result.2    1 615.1781 638.5342 3.014379
result.3    2 580.4541 614.0586 2.885978
result.4    3 535.4682 579.2383 2.677960
result.5    4 489.6906 543.5419 2.477893
result.6    5 450.6055 514.4525 2.310852
result.7    6 413.2565 487.0121 2.155899
result.8    7 369.5357 453.1114 1.960860
result.9    8 327.6567 420.9628 1.808646
result.10   9 285.8475 388.7927 1.654085
result.11  10 245.6763 358.1678 1.455461
result.12  11 250.7397 372.6829 1.529225
result.13  12 244.7978 376.0966 1.578481
result.14  13 249.1396 389.6964 1.668993
result.15  14 249.3537 399.0689 1.756377
result.16  15 249.4070 408.1793 1.955215
result.17  16 233.2164 400.9428 2.067955
result.18  17 189.5987 366.1741 2.082309

[[18]]
          Lag      AIC      BIC     KZIC
result.1    0 655.1773 668.2032 3.179332
result.2    1 619.0430 642.3991 3.097268
result.3    2 570.0637 603.6683 2.882520
result.4    3 520.0300 563.8001 2.689192
result.5    4 486.4855 540.3368 2.578614
result.6    5 434.8302 498.6771 2.338904
result.7    6 403.9217 477.6772 2.224966
result.8    7 355.4143 438.9901 2.030241
result.9    8 317.7353 411.0415 1.899827
result.10   9 300.1989 403.1441 1.821750
result.11  10 295.9287 408.4202 1.911208
result.12  11 293.9755 415.9187 1.994941
result.13  12 294.2097 425.5086 2.058689
result.14  13 285.5959 426.1526 2.064058
result.15  14 281.7331 431.4483 2.171163
result.16  15 271.2353 430.0076 2.262364
result.17  16 214.7144 382.4407 2.144026
result.18  17 202.5394 379.1147 2.284170

[[19]]
          Lag      AIC      BIC     KZIC
result.1    0 674.1318 687.1577 3.257783
result.2    1 638.9752 662.3313 3.126323
result.3    2 594.1613 627.7659 2.950994
result.4    3 536.3062 580.0762 2.698209
result.5    4 476.1600 530.0113 2.425920
result.6    5 442.2379 506.0848 2.330629
result.7    6 400.0475 473.8030 2.177863
result.8    7 355.4583 439.0341 1.967618
result.9    8 339.5527 432.8588 1.909299
result.10   9 296.9461 399.8914 1.739862
result.11  10 242.7640 355.2554 1.491440
result.12  11 233.7134 355.6566 1.471084
result.13  12 239.0032 370.3021 1.592371
result.14  13 223.4684 364.0252 1.610930
result.15  14 213.4632 363.1783 1.672434
result.16  15 167.6315 326.4039 1.558451
result.17  16 164.9848 332.7112 1.787543
result.18  17 143.0401 319.6154 1.897592

[[20]]
          Lag      AIC      BIC     KZIC
result.1    0 654.4720 667.4979 3.145008
result.2    1 612.1374 635.4935 2.998091
result.3    2 563.0173 596.6218 2.827557
result.4    3 516.2541 560.0241 2.626379
result.5    4 474.8519 528.7032 2.461750
result.6    5 436.2006 500.0475 2.295356
result.7    6 381.2088 454.9643 2.029549
result.8    7 330.6776 414.2534 1.797248
result.9    8 289.3718 382.6780 1.616316
result.10   9 266.0656 369.0108 1.515616
result.11  10 257.0464 369.5379 1.507351
result.12  11 258.8498 380.7930 1.592040
result.13  12 258.1457 389.4446 1.677569
result.14  13 257.9063 398.4631 1.757551
result.15  14 256.5782 406.2933 1.880024
result.16  15 222.7819 381.5542 1.847201
result.17  16 193.4555 361.1819 1.839324
result.18  17 183.4515 360.0269 1.984828

[[21]]
          Lag      AIC      BIC     KZIC
result.1    0 643.4420 656.4678 3.109774
result.2    1 614.1878 637.5439 3.012282
result.3    2 579.1244 612.7290 2.863469
result.4    3 538.8485 582.6186 2.683265
result.5    4 505.2685 559.1198 2.548322
result.6    5 455.7498 519.5968 2.356168
result.7    6 404.9256 478.6811 2.163989
result.8    7 369.0237 452.5995 2.021323
result.9    8 334.5572 427.8634 1.864001
result.10   9 306.9619 409.9072 1.760479
result.11  10 294.9266 407.4180 1.730614
result.12  11 294.9877 416.9309 1.790615
result.13  12 286.6460 417.9449 1.847505
result.14  13 282.0380 422.5948 1.892654
result.15  14 259.9090 409.6242 1.835860
result.16  15 241.3744 400.1467 1.877672
result.17  16 223.3330 391.0594 1.950620
result.18  17 228.0281 404.6035 2.276919

[[22]]
          Lag      AIC      BIC     KZIC
result.1    0 649.1339 662.1597 3.098516
result.2    1 607.2367 630.5928 2.959585
result.3    2 574.9085 608.5130 2.832416
result.4    3 532.4378 576.2079 2.677746
result.5    4 495.5071 549.3584 2.540081
result.6    5 456.3383 520.1852 2.376838
result.7    6 412.4896 486.2452 2.173775
result.8    7 367.9827 451.5585 1.988366
result.9    8 350.3980 443.7042 1.956161
result.10   9 311.5806 414.5258 1.818349
result.11  10 296.4435 408.9349 1.807890
result.12  11 295.9074 417.8506 1.881955
result.13  12 292.3591 423.6580 1.961385
result.14  13 284.3991 424.9558 2.020951
result.15  14 274.0965 423.8117 2.051561
result.16  15 276.9864 435.7587 2.180815
result.17  16 265.5225 433.2489 2.308691
result.18  17 211.6598 388.2352 2.257615

[[23]]
          Lag      AIC      BIC     KZIC
result.1    0 638.0254 651.0512 3.076807
result.2    1 611.8339 635.1900 2.982764
result.3    2 570.8908 604.4954 2.808003
result.4    3 525.2061 568.9762 2.618692
result.5    4 475.0383 528.8896 2.410122
result.6    5 424.9316 488.7785 2.211882
result.7    6 378.3684 452.1240 2.009099
result.8    7 342.4030 425.9788 1.849142
result.9    8 310.6823 403.9884 1.727475
result.10   9 299.0663 402.0116 1.751270
result.11  10 285.9938 398.4853 1.759041
result.12  11 277.4839 399.4271 1.778967
result.13  12 248.1507 379.4496 1.662290
result.14  13 245.3867 385.9435 1.744302
result.15  14 242.4445 392.1597 1.819798
result.16  15 206.2252 364.9976 1.851701
result.17  16 190.7232 358.4496 1.979710
result.18  17 159.2602 335.8356 2.060157

[[24]]
          Lag      AIC      BIC     KZIC
result.1    0 614.3818 627.4076 2.965393
result.2    1 586.2419 609.5980 2.888530
result.3    2 551.7827 585.3873 2.764693
result.4    3 516.0032 559.7733 2.630511
result.5    4 480.3613 534.2126 2.502006
result.6    5 437.0370 500.8839 2.341783
result.7    6 387.7770 461.5326 2.114758
result.8    7 336.7969 420.3727 1.870832
result.9    8 299.6195 392.9257 1.707077
result.10   9 253.6675 356.6128 1.482031
result.11  10 250.2308 362.7222 1.535543
result.12  11 247.5757 369.5189 1.596225
result.13  12 248.9677 380.2666 1.645181
result.14  13 250.4916 391.0483 1.761837
result.15  14 248.6383 398.3535 1.904395
result.16  15 231.2233 389.9956 1.968777
result.17  16 202.9807 370.7071 2.042044
result.18  17 154.6324 331.2077 1.972349

[[25]]
          Lag      AIC      BIC     KZIC
result.1    0 632.6984 645.7242 3.024992
result.2    1 603.1048 626.4608 2.949710
result.3    2 570.9101 604.5147 2.821521
result.4    3 528.8080 572.5780 2.708575
result.5    4 476.7628 530.6141 2.491228
result.6    5 435.4632 499.3101 2.360443
result.7    6 396.8599 470.6154 2.190493
result.8    7 360.7237 444.2995 2.032556
result.9    8 335.5692 428.8753 1.938360
result.10   9 314.7563 417.7016 1.893084
result.11  10 289.6197 402.1112 1.811482
result.12  11 278.7242 400.6674 1.824793
result.13  12 264.6524 395.9513 1.861711
result.14  13 248.5908 389.1475 1.864732
result.15  14 244.3202 394.0354 1.921719
result.16  15 236.4424 395.2147 2.074074
result.17  16 215.0407 382.7670 2.148901
result.18  17 205.0667 381.6420 2.362204

[[26]]
          Lag      AIC      BIC     KZIC
result.1    0 664.2045 677.2303 3.256479
result.2    1 628.0374 651.3935 3.104944
result.3    2 589.6089 623.2135 2.952142
result.4    3 551.5383 595.3084 2.785764
result.5    4 506.4019 560.2532 2.598611
result.6    5 466.9833 530.8302 2.451696
result.7    6 431.9973 505.7528 2.329109
result.8    7 377.2120 460.7878 2.116727
result.9    8 342.0614 435.3676 2.006627
result.10   9 315.6074 418.5527 1.934766
result.11  10 311.3809 423.8723 2.006172
result.12  11 294.9776 416.9208 1.987028
result.13  12 295.2669 426.5657 2.101923
result.14  13 291.3116 431.8684 2.166382
result.15  14 289.2805 438.9957 2.244476
result.16  15 288.7606 447.5329 2.400304
result.17  16 280.9925 448.7189 2.618566
result.18  17 252.7708 429.3461 2.728163

[[27]]
          Lag      AIC      BIC     KZIC
result.1    0 705.2937 718.3196 3.481236
result.2    1 664.0564 687.4124 3.320272
result.3    2 615.4859 649.0905 3.105735
result.4    3 566.9330 610.7031 2.909296
result.5    4 516.9257 570.7771 2.694935
result.6    5 467.0194 530.8664 2.457210
result.7    6 419.3094 493.0650 2.248996
result.8    7 369.8205 453.3963 2.099226
result.9    8 317.3686 410.6748 1.921753
result.10   9 300.4281 403.3733 1.934451
result.11  10 288.1733 400.6647 2.010591
result.12  11 276.7747 398.7178 2.021271
result.13  12 260.2254 391.5243 2.065598
result.14  13 262.5793 403.1361 2.168675
result.15  14 242.5363 392.2515 2.176004
result.16  15 225.9861 384.7584 2.192082
result.17  16 215.4097 383.1360 2.374681
result.18  17 192.5721 369.1475 2.529615

[[28]]
          Lag      AIC      BIC     KZIC
result.1    0 657.1279 670.1538 3.106299
result.2    1 627.3421 650.6982 3.055027
result.3    2 587.0270 620.6316 2.910444
result.4    3 543.9365 587.7066 2.739064
result.5    4 506.2827 560.1340 2.609696
result.6    5 452.2470 516.0939 2.377871
result.7    6 407.9830 481.7386 2.190020
result.8    7 365.0885 448.6643 1.992690
result.9    8 340.8720 434.1782 1.925706
result.10   9 282.4655 385.4108 1.649856
result.11  10 258.6944 371.1858 1.593594
result.12  11 240.7690 362.7122 1.567882
result.13  12 242.2953 373.5941 1.632125
result.14  13 241.3811 381.9378 1.722110
result.15  14 244.1668 393.8820 1.883159
result.16  15 238.9403 397.7126 2.127361
result.17  16 231.0005 398.7269 2.245958
result.18  17 181.9611 358.5365 2.397756

[[29]]
          Lag      AIC      BIC     KZIC
result.1    0 662.9771 676.0029 3.259060
result.2    1 627.5520 650.9081 3.140229
result.3    2 590.2252 623.8298 2.975942
result.4    3 556.6666 600.4367 2.831847
result.5    4 514.3090 568.1603 2.657706
result.6    5 467.8361 531.6830 2.459852
result.7    6 429.0967 502.8522 2.280070
result.8    7 395.0698 478.6456 2.162986
result.9    8 352.2023 445.5085 1.986363
result.10   9 309.8329 412.7781 1.800806
result.11  10 296.8079 409.2994 1.835188
result.12  11 278.7345 400.6777 1.819478
result.13  12 258.6764 389.9752 1.783904
result.14  13 248.0900 388.6468 1.786707
result.15  14 235.8216 385.5367 1.867277
result.16  15 220.3843 379.1567 1.947512
result.17  16 217.0001 384.7265 2.103766
result.18  17 209.2766 385.8520 2.304965

[[30]]
          Lag      AIC      BIC     KZIC
result.1    0 669.2729 682.2988 3.225490
result.2    1 639.5759 662.9320 3.156479
result.3    2 599.8966 633.5011 3.012108
result.4    3 561.9766 605.7467 2.903671
result.5    4 518.8819 572.7332 2.728838
result.6    5 473.2053 537.0522 2.531645
result.7    6 424.7101 498.4656 2.328137
result.8    7 372.4508 456.0266 2.092257
result.9    8 331.5170 424.8232 1.919369
result.10   9 301.4193 404.3645 1.793835
result.11  10 290.1198 402.6113 1.763623
result.12  11 275.9038 397.8469 1.733491
result.13  12 267.6917 398.9905 1.755457
result.14  13 264.7202 405.2770 1.801993
result.15  14 264.5881 414.3033 1.908005
result.16  15 259.7966 418.5690 2.029669
result.17  16 248.1356 415.8620 2.303164
result.18  17 234.0396 410.6149 2.557362

[[31]]
          Lag      AIC      BIC     KZIC
result.1    0 619.5521 632.5779 2.985295
result.2    1 588.6598 612.0158 2.902038
result.3    2 552.2219 585.8264 2.753247
result.4    3 515.0245 558.7946 2.595385
result.5    4 471.8160 525.6673 2.416958
result.6    5 435.3669 499.2138 2.241513
result.7    6 396.8460 470.6015 2.071742
result.8    7 362.4104 445.9862 1.918150
result.9    8 347.2210 440.5271 1.889022
result.10   9 332.6105 435.5557 1.877196
result.11  10 315.0094 427.5008 1.881506
result.12  11 303.6996 425.6428 1.899445
result.13  12 295.6403 426.9392 1.933248
result.14  13 276.6601 417.2169 1.894630
result.15  14 271.6707 421.3859 2.006780
result.16  15 236.5306 395.3030 2.005147
result.17  16 234.4454 402.1717 2.197902
result.18  17 218.5678 395.1432 2.356111

[[32]]
          Lag      AIC      BIC     KZIC
result.1    0 663.2312 676.2570 3.169929
result.2    1 633.3305 656.6866 3.068928
result.3    2 592.9777 626.5822 2.913571
result.4    3 548.1814 591.9515 2.739312
result.5    4 493.8374 547.6888 2.515514
result.6    5 451.1023 514.9492 2.344906
result.7    6 407.1855 480.9410 2.166771
result.8    7 372.8420 456.4178 2.024025
result.9    8 338.5447 431.8509 1.933766
result.10   9 313.9583 416.9036 1.842317
result.11  10 312.9703 425.4618 1.873904
result.12  11 304.5246 426.4678 1.885553
result.13  12 286.8974 418.1962 1.865807
result.14  13 281.4866 422.0434 1.952734
result.15  14 275.5173 425.2324 2.091406
result.16  15 275.8268 434.5991 2.249010
result.17  16 248.3999 416.1263 2.231835
result.18  17 229.0151 405.5904 2.360612

[[33]]
          Lag      AIC      BIC     KZIC
result.1    0 597.2139 610.2397 2.919488
result.2    1 568.1268 591.4828 2.852170
result.3    2 532.4273 566.0319 2.725332
result.4    3 481.0700 524.8401 2.498506
result.5    4 441.8219 495.6732 2.331422
result.6    5 405.3160 469.1629 2.171985
result.7    6 371.5297 445.2852 2.009629
result.8    7 333.1042 416.6799 1.844849
result.9    8 322.8887 416.1948 1.846992
result.10   9 303.5287 406.4739 1.794017
result.11  10 293.5816 406.0730 1.852470
result.12  11 294.2578 416.2010 1.938133
result.13  12 273.4562 404.7551 1.933537
result.14  13 253.9312 394.4880 1.924180
result.15  14 255.4259 405.1411 2.082877
result.16  15 260.3016 419.0740 2.220347
result.17  16 248.0980 415.8244 2.345709
result.18  17 185.9126 362.4880 2.274402

[[34]]
          Lag      AIC      BIC     KZIC
result.1    0 706.9839 720.0098 3.401615
result.2    1 663.7369 687.0930 3.271662
result.3    2 619.8777 653.4823 3.080862
result.4    3 570.3097 614.0798 2.864802
result.5    4 509.9130 563.7643 2.607847
result.6    5 455.1239 518.9708 2.356787
result.7    6 419.9287 493.6842 2.251973
result.8    7 377.6807 461.2565 2.080562
result.9    8 356.9504 450.2566 2.004971
result.10   9 323.1906 426.1359 1.879897
result.11  10 294.5868 407.0782 1.837398
result.12  11 268.4113 390.3545 1.734334
result.13  12 272.0022 403.3011 1.869701
result.14  13 266.9387 407.4955 1.979370
result.15  14 245.3905 395.1057 1.986628
result.16  15 230.9586 389.7309 2.044684
result.17  16 219.6730 387.3994 2.196866
result.18  17 182.1836 358.7589 2.181606

[[35]]
          Lag      AIC      BIC     KZIC
result.1    0 646.9810 660.0068 3.062317
result.2    1 611.2856 634.6417 2.992410
result.3    2 576.4894 610.0939 2.865054
result.4    3 536.9135 580.6836 2.691559
result.5    4 486.0934 539.9447 2.475889
result.6    5 439.8574 503.7044 2.282325
result.7    6 404.9804 478.7360 2.152569
result.8    7 346.6687 430.2445 1.895047
result.9    8 329.2054 422.5116 1.830776
result.10   9 297.8440 400.7893 1.697264
result.11  10 259.1234 371.6148 1.512087
result.12  11 255.6161 377.5593 1.604039
result.13  12 245.4845 376.7833 1.611474
result.14  13 244.9476 385.5043 1.718201
result.15  14 238.5841 388.2993 1.823066
result.16  15 238.4373 397.2096 1.997584
result.17  16 236.0463 403.7727 2.210941
result.18  17 210.9453 387.5207 2.368047

[[36]]
          Lag      AIC      BIC     KZIC
result.1    0 713.2252 726.2511 3.446489
result.2    1 678.5908 701.9469 3.340947
result.3    2 638.4067 672.0113 3.191153
result.4    3 592.2007 635.9708 2.973414
result.5    4 544.4496 598.3009 2.757185
result.6    5 488.1501 551.9971 2.484511
result.7    6 425.9994 499.7549 2.210484
result.8    7 389.9962 473.5720 2.063134
result.9    8 350.9949 444.3011 1.973567
result.10   9 331.0404 433.9856 1.906751
result.11  10 302.2714 414.7628 1.778811
result.12  11 295.3259 417.2691 1.770732
result.13  12 294.5166 425.8155 1.838209
result.14  13 289.4743 430.0311 1.870764
result.15  14 272.9547 422.6699 1.994057
result.16  15 263.2928 422.0651 2.149845
result.17  16 245.2492 412.9755 2.229339
result.18  17 234.1944 410.7698 2.399773

[[37]]
          Lag      AIC      BIC     KZIC
result.1    0 656.8073 669.8331 3.170517
result.2    1 618.4377 641.7938 3.015989
result.3    2 581.8216 615.4262 2.889837
result.4    3 540.4272 584.1973 2.708101
result.5    4 498.0508 551.9021 2.521345
result.6    5 446.0994 509.9463 2.275074
result.7    6 393.7799 467.5354 2.049962
result.8    7 321.4258 405.0016 1.735157
result.9    8 301.6393 394.9455 1.690103
result.10   9 290.6435 393.5887 1.675996
result.11  10 283.3237 395.8152 1.691324
result.12  11 286.9597 408.9029 1.761410
result.13  12 274.3564 405.6553 1.803897
result.14  13 279.8424 420.3992 2.022958
result.15  14 269.0401 418.7553 2.048595
result.16  15 249.8773 408.6497 2.102815
result.17  16 239.9325 407.6588 2.259081
result.18  17 216.3708 392.9462 2.395360

[[38]]
          Lag      AIC      BIC     KZIC
result.1    0 662.0134 675.0393 3.215413
result.2    1 623.7287 647.0848 3.118208
result.3    2 583.1647 616.7693 2.941027
result.4    3 544.4132 588.1833 2.788543
result.5    4 504.3302 558.1816 2.619049
result.6    5 455.0377 518.8846 2.372016
result.7    6 402.4447 476.2003 2.137071
result.8    7 348.4580 432.0337 1.896880
result.9    8 314.9888 408.2949 1.743128
result.10   9 292.3579 395.3031 1.685196
result.11  10 286.0850 398.5764 1.730581
result.12  11 283.5477 405.4909 1.797875
result.13  12 261.4877 392.7865 1.719087
result.14  13 250.9634 391.5202 1.739345
result.15  14 237.9474 387.6626 1.798454
result.16  15 227.2319 386.0042 1.854941
result.17  16 224.8928 392.6192 2.097474
result.18  17 201.3586 377.9339 2.415248

[[39]]
          Lag      AIC      BIC     KZIC
result.1    0 620.2463 633.2722 2.950207
result.2    1 588.9797 612.3357 2.817037
result.3    2 545.3668 578.9714 2.643444
result.4    3 506.4271 550.1972 2.499044
result.5    4 462.7530 516.6043 2.334759
result.6    5 433.5884 497.4353 2.208961
result.7    6 408.0464 481.8019 2.141917
result.8    7 374.8915 458.4672 1.984771
result.9    8 349.7522 443.0584 1.886277
result.10   9 323.4973 426.4425 1.762712
result.11  10 313.7124 426.2038 1.766972
result.12  11 290.5040 412.4472 1.690885
result.13  12 295.7809 427.0798 1.820819
result.14  13 298.3595 438.9163 1.910234
result.15  14 293.3713 443.0865 1.987363
result.16  15 276.2625 435.0348 2.052891
result.17  16 243.7318 411.4582 2.034126
result.18  17 234.9516 411.5270 2.236659

[[40]]
          Lag      AIC      BIC     KZIC
result.1    0 649.4998 662.5257 3.182615
result.2    1 615.2017 638.5578 3.086214
result.3    2 577.2321 610.8367 2.941757
result.4    3 545.8905 589.6606 2.811586
result.5    4 497.5291 551.3805 2.612821
result.6    5 453.6601 517.5071 2.441529
result.7    6 402.8402 476.5957 2.208044
result.8    7 374.9567 458.5324 2.102460
result.9    8 337.0652 430.3713 1.978642
result.10   9 319.7978 422.7430 1.935895
result.11  10 308.4942 420.9857 1.928145
result.12  11 299.1743 421.1175 1.942471
result.13  12 275.2236 406.5225 1.877808
result.14  13 271.9968 412.5536 1.945429
result.15  14 258.3190 408.0342 2.088410
result.16  15 261.4074 420.1797 2.234614
result.17  16 172.7613 340.4876 1.951632
result.18  17 157.8582 334.4335 2.089831

[[41]]
          Lag      AIC      BIC     KZIC
result.1    0 666.4708 679.4966 3.188899
result.2    1 632.1038 655.4599 3.049813
result.3    2 597.7596 631.3641 2.917724
result.4    3 556.7548 600.5249 2.766117
result.5    4 504.8448 558.6961 2.538366
result.6    5 454.5642 518.4111 2.308122
result.7    6 406.6566 480.4122 2.110923
result.8    7 366.2117 449.7875 1.947239
result.9    8 319.2792 412.5854 1.740089
result.10   9 306.1413 409.0865 1.730315
result.11  10 299.1251 411.6165 1.775311
result.12  11 298.4467 420.3899 1.852429
result.13  12 299.0241 430.3230 1.966986
result.14  13 298.0939 438.6506 2.056237
result.15  14 302.9840 452.6992 2.257873
result.16  15 287.7475 446.5198 2.296783
result.17  16 276.5520 444.2783 2.470717
result.18  17 239.4078 415.9832 2.513477

[[42]]
          Lag      AIC      BIC     KZIC
result.1    0 655.6169 668.6428 3.212026
result.2    1 621.0700 644.4261 3.082101
result.3    2 582.1090 615.7136 2.922965
result.4    3 538.2815 582.0516 2.791196
result.5    4 498.5077 552.3590 2.616516
result.6    5 452.0888 515.9357 2.391782
result.7    6 404.7831 478.5386 2.158301
result.8    7 371.4691 455.0449 2.003801
result.9    8 348.7265 442.0327 1.930193
result.10   9 327.8153 430.7606 1.845478
result.11  10 278.6674 391.1588 1.705882
result.12  11 269.5801 391.5233 1.778137
result.13  12 273.7864 405.0853 1.882177
result.14  13 263.1606 403.7173 1.906564
result.15  14 251.1404 400.8556 1.962340
result.16  15 235.3827 394.1551 2.021581
result.17  16 226.3354 394.0618 2.163108
result.18  17 209.8518 386.4272 2.271321

[[43]]
          Lag      AIC      BIC     KZIC
result.1    0 681.6418 694.6676 3.327938
result.2    1 641.2616 664.6177 3.194843
result.3    2 603.6505 637.2550 3.084654
result.4    3 554.1770 597.9471 2.915719
result.5    4 497.7234 551.5747 2.689624
result.6    5 445.2392 509.0861 2.469869
result.7    6 401.9773 475.7328 2.275121
result.8    7 362.0900 445.6658 2.093911
result.9    8 326.6371 419.9433 1.927316
result.10   9 315.2154 418.1606 1.883504
result.11  10 306.8745 419.3659 1.865284
result.12  11 296.6396 418.5828 1.878866
result.13  12 291.3480 422.6468 1.998293
result.14  13 278.8208 419.3776 2.047331
result.15  14 282.7490 432.4642 2.198024
result.16  15 261.3001 420.0724 2.176488
result.17  16 233.9241 401.6504 2.129657
result.18  17 226.8635 403.4389 2.553861

[[44]]
          Lag      AIC      BIC     KZIC
result.1    0 682.8127 695.8386 3.287622
result.2    1 647.7338 671.0899 3.157101
result.3    2 602.0551 635.6597 3.011066
result.4    3 553.8775 597.6476 2.811717
result.5    4 507.8447 561.6960 2.605112
result.6    5 458.9318 522.7787 2.394590
result.7    6 415.5568 489.3123 2.187513
result.8    7 379.3612 462.9370 2.027048
result.9    8 312.1464 405.4526 1.746912
result.10   9 289.9040 392.8493 1.703728
result.11  10 281.6653 394.1567 1.751800
result.12  11 281.0809 403.0241 1.843899
result.13  12 280.7635 412.0624 1.886557
result.14  13 270.0576 410.6143 1.890197
result.15  14 269.0459 418.7611 1.965640
result.16  15 265.0632 423.8355 2.122304
result.17  16 246.4912 414.2175 2.197937
result.18  17 241.8994 418.4747 2.677787

[[45]]
          Lag      AIC      BIC     KZIC
result.1    0 711.7206 724.7464 3.469490
result.2    1 673.1745 696.5305 3.361998
result.3    2 637.6094 671.2140 3.240984
result.4    3 592.3347 636.1048 3.073400
result.5    4 548.9438 602.7951 2.910549
result.6    5 497.9362 561.7831 2.690182
result.7    6 440.3062 514.0618 2.419362
result.8    7 391.8342 475.4100 2.198617
result.9    8 357.7554 451.0616 2.059826
result.10   9 330.0589 433.0042 1.948654
result.11  10 319.8629 432.3544 1.928175
result.12  11 306.1625 428.1057 1.928668
result.13  12 281.5129 412.8118 1.855016
result.14  13 266.8348 407.3916 1.856545
result.15  14 258.1187 407.8339 1.891646
result.16  15 261.2845 420.0569 1.990998
result.17  16 259.5892 427.3155 2.215087
result.18  17 248.3338 424.9092 2.475411

[[46]]
          Lag      AIC      BIC     KZIC
result.1    0 707.7861 720.8119 3.453264
result.2    1 665.8632 689.2192 3.329659
result.3    2 619.8326 653.4372 3.149652
result.4    3 572.2956 616.0657 2.927328
result.5    4 528.4556 582.3069 2.745995
result.6    5 476.9470 540.7939 2.521759
result.7    6 409.3802 483.1358 2.203990
result.8    7 383.9215 467.4973 2.145726
result.9    8 342.8084 436.1146 1.972179
result.10   9 315.6050 418.5502 1.853624
result.11  10 307.8180 420.3094 1.861730
result.12  11 309.0517 430.9949 1.975406
result.13  12 299.9148 431.2136 1.979352
result.14  13 286.1819 426.7386 1.961544
result.15  14 289.8863 439.6015 2.085642
result.16  15 292.3222 451.0945 2.239373
result.17  16 276.0182 443.7445 2.361032
result.18  17 250.2018 426.7772 2.468683

[[47]]
          Lag      AIC      BIC     KZIC
result.1    0 675.3666 688.3925 3.281726
result.2    1 644.3533 667.7094 3.200706
result.3    2 605.3086 638.9132 3.064738
result.4    3 564.5605 608.3306 2.940157
result.5    4 521.7683 575.6197 2.775895
result.6    5 464.4905 528.3374 2.520960
result.7    6 404.5742 478.3298 2.268306
result.8    7 369.6795 453.2553 2.135837
result.9    8 336.5564 429.8626 2.031847
result.10   9 303.7002 406.6455 1.895529
result.11  10 298.0757 410.5671 1.904080
result.12  11 282.9834 404.9266 1.867153
result.13  12 278.2477 409.5465 1.904619
result.14  13 261.8015 402.3583 1.866311
result.15  14 228.6943 378.4095 1.778649
result.16  15 226.3858 385.1581 1.867566
result.17  16 179.6784 347.4047 1.802694
result.18  17 183.0542 359.6296 2.110819

[[48]]
          Lag      AIC      BIC     KZIC
result.1    0 655.4138 668.4397 3.194054
result.2    1 619.3456 642.7016 3.086640
result.3    2 576.7631 610.3676 2.948270
result.4    3 535.0660 578.8361 2.791390
result.5    4 490.7099 544.5612 2.590549
result.6    5 444.8898 508.7367 2.375989
result.7    6 402.7545 476.5101 2.182468
result.8    7 368.6688 452.2446 2.053677
result.9    8 307.6640 400.9702 1.769952
result.10   9 285.0500 387.9953 1.707180
result.11  10 281.5278 394.0193 1.732414
result.12  11 277.9474 399.8906 1.770243
result.13  12 261.0276 392.3264 1.740798
result.14  13 248.1302 388.6869 1.735847
result.15  14 228.9334 378.6486 1.710559
result.16  15 233.0356 391.8079 2.023532
result.17  16 180.6033 348.3297 2.119364
result.18  17 150.2928 326.8681 2.129529

[[49]]
          Lag      AIC      BIC     KZIC
result.1    0 656.7630 669.7888 3.125818
result.2    1 614.0488 637.4049 2.966292
result.3    2 571.1753 604.7799 2.786635
result.4    3 531.0176 574.7877 2.633006
result.5    4 480.9528 534.8042 2.404927
result.6    5 438.4033 502.2503 2.269744
result.7    6 400.6577 474.4133 2.103380
result.8    7 349.6244 433.2002 1.866261
result.9    8 308.8698 402.1760 1.682155
result.10   9 281.7847 384.7299 1.634419
result.11  10 275.0102 387.5017 1.706959
result.12  11 273.0784 395.0216 1.788802
result.13  12 276.5322 407.8310 1.919643
result.14  13 272.5989 413.1557 2.045632
result.15  14 249.3510 399.0662 2.085766
result.16  15 231.7147 390.4871 2.119071
result.17  16 233.1595 400.8859 2.395880
result.18  17 226.5315 403.1069 2.623258

[[50]]
          Lag      AIC      BIC     KZIC
result.1    0 657.0263 670.0521 3.108560
result.2    1 620.5888 643.9449 3.045323
result.3    2 587.2718 620.8764 2.923588
result.4    3 550.1621 593.9321 2.764751
result.5    4 507.4970 561.3483 2.606456
result.6    5 469.0506 532.8975 2.431629
result.7    6 431.7085 505.4640 2.254676
result.8    7 372.9221 456.4979 1.993143
result.9    8 337.6498 430.9560 1.849767
result.10   9 322.8184 425.7637 1.855071
result.11  10 322.5743 435.0657 1.974260
result.12  11 323.7198 445.6630 2.069392
result.13  12 313.9912 445.2901 2.104174
result.14  13 316.4809 457.0377 2.254127
result.15  14 308.8457 458.5609 2.337836
result.16  15 296.8776 455.6500 2.430840
result.17  16 291.8501 459.5764 2.534900
result.18  17 287.7274 464.3028 2.834222

[[51]]
          Lag      AIC      BIC     KZIC
result.1    0 653.3006 666.3265 3.168824
result.2    1 613.7950 637.1511 3.047257
result.3    2 575.0387 608.6433 2.909800
result.4    3 530.9682 574.7383 2.719702
result.5    4 493.6499 547.5012 2.545757
result.6    5 436.6706 500.5176 2.267369
result.7    6 395.2890 469.0445 2.088980
result.8    7 359.1607 442.7365 1.944364
result.9    8 340.9026 434.2088 1.872372
result.10   9 315.2958 418.2411 1.783252
result.11  10 301.3521 413.8435 1.741701
result.12  11 284.5630 406.5062 1.713595
result.13  12 267.9576 399.2564 1.677702
result.14  13 257.7023 398.2590 1.746838
result.15  14 253.4773 403.1925 1.809002
result.16  15 252.1884 410.9607 1.907399
result.17  16 254.1669 421.8933 2.142332
result.18  17 238.7459 415.3212 2.293057

[[52]]
          Lag      AIC      BIC     KZIC
result.1    0 665.9603 678.9861 3.237379
result.2    1 636.3506 659.7067 3.146873
result.3    2 599.1155 632.7201 2.976416
result.4    3 562.3292 606.0993 2.855144
result.5    4 515.4031 569.2544 2.667209
result.6    5 472.8660 536.7129 2.485371
result.7    6 430.9680 504.7236 2.314050
result.8    7 390.8981 474.4738 2.137201
result.9    8 370.4201 463.7262 2.090766
result.10   9 346.6601 449.6054 1.995143
result.11  10 341.3283 453.8197 2.040581
result.12  11 324.5894 446.5326 2.029407
result.13  12 298.9399 430.2388 1.967368
result.14  13 302.8265 443.3832 2.079034
result.15  14 296.2885 446.0037 2.129457
result.16  15 300.9720 459.7443 2.282565
result.17  16 295.3835 463.1099 2.447579
result.18  17 277.4297 454.0051 2.694723

[[53]]
          Lag      AIC      BIC     KZIC
result.1    0 695.4904 708.5163 3.415154
result.2    1 656.7607 680.1168 3.274236
result.3    2 610.8134 644.4180 3.070826
result.4    3 562.8629 606.6330 2.884820
result.5    4 511.6255 565.4768 2.672050
result.6    5 458.2097 522.0566 2.420820
result.7    6 416.3521 490.1077 2.257219
result.8    7 368.2318 451.8076 2.029797
result.9    8 332.3877 425.6939 1.863502
result.10   9 315.8510 418.7962 1.811490
result.11  10 306.6371 419.1285 1.875776
result.12  11 274.5405 396.4837 1.816698
result.13  12 269.9856 401.2844 1.879421
result.14  13 260.5725 401.1292 1.957957
result.15  14 259.2367 408.9519 2.079070
result.16  15 247.1350 405.9073 2.181647
result.17  16 221.5999 389.3263 2.263082
result.18  17 196.6713 373.2466 2.346062

[[54]]
          Lag      AIC      BIC     KZIC
result.1    0 651.3447 664.3705 3.145705
result.2    1 619.9329 643.2890 3.038541
result.3    2 574.7876 608.3921 2.844229
result.4    3 539.3309 583.1010 2.696152
result.5    4 507.9612 561.8125 2.566454
result.6    5 457.7446 521.5915 2.342466
result.7    6 414.2387 487.9943 2.168701
result.8    7 335.8730 419.4488 1.793072
result.9    8 313.2130 406.5192 1.721520
result.10   9 292.7633 395.7086 1.696614
result.11  10 269.4510 381.9424 1.623853
result.12  11 258.9574 380.9006 1.624317
result.13  12 261.2061 392.5050 1.724581
result.14  13 262.4068 402.9636 1.947939
result.15  14 257.9547 407.6699 2.050108
result.16  15 231.7391 390.5114 2.064092
result.17  16 212.8506 380.5769 2.303366
result.18  17 191.6872 368.2626 2.515149

[[55]]
          Lag      AIC      BIC     KZIC
result.1    0 676.9939 690.0198 3.352261
result.2    1 632.6894 656.0455 3.211674
result.3    2 588.3474 621.9519 3.058526
result.4    3 543.4972 587.2673 2.890942
result.5    4 492.1110 545.9623 2.661347
result.6    5 451.0272 514.8741 2.472471
result.7    6 402.1288 475.8843 2.274104
result.8    7 364.7881 448.3639 2.120587
result.9    8 316.5526 409.8588 1.892402
result.10   9 300.0391 402.9844 1.872995
result.11  10 299.3394 411.8308 1.908226
result.12  11 292.0670 414.0102 1.949499
result.13  12 254.4731 385.7719 1.848755
result.14  13 250.0026 390.5593 1.992065
result.15  14 246.9150 396.6302 2.174057
result.16  15 231.2289 390.0012 2.280473
result.17  16 208.4484 376.1747 2.344717
result.18  17 208.3325 384.9079 2.611321

[[56]]
          Lag      AIC      BIC     KZIC
result.1    0 662.6174 675.6433 3.256298
result.2    1 627.7120 651.0680 3.104487
result.3    2 584.1902 617.7948 2.937001
result.4    3 534.0905 577.8606 2.706935
result.5    4 472.6855 526.5368 2.447984
result.6    5 430.3271 494.1740 2.272284
result.7    6 391.3666 465.1222 2.117379
result.8    7 356.7000 440.2758 2.001430
result.9    8 328.7036 422.0098 1.950432
result.10   9 266.6376 369.5828 1.726100
result.11  10 263.1392 375.6306 1.772628
result.12  11 264.4482 386.3914 1.822922
result.13  12 251.0854 382.3843 1.796341
result.14  13 234.7001 375.2569 1.768568
result.15  14 226.2995 376.0146 1.828960
result.16  15 208.2561 367.0285 1.852999
result.17  16 204.1973 371.9236 1.983135
result.18  17 184.4262 361.0016 2.142702

[[57]]
          Lag      AIC      BIC     KZIC
result.1    0 630.4282 643.4540 3.039127
result.2    1 596.9947 620.3508 2.929253
result.3    2 556.8418 590.4463 2.824686
result.4    3 513.5119 557.2820 2.658311
result.5    4 474.3833 528.2346 2.513529
result.6    5 444.9983 508.8452 2.417067
result.7    6 413.6056 487.3612 2.317098
result.8    7 376.8172 460.3930 2.181490
result.9    8 354.1153 447.4214 2.116366
result.10   9 341.1735 444.1188 2.083178
result.11  10 280.1563 392.6478 1.788503
result.12  11 259.0055 380.9487 1.740239
result.13  12 236.8621 368.1609 1.694419
result.14  13 228.9612 369.5179 1.739860
result.15  14 228.5359 378.2511 1.842037
result.16  15 199.7817 358.5540 1.815724
result.17  16 190.9938 358.7202 1.956084
result.18  17 166.9392 343.5145 2.221912

[[58]]
          Lag      AIC      BIC     KZIC
result.1    0 645.4487 658.4746 3.113349
result.2    1 615.5282 638.8843 3.044863
result.3    2 571.1329 604.7375 2.869329
result.4    3 533.5979 577.3680 2.717678
result.5    4 484.5489 538.4002 2.512503
result.6    5 420.7795 484.6264 2.199376
result.7    6 386.1088 459.8643 2.067866
result.8    7 364.4597 448.0354 1.988924
result.9    8 333.4618 426.7680 1.877638
result.10   9 300.1083 403.0535 1.767022
result.11  10 282.2048 394.6962 1.724152
result.12  11 269.5114 391.4546 1.752384
result.13  12 258.4393 389.7381 1.805593
result.14  13 262.5051 403.0618 1.906513
result.15  14 264.2119 413.9271 2.000661
result.16  15 250.5108 409.2832 2.045116
result.17  16 246.8753 414.6016 2.303175
result.18  17 223.2303 399.8056 2.459815

[[59]]
          Lag      AIC      BIC     KZIC
result.1    0 656.0745 669.1004 3.150345
result.2    1 621.4858 644.8418 3.021712
result.3    2 581.0912 614.6957 2.885094
result.4    3 541.1654 584.9355 2.716870
result.5    4 490.4809 544.3323 2.476960
result.6    5 439.7740 503.6210 2.272690
result.7    6 403.1370 476.8925 2.143552
result.8    7 370.7112 454.2870 2.035419
result.9    8 341.3430 434.6491 1.917862
result.10   9 313.0167 415.9619 1.793896
result.11  10 314.8576 427.3491 1.890273
result.12  11 308.5680 430.5111 1.888840
result.13  12 297.7253 429.0242 1.964746
result.14  13 291.9721 432.5288 2.013818
result.15  14 264.1393 413.8544 1.972867
result.16  15 267.3433 426.1156 2.120522
result.17  16 252.6642 420.3906 2.273738
result.18  17 214.3783 390.9536 2.535675

[[60]]
          Lag      AIC      BIC     KZIC
result.1    0 694.6875 707.7134 3.356338
result.2    1 653.7171 677.0732 3.247001
result.3    2 608.5639 642.1685 3.047555
result.4    3 559.5337 603.3038 2.838676
result.5    4 514.7603 568.6116 2.650036
result.6    5 449.3946 513.2415 2.342089
result.7    6 385.5642 459.3197 2.065101
result.8    7 339.6697 423.2455 1.865279
result.9    8 305.0885 398.3947 1.710996
result.10   9 291.2608 394.2060 1.688932
result.11  10 290.7813 403.2728 1.742860
result.12  11 268.4715 390.4147 1.672779
result.13  12 268.6669 399.9658 1.738345
result.14  13 252.0306 392.5873 1.773888
result.15  14 244.9082 394.6234 1.902354
result.16  15 242.5792 401.3515 2.035502
result.17  16 225.5836 393.3100 2.300863
result.18  17 175.8947 352.4701 2.250113

[[61]]
          Lag      AIC      BIC     KZIC
result.1    0 627.9716 640.9974 3.057583
result.2    1 587.8190 611.1751 2.893245
result.3    2 554.1647 587.7693 2.762803
result.4    3 506.2900 550.0601 2.612251
result.5    4 473.5200 527.3713 2.488408
result.6    5 438.5895 502.4364 2.364111
result.7    6 388.0801 461.8356 2.143009
result.8    7 337.6706 421.2464 1.935031
result.9    8 319.0521 412.3583 1.874313
result.10   9 297.3753 400.3205 1.838388
result.11  10 295.3642 407.8556 1.851256
result.12  11 295.9382 417.8814 1.930196
result.13  12 284.6618 415.9607 1.932082
result.14  13 284.3250 424.8817 2.040745
result.15  14 281.9326 431.6478 2.159863
result.16  15 281.9622 440.7345 2.277415
result.17  16 275.0874 442.8138 2.384804
result.18  17 267.7039 444.2792 2.598225

[[62]]
          Lag      AIC      BIC     KZIC
result.1    0 655.9620 668.9878 3.181163
result.2    1 621.9142 645.2703 3.057524
result.3    2 586.8452 620.4497 2.929218
result.4    3 544.3903 588.1604 2.729321
result.5    4 503.3936 557.2449 2.533916
result.6    5 459.0770 522.9239 2.339446
result.7    6 413.3207 487.0763 2.162603
result.8    7 359.7569 443.3326 1.951308
result.9    8 321.9174 415.2236 1.806530
result.10   9 318.0010 420.9462 1.837578
result.11  10 303.6574 416.1488 1.817585
result.12  11 282.6745 404.6177 1.782205
result.13  12 282.3606 413.6594 1.904235
result.14  13 282.7138 423.2706 1.983711
result.15  14 286.8145 436.5297 2.118156
result.16  15 248.8713 407.6436 2.039357
result.17  16 235.1369 402.8632 2.078990
result.18  17 197.7966 374.3719 2.060618

[[63]]
          Lag      AIC      BIC     KZIC
result.1    0 729.3833 742.4092 3.542155
result.2    1 684.7619 708.1180 3.397209
result.3    2 638.7674 672.3720 3.216422
result.4    3 591.4937 635.2638 3.020874
result.5    4 547.0289 600.8802 2.867516
result.6    5 492.2764 556.1233 2.619570
result.7    6 436.5903 510.3458 2.363113
result.8    7 382.7512 466.3270 2.142174
result.9    8 339.6793 432.9855 1.986229
result.10   9 316.6455 419.5907 1.903230
result.11  10 308.3669 420.8583 1.895929
result.12  11 302.9158 424.8590 1.971570
result.13  12 300.7338 432.0327 2.034637
result.14  13 282.5102 423.0670 2.054776
result.15  14 272.8464 422.5616 2.181736
result.16  15 261.3014 420.0737 2.329544
result.17  16 226.0220 393.7483 2.283553
result.18  17 209.1665 385.7419 2.505713

[[64]]
          Lag      AIC      BIC     KZIC
result.1    0 644.0648 657.0906 3.158325
result.2    1 606.5062 629.8623 3.021799
result.3    2 569.1706 602.7752 2.881331
result.4    3 530.5377 574.3078 2.721060
result.5    4 496.7167 550.5680 2.581457
result.6    5 457.0119 520.8588 2.404883
result.7    6 420.8565 494.6121 2.255334
result.8    7 388.3667 471.9424 2.177184
result.9    8 337.4427 430.7489 1.930932
result.10   9 301.5904 404.5356 1.793430
result.11  10 292.0745 404.5660 1.790139
result.12  11 253.7656 375.7088 1.642303
result.13  12 256.2044 387.5033 1.757059
result.14  13 238.8983 379.4550 1.754205
result.15  14 231.8910 381.6062 1.808992
result.16  15 231.1360 389.9084 1.962694
result.17  16 220.6836 388.4099 2.096199
result.18  17 215.1347 391.7101 2.623232

[[65]]
          Lag      AIC      BIC     KZIC
result.1    0 656.1671 669.1930 3.190074
result.2    1 615.8072 639.1633 3.030073
result.3    2 578.4496 612.0542 2.911643
result.4    3 541.5183 585.2883 2.775604
result.5    4 491.9567 545.8080 2.581098
result.6    5 442.6101 506.4570 2.362608
result.7    6 393.9687 467.7243 2.139582
result.8    7 353.3342 436.9099 2.001277
result.9    8 301.1989 394.5050 1.779875
result.10   9 261.7217 364.6670 1.611310
result.11  10 247.5998 360.0912 1.613248
result.12  11 246.5815 368.5246 1.674345
result.13  12 242.0303 373.3291 1.724934
result.14  13 243.6190 384.1757 1.812066
result.15  14 238.5258 388.2410 1.899052
result.16  15 227.4008 386.1731 1.964993
result.17  16 205.1856 372.9120 1.989338
result.18  17 155.4250 332.0004 2.069993

[[66]]
          Lag      AIC      BIC     KZIC
result.1    0 682.3481 695.3740 3.369385
result.2    1 645.6865 669.0425 3.205764
result.3    2 605.7596 639.3642 3.060461
result.4    3 564.6550 608.4251 2.884686
result.5    4 516.0090 569.8603 2.680003
result.6    5 462.1435 525.9904 2.438754
result.7    6 414.4156 488.1711 2.256263
result.8    7 369.0409 452.6167 2.076972
result.9    8 338.0749 431.3811 1.953905
result.10   9 313.8421 416.7873 1.896704
result.11  10 268.8663 381.3577 1.717879
result.12  11 244.7055 366.6487 1.648681
result.13  12 250.3827 381.6816 1.740048
result.14  13 245.0128 385.5695 1.860815
result.15  14 245.9491 395.6643 2.019264
result.16  15 221.5969 380.3692 2.029888
result.17  16 212.8685 380.5949 2.184756
result.18  17 199.2650 375.8404 2.422073

[[67]]
          Lag      AIC      BIC     KZIC
result.1    0 667.9219 680.9477 3.225562
result.2    1 631.8746 655.2307 3.080571
result.3    2 589.6204 623.2249 2.912948
result.4    3 542.3294 586.0995 2.760225
result.5    4 498.5404 552.3917 2.598161
result.6    5 449.9181 513.7650 2.379360
result.7    6 402.6519 476.4075 2.165893
result.8    7 367.0587 450.6345 2.000507
result.9    8 336.7877 430.0939 1.886698
result.10   9 292.2392 395.1844 1.699019
result.11  10 272.2907 384.7822 1.641390
result.12  11 276.2810 398.2242 1.718470
result.13  12 258.9696 390.2684 1.674868
result.14  13 263.2203 403.7771 1.780942
result.15  14 243.2878 393.0030 1.764869
result.16  15 238.9823 397.7546 1.945765
result.17  16 227.2951 395.0214 2.140421
result.18  17 226.3946 402.9700 2.329011

[[68]]
          Lag      AIC      BIC     KZIC
result.1    0 701.8633 714.8892 3.372741
result.2    1 666.3780 689.7341 3.262077
result.3    2 625.6134 659.2180 3.083089
result.4    3 572.6943 616.4644 2.844495
result.5    4 526.7189 580.5703 2.645078
result.6    5 490.7283 554.5752 2.500081
result.7    6 449.7789 523.5344 2.366180
result.8    7 391.5019 475.0777 2.103319
result.9    8 358.4936 451.7998 1.987800
result.10   9 345.5718 448.5170 1.944545
result.11  10 310.4974 422.9888 1.826573
result.12  11 305.1847 427.1279 1.833527
result.13  12 300.5018 431.8007 1.863949
result.14  13 281.5181 422.0749 1.843867
result.15  14 279.2351 428.9503 1.915989
result.16  15 261.9980 420.7703 1.986461
result.17  16 260.2972 428.0236 2.189716
result.18  17 240.6899 417.2653 2.356726

[[69]]
          Lag      AIC      BIC     KZIC
result.1    0 645.9939 659.0197 3.134895
result.2    1 611.7730 635.1291 3.121209
result.3    2 570.3558 603.9603 2.987089
result.4    3 530.2252 573.9953 2.821070
result.5    4 487.4040 541.2554 2.629486
result.6    5 449.6448 513.4918 2.462722
result.7    6 409.6188 483.3744 2.283366
result.8    7 374.8124 458.3882 2.137171
result.9    8 357.5885 450.8947 2.093900
result.10   9 334.3545 437.2997 2.011900
result.11  10 327.2233 439.7147 2.013349
result.12  11 321.6000 443.5431 2.089089
result.13  12 321.9349 453.2337 2.154665
result.14  13 319.0240 459.5807 2.210186
result.15  14 288.9518 438.6669 2.164924
result.16  15 282.9341 441.7064 2.383364
result.17  16 281.3546 449.0809 2.587873
result.18  17 266.1207 442.6960 2.807632

[[70]]
          Lag      AIC      BIC     KZIC
result.1    0 681.7861 694.8120 3.319649
result.2    1 639.5317 662.8878 3.151859
result.3    2 592.0039 625.6085 2.962188
result.4    3 551.2840 595.0541 2.809913
result.5    4 506.9947 560.8460 2.623234
result.6    5 459.6014 523.4483 2.399896
result.7    6 417.4087 491.1643 2.245684
result.8    7 365.0635 448.6393 2.009521
result.9    8 324.1510 417.4572 1.888715
result.10   9 295.4998 398.4450 1.778838
result.11  10 281.2441 393.7355 1.783265
result.12  11 279.5662 401.5094 1.844584
result.13  12 265.0751 396.3739 1.830585
result.14  13 265.0984 405.6551 1.929901
result.15  14 250.8038 400.5190 1.987197
result.16  15 244.0581 402.8304 2.149289
result.17  16 211.9566 379.6830 2.194224
result.18  17 201.2576 377.8330 2.432562

[[71]]
          Lag      AIC      BIC     KZIC
result.1    0 672.6653 685.6911 3.245158
result.2    1 622.0391 645.3951 3.049443
result.3    2 579.6141 613.2186 2.886419
result.4    3 541.9227 585.6928 2.737255
result.5    4 487.3427 541.1941 2.500713
result.6    5 446.3849 510.2318 2.322593
result.7    6 410.8882 484.6437 2.173062
result.8    7 367.7996 451.3754 1.956720
result.9    8 334.7102 428.0164 1.791634
result.10   9 315.1526 418.0978 1.755901
result.11  10 299.7625 412.2539 1.709358
result.12  11 296.9313 418.8745 1.740351
result.13  12 294.4575 425.7564 1.806790
result.14  13 266.9055 407.4623 1.749076
result.15  14 255.1100 404.8252 1.821526
result.16  15 246.6565 405.4288 1.911999
result.17  16 218.7212 386.4476 1.918810
result.18  17 189.4258 366.0011 2.106117

[[72]]
          Lag      AIC      BIC     KZIC
result.1    0 679.6356 692.6614 3.278864
result.2    1 642.3733 665.7294 3.179602
result.3    2 601.7599 635.3645 3.026818
result.4    3 556.7695 600.5396 2.822211
result.5    4 510.1173 563.9686 2.636099
result.6    5 448.7866 512.6335 2.378937
result.7    6 403.6815 477.4370 2.156158
result.8    7 368.6139 452.1897 2.004207
result.9    8 341.8905 435.1966 1.910856
result.10   9 318.8558 421.8011 1.826807
result.11  10 299.2662 411.7576 1.778107
result.12  11 290.3487 412.2919 1.784737
result.13  12 282.7327 414.0315 1.809345
result.14  13 279.7586 420.3154 1.900891
result.15  14 275.7961 425.5112 1.975431
result.16  15 246.1642 404.9366 1.985650
result.17  16 219.0041 386.7304 1.997298
result.18  17 144.2892 320.8646 1.907461

[[73]]
          Lag      AIC      BIC     KZIC
result.1    0 626.6209 639.6467 3.069434
result.2    1 588.1329 611.4890 2.937100
result.3    2 547.9773 581.5819 2.779872
result.4    3 505.0271 548.7972 2.594432
result.5    4 464.1936 518.0449 2.400569
result.6    5 420.8979 484.7448 2.224665
result.7    6 388.3218 462.0773 2.144293
result.8    7 360.9075 444.4833 2.096958
result.9    8 336.4439 429.7501 2.026329
result.10   9 311.0067 413.9519 1.929998
result.11  10 296.1894 408.6809 1.916511
result.12  11 295.3978 417.3410 2.004162
result.13  12 294.0605 425.3593 2.107936
result.14  13 271.7730 412.3297 2.122865
result.15  14 261.6312 411.3464 2.174440
result.16  15 249.8053 408.5777 2.293269
result.17  16 244.7645 412.4908 2.471142
result.18  17 236.1476 412.7230 2.794670

[[74]]
          Lag      AIC      BIC     KZIC
result.1    0 677.5180 690.5438 3.242898
result.2    1 644.3232 667.6793 3.152078
result.3    2 606.6404 640.2450 2.997134
result.4    3 566.3441 610.1142 2.831506
result.5    4 525.8903 579.7416 2.646224
result.6    5 485.1701 549.0170 2.485220
result.7    6 435.7443 509.4999 2.247271
result.8    7 388.5086 472.0844 2.043069
result.9    8 358.3638 451.6700 1.914960
result.10   9 334.6778 437.6230 1.851111
result.11  10 302.5493 415.0408 1.743853
result.12  11 277.4641 399.4073 1.680752
result.13  12 271.1184 402.4172 1.704994
result.14  13 242.1815 382.7382 1.636826
result.15  14 238.1395 387.8547 1.682675
result.16  15 241.9148 400.6871 1.844382
result.17  16 220.5727 388.2991 1.932718
result.18  17 190.6392 367.2146 2.165509

[[75]]
          Lag      AIC      BIC     KZIC
result.1    0 708.6724 721.6982 3.465171
result.2    1 671.0946 694.4507 3.312065
result.3    2 630.8626 664.4672 3.160151
result.4    3 585.5336 629.3037 2.964647
result.5    4 532.4455 586.2968 2.726603
result.6    5 497.3292 561.1761 2.623900
result.7    6 450.8059 524.5614 2.434650
result.8    7 399.7698 483.3455 2.189532
result.9    8 351.3137 444.6199 1.982238
result.10   9 324.3318 427.2770 1.911632
result.11  10 303.2712 415.7626 1.881600
result.12  11 294.8700 416.8132 1.890521
result.13  12 293.4646 424.7635 1.954379
result.14  13 294.3913 434.9480 2.080261
result.15  14 276.4353 426.1505 2.083669
result.16  15 271.5235 430.2958 2.191955
result.17  16 237.4885 405.2149 2.183915
result.18  17 162.8659 339.4413 2.074489

[[76]]
          Lag      AIC      BIC     KZIC
result.1    0 651.8740 664.8998 3.112607
result.2    1 618.1527 641.5088 2.987292
result.3    2 587.5455 621.1501 2.905996
result.4    3 542.6491 586.4192 2.703332
result.5    4 492.3354 546.1867 2.469842
result.6    5 448.3525 512.1994 2.291961
result.7    6 396.0305 469.7861 2.100839
result.8    7 332.8686 416.4444 1.811745
result.9    8 313.9521 407.2583 1.816070
result.10   9 286.9903 389.9356 1.774192
result.11  10 257.2636 369.7550 1.714342
result.12  11 254.8222 376.7654 1.843697
result.13  12 255.0857 386.3846 1.928246
result.14  13 254.5560 395.1127 2.126013
result.15  14 241.6802 391.3954 2.147045
result.16  15 226.0357 384.8080 2.181805
result.17  16 210.7327 378.4590 2.230673
result.18  17 195.7877 372.3631 2.321512

[[77]]
          Lag      AIC      BIC     KZIC
result.1    0 660.9252 673.9510 3.196198
result.2    1 627.7847 651.1408 3.081913
result.3    2 583.2204 616.8250 2.913536
result.4    3 539.8779 583.6480 2.734319
result.5    4 499.1796 553.0309 2.583478
result.6    5 443.8362 507.6831 2.332456
result.7    6 396.8555 470.6110 2.115718
result.8    7 354.9155 438.4913 1.924044
result.9    8 331.6747 424.9808 1.853813
result.10   9 301.9872 404.9325 1.762364
result.11  10 270.7175 383.2089 1.653589
result.12  11 269.9959 391.9391 1.724640
result.13  12 267.2808 398.5796 1.805132
result.14  13 271.3557 411.9125 1.918110
result.15  14 262.7885 412.5037 1.950877
result.16  15 249.0080 407.7803 2.014423
result.17  16 221.5880 389.3144 2.023170
result.18  17 150.6675 327.2428 1.980688

[[78]]
          Lag      AIC      BIC     KZIC
result.1    0 622.4271 635.4530 2.948752
result.2    1 587.7368 611.0929 2.841126
result.3    2 556.0537 589.6583 2.709852
result.4    3 520.3859 564.1560 2.568803
result.5    4 481.0674 534.9187 2.443793
result.6    5 437.8991 501.7460 2.250258
result.7    6 403.7895 477.5451 2.089806
result.8    7 353.5374 437.1131 1.908875
result.9    8 322.0451 415.3513 1.785947
result.10   9 310.5546 413.4998 1.773838
result.11  10 281.3137 393.8051 1.677531
result.12  11 249.4256 371.3688 1.549878
result.13  12 244.3802 375.6790 1.610598
result.14  13 230.5837 371.1405 1.608536
result.15  14 223.4212 373.1364 1.667338
result.16  15 200.8854 359.6577 1.658054
result.17  16 187.0058 354.7322 1.777117
result.18  17 180.6359 357.2113 2.018808

[[79]]
          Lag      AIC      BIC     KZIC
result.1    0 654.8464 667.8723 3.171885
result.2    1 620.8207 644.1768 3.056294
result.3    2 587.7708 621.3754 2.928043
result.4    3 546.9868 590.7569 2.780420
result.5    4 507.4766 561.3279 2.598775
result.6    5 467.7529 531.5999 2.427805
result.7    6 422.9016 496.6572 2.225666
result.8    7 399.3064 482.8822 2.151609
result.9    8 377.1256 470.4317 2.086932
result.10   9 346.6454 449.5907 1.990845
result.11  10 300.8245 413.3159 1.833418
result.12  11 287.2774 409.2206 1.824150
result.13  12 288.3910 419.6898 1.929712
result.14  13 285.6596 426.2164 2.038006
result.15  14 284.1821 433.8973 2.206095
result.16  15 287.1003 445.8727 2.342039
result.17  16 272.2959 440.0223 2.421703
result.18  17 266.0620 442.6373 2.716495

[[80]]
          Lag      AIC      BIC     KZIC
result.1    0 644.9633 657.9892 3.124416
result.2    1 608.6319 631.9880 3.047465
result.3    2 569.8997 603.5043 2.889946
result.4    3 527.3041 571.0742 2.699305
result.5    4 478.0720 531.9233 2.485507
result.6    5 439.6973 503.5442 2.310270
result.7    6 398.4826 472.2381 2.123595
result.8    7 343.4026 426.9784 1.900574
result.9    8 305.9985 399.3046 1.758229
result.10   9 286.4335 389.3787 1.748542
result.11  10 287.1719 399.6634 1.825490
result.12  11 281.1147 403.0579 1.890775
result.13  12 285.8772 417.1761 2.018042
result.14  13 270.9391 411.4959 2.037740
result.15  14 267.6769 417.3921 2.154960
result.16  15 255.4070 414.1793 2.238334
result.17  16 251.1096 418.8360 2.322026
result.18  17 183.7268 360.3021 2.184325

[[81]]
          Lag      AIC      BIC     KZIC
result.1    0 677.8261 690.8519 3.238479
result.2    1 646.5928 669.9489 3.133246
result.3    2 603.0466 636.6512 2.942207
result.4    3 554.3826 598.1527 2.756073
result.5    4 494.6621 548.5134 2.495821
result.6    5 454.3821 518.2290 2.331417
result.7    6 410.1784 483.9339 2.146959
result.8    7 370.1728 453.7486 1.971888
result.9    8 325.6761 418.9823 1.751435
result.10   9 276.0896 379.0348 1.521834
result.11  10 256.8580 369.3495 1.452767
result.12  11 251.6818 373.6250 1.494728
result.13  12 248.8421 380.1410 1.554744
result.14  13 232.1319 372.6887 1.545007
result.15  14 217.6478 367.3630 1.602054
result.16  15 216.9483 375.7206 1.767193
result.17  16 184.1669 351.8932 1.767576
result.18  17 172.7041 349.2795 1.977035

[[82]]
          Lag      AIC      BIC     KZIC
result.1    0 659.1529 672.1787 3.203268
result.2    1 625.1787 648.5348 3.108403
result.3    2 595.0775 628.6820 2.995654
result.4    3 557.1307 600.9008 2.837772
result.5    4 509.8616 563.7129 2.644818
result.6    5 466.0370 529.8839 2.441380
result.7    6 416.5646 490.3201 2.194338
result.8    7 357.1999 440.7757 1.926318
result.9    8 311.4994 404.8056 1.735049
result.10   9 292.6793 395.6245 1.686900
result.11  10 278.0418 390.5332 1.695426
result.12  11 275.8260 397.7691 1.787305
result.13  12 272.4375 403.7363 1.822864
result.14  13 270.6220 411.1788 1.927417
result.15  14 250.7993 400.5145 1.955634
result.16  15 227.5675 386.3398 1.920827
result.17  16 201.0334 368.7597 1.938852
result.18  17 167.2499 343.8253 2.064988

[[83]]
          Lag      AIC      BIC     KZIC
result.1    0 684.6526 697.6785 3.358504
result.2    1 641.4277 664.7838 3.227038
result.3    2 605.8345 639.4391 3.100058
result.4    3 559.6473 603.4174 2.899119
result.5    4 508.6309 562.4822 2.663489
result.6    5 457.8795 521.7264 2.432253
result.7    6 397.1679 470.9234 2.152704
result.8    7 359.7294 443.3052 1.982035
result.9    8 305.6357 398.9419 1.761964
result.10   9 295.2147 398.1600 1.804313
result.11  10 288.0585 400.5499 1.832542
result.12  11 283.2113 405.1545 1.862925
result.13  12 285.1211 416.4199 1.962857
result.14  13 287.6357 428.1924 2.110956
result.15  14 266.6737 416.3889 2.126704
result.16  15 251.4834 410.2558 2.207262
result.17  16 229.8038 397.5302 2.267692
result.18  17 212.1174 388.6927 2.366833

[[84]]
          Lag      AIC      BIC     KZIC
result.1    0 657.9207 670.9465 3.136603
result.2    1 620.6665 644.0226 3.004691
result.3    2 586.5583 620.1628 2.888494
result.4    3 543.9167 587.6868 2.699988
result.5    4 502.8777 556.7290 2.563317
result.6    5 445.4809 509.3279 2.313083
result.7    6 398.7333 472.4888 2.091997
result.8    7 361.6768 445.2526 1.922364
result.9    8 339.4126 432.7187 1.856695
result.10   9 294.4527 397.3980 1.672536
result.11  10 286.8434 399.3349 1.705830
result.12  11 282.5315 404.4747 1.772992
result.13  12 269.5113 400.8101 1.854127
result.14  13 273.4264 413.9831 1.972776
result.15  14 277.5725 427.2877 2.077715
result.16  15 272.6120 431.3843 2.171103
result.17  16 263.4224 431.1487 2.353774
result.18  17 254.1005 430.6759 2.571537

[[85]]
          Lag      AIC      BIC     KZIC
result.1    0 673.4927 686.5186 3.182291
result.2    1 641.7460 665.1021 3.110695
result.3    2 597.7586 631.3632 2.922889
result.4    3 546.6048 590.3749 2.721602
result.5    4 510.3712 564.2225 2.557161
result.6    5 465.9452 529.7921 2.370431
result.7    6 422.8948 496.6503 2.222902
result.8    7 382.6648 466.2406 2.111192
result.9    8 358.7612 452.0674 2.021553
result.10   9 340.0369 442.9821 1.954378
result.11  10 314.4029 426.8943 1.840010
result.12  11 310.9303 432.8735 1.857949
result.13  12 286.4618 417.7607 1.769805
result.14  13 285.2652 425.8219 1.871457
result.15  14 263.5663 413.2815 1.955711
result.16  15 260.7692 419.5416 2.119481
result.17  16 260.3233 428.0497 2.282937
result.18  17 238.1197 414.6951 2.375995

[[86]]
          Lag      AIC      BIC     KZIC
result.1    0 638.4761 651.5019 3.080521
result.2    1 606.2738 629.6298 2.967397
result.3    2 567.9489 601.5534 2.803639
result.4    3 524.9723 568.7424 2.602429
result.5    4 492.9948 546.8461 2.516191
result.6    5 461.2057 525.0526 2.409729
result.7    6 419.9623 493.7179 2.240719
result.8    7 373.0504 456.6262 2.045766
result.9    8 351.5389 444.8451 1.969483
result.10   9 331.9433 434.8886 1.894272
result.11  10 325.9382 438.4296 1.984629
result.12  11 320.9582 442.9014 2.027258
result.13  12 309.8058 441.1047 2.051988
result.14  13 301.3767 441.9334 2.120565
result.15  14 293.0586 442.7738 2.196811
result.16  15 251.5462 410.3186 2.093767
result.17  16 240.4784 408.2048 2.178710
result.18  17 208.2786 384.8540 2.203994

[[87]]
          Lag      AIC      BIC     KZIC
result.1    0 626.5419 639.5678 3.030078
result.2    1 597.1216 620.4777 2.958154
result.3    2 567.6120 601.2166 2.877509
result.4    3 533.0962 576.8663 2.770261
result.5    4 481.8533 535.7046 2.550916
result.6    5 434.7711 498.6181 2.349720
result.7    6 400.6781 474.4336 2.206721
result.8    7 366.5681 450.1439 2.074841
result.9    8 342.4041 435.7103 1.978021
result.10   9 322.4250 425.3702 1.911613
result.11  10 318.4286 430.9200 1.981729
result.12  11 313.7191 435.6623 2.015643
result.13  12 313.4611 444.7600 2.089580
result.14  13 303.6305 444.1872 2.127085
result.15  14 300.7120 450.4272 2.189471
result.16  15 294.1425 452.9148 2.279186
result.17  16 281.7067 449.4331 2.445215
result.18  17 275.6855 452.2609 2.735147

[[88]]
          Lag      AIC      BIC     KZIC
result.1    0 675.8069 688.8327 3.311053
result.2    1 639.2361 662.5922 3.173972
result.3    2 593.4902 627.0948 2.995637
result.4    3 555.4355 599.2056 2.838855
result.5    4 500.4883 554.3396 2.585566
result.6    5 461.8165 525.6634 2.400531
result.7    6 425.1981 498.9536 2.233655
result.8    7 357.5260 441.1018 1.908926
result.9    8 310.6403 403.9464 1.706526
result.10   9 304.4920 407.4373 1.722728
result.11  10 296.0283 408.5197 1.785633
result.12  11 287.6284 409.5715 1.784463
result.13  12 287.6429 418.9418 1.829578
result.14  13 288.0892 428.6459 1.984911
result.15  14 293.7870 443.5022 2.216562
result.16  15 277.7628 436.5352 2.373484
result.17  16 276.5794 444.3058 2.667017
result.18  17 249.0446 425.6200 2.913895

[[89]]
          Lag      AIC      BIC     KZIC
result.1    0 709.7513 722.7771 3.470004
result.2    1 674.7509 698.1070 3.355755
result.3    2 636.8202 670.4248 3.208775
result.4    3 591.6985 635.4686 3.022752
result.5    4 545.9426 599.7939 2.842529
result.6    5 487.2602 551.1072 2.582122
result.7    6 447.4950 521.2506 2.426642
result.8    7 399.8691 483.4449 2.227146
result.9    8 340.3032 433.6094 1.942659
result.10   9 309.3714 412.3166 1.819968
result.11  10 290.0289 402.5204 1.747088
result.12  11 291.4910 413.4342 1.815796
result.13  12 295.1984 426.4973 1.900237
result.14  13 278.9789 419.5357 1.904445
result.15  14 277.2392 426.9544 2.021961
result.16  15 273.9151 432.6874 2.147871
result.17  16 253.4495 421.1759 2.205941
result.18  17 208.0862 384.6615 2.193390

[[90]]
          Lag      AIC      BIC     KZIC
result.1    0 619.1123 632.1381 2.992535
result.2    1 585.0563 608.4123 2.930925
result.3    2 544.7240 578.3286 2.763908
result.4    3 503.7743 547.5444 2.595542
result.5    4 461.4330 515.2843 2.392065
result.6    5 422.9016 486.7485 2.218871
result.7    6 382.4887 456.2442 2.039543
result.8    7 336.1402 419.7160 1.896784
result.9    8 318.3740 411.6802 1.843685
result.10   9 302.5012 405.4464 1.821663
result.11  10 291.8876 404.3790 1.815887
result.12  11 270.0468 391.9900 1.744316
result.13  12 253.4021 384.7009 1.732808
result.14  13 249.3473 389.9041 1.783383
result.15  14 243.0191 392.7343 1.868367
result.16  15 225.2439 384.0163 1.875322
result.17  16 213.7973 381.5236 1.998372
result.18  17 204.7440 381.3194 2.277466

[[91]]
          Lag      AIC      BIC     KZIC
result.1    0 640.7813 653.8071 3.132455
result.2    1 606.2437 629.5998 3.019193
result.3    2 569.3319 602.9365 2.905247
result.4    3 514.2500 558.0201 2.649132
result.5    4 473.5886 527.4399 2.466172
result.6    5 425.1598 489.0067 2.238193
result.7    6 375.0598 448.8153 1.995580
result.8    7 346.2832 429.8589 1.886789
result.9    8 314.2150 407.5212 1.760092
result.10   9 310.3636 413.3089 1.790400
result.11  10 305.2072 417.6986 1.821910
result.12  11 299.3668 421.3100 1.867244
result.13  12 296.4621 427.7610 1.934167
result.14  13 297.7615 438.3183 2.060138
result.15  14 286.3111 436.0262 2.089794
result.16  15 278.3392 437.1115 2.193808
result.17  16 271.7705 439.4969 2.338284
result.18  17 266.4196 442.9949 2.696849

[[92]]
          Lag      AIC      BIC     KZIC
result.1    0 648.2647 661.2905 3.088700
result.2    1 611.7057 635.0618 2.934419
result.3    2 568.9047 602.5093 2.801293
result.4    3 520.9749 564.7450 2.607262
result.5    4 477.0030 530.8543 2.426958
result.6    5 435.4477 499.2946 2.262024
result.7    6 387.7491 461.5047 2.028557
result.8    7 351.8582 435.4340 1.921938
result.9    8 325.7561 419.0623 1.842923
result.10   9 294.9235 397.8688 1.754062
result.11  10 269.1639 381.6553 1.706791
result.12  11 260.9658 382.9090 1.708417
result.13  12 260.4284 391.7272 1.764761
result.14  13 260.1361 400.6929 1.855478
result.15  14 257.8333 407.5485 2.000253
result.16  15 243.7002 402.4725 2.041969
result.17  16 219.1607 386.8871 2.082397
result.18  17 168.1661 344.7415 2.039867

[[93]]
          Lag      AIC      BIC     KZIC
result.1    0 673.7022 686.7280 3.227239
result.2    1 641.1432 664.4993 3.157753
result.3    2 601.9595 635.5640 3.009257
result.4    3 554.4615 598.2316 2.792782
result.5    4 506.8047 560.6560 2.575018
result.6    5 454.9138 518.7607 2.347408
result.7    6 409.8729 483.6285 2.141529
result.8    7 367.2225 450.7983 1.965396
result.9    8 323.1817 416.4879 1.803546
result.10   9 285.9178 388.8631 1.676516
result.11  10 257.4944 369.9858 1.619937
result.12  11 250.0093 371.9525 1.661154
result.13  12 243.8001 375.0990 1.712396
result.14  13 235.5638 376.1205 1.774002
result.15  14 239.0305 388.7456 1.916849
result.16  15 238.8597 397.6320 2.032711
result.17  16 229.3705 397.0969 2.149200
result.18  17 229.8328 406.4082 2.334336

[[94]]
          Lag      AIC      BIC     KZIC
result.1    0 704.8274 717.8533 3.408398
result.2    1 661.2866 684.6427 3.248599
result.3    2 613.6013 647.2058 3.069660
result.4    3 560.4320 604.2021 2.850294
result.5    4 514.3616 568.2129 2.649472
result.6    5 469.7215 533.5684 2.443619
result.7    6 421.4264 495.1819 2.237120
result.8    7 385.0099 468.5857 2.109161
result.9    8 358.2946 451.6008 2.007949
result.10   9 327.1634 430.1086 1.892243
result.11  10 300.2030 412.6944 1.830507
result.12  11 292.7414 414.6846 1.868197
result.13  12 296.5718 427.8707 1.952627
result.14  13 289.9351 430.4919 1.994826
result.15  14 283.6957 433.4109 2.125473
result.16  15 269.2544 428.0268 2.141751
result.17  16 258.7430 426.4693 2.247189
result.18  17 235.3060 411.8813 2.391182

[[95]]
          Lag      AIC      BIC     KZIC
result.1    0 671.4205 684.4463 3.212019
result.2    1 631.7170 655.0731 3.082622
result.3    2 592.1599 625.7645 2.909069
result.4    3 549.8799 593.6500 2.721416
result.5    4 505.2989 559.1502 2.583137
result.6    5 443.2417 507.0886 2.304827
result.7    6 385.7497 459.5053 2.066293
result.8    7 352.7729 436.3487 1.958877
result.9    8 346.3365 439.6427 1.959430
result.10   9 330.8236 433.7689 1.934501
result.11  10 301.7385 414.2300 1.791570
result.12  11 277.6785 399.6217 1.701834
result.13  12 273.8001 405.0990 1.753917
result.14  13 266.3178 406.8745 1.798853
result.15  14 250.9221 400.6372 1.811963
result.16  15 233.3511 392.1235 1.823790
result.17  16 220.3943 388.1207 1.966013
result.18  17 220.3483 396.9236 2.227273

[[96]]
          Lag      AIC      BIC     KZIC
result.1    0 682.5680 695.5938 3.279002
result.2    1 645.7375 669.0936 3.189703
result.3    2 609.0599 642.6645 3.081179
result.4    3 562.4810 606.2511 2.887366
result.5    4 509.2443 563.0956 2.635363
result.6    5 463.9731 527.8200 2.417612
result.7    6 404.9517 478.7073 2.150234
result.8    7 353.4888 437.0646 1.912197
result.9    8 330.1354 423.4416 1.833945
result.10   9 287.0483 389.9936 1.638987
result.11  10 281.4134 393.9048 1.677776
result.12  11 273.9011 395.8442 1.833089
result.13  12 274.3245 405.6233 1.913725
result.14  13 246.8922 387.4489 1.855193
result.15  14 235.3430 385.0582 1.872827
result.16  15 219.3601 378.1325 1.892227
result.17  16 171.2712 338.9975 1.816571
result.18  17 110.1034 286.6788 1.751915

[[97]]
          Lag      AIC      BIC     KZIC
result.1    0 659.8114 672.8372 3.189439
result.2    1 626.5388 649.8949 3.064076
result.3    2 591.9115 625.5160 2.913997
result.4    3 550.1593 593.9294 2.761407
result.5    4 512.1920 566.0433 2.645017
result.6    5 467.9605 531.8075 2.439280
result.7    6 420.4629 494.2185 2.221724
result.8    7 385.4977 469.0735 2.076227
result.9    8 355.6112 448.9174 1.989855
result.10   9 341.4712 444.4164 2.016073
result.11  10 313.0975 425.5889 1.920584
result.12  11 296.2495 418.1927 1.887286
result.13  12 281.5285 412.8274 1.872027
result.14  13 266.0813 406.6381 1.882540
result.15  14 246.9475 396.6627 1.897996
result.16  15 199.8558 358.6281 1.825207
result.17  16 172.0862 339.8125 1.832664
result.18  17 164.6762 341.2516 2.105050

[[98]]
          Lag      AIC      BIC     KZIC
result.1    0 686.8119 699.8377 3.287188
result.2    1 651.6755 675.0316 3.225728
result.3    2 612.8017 646.4063 3.077668
result.4    3 565.7586 609.5287 2.889219
result.5    4 523.2104 577.0617 2.745302
result.6    5 479.5012 543.3482 2.580398
result.7    6 442.9966 516.7522 2.454614
result.8    7 397.5397 481.1155 2.250821
result.9    8 354.4731 447.7793 2.057213
result.10   9 337.9544 440.8997 1.997995
result.11  10 306.8769 419.3683 1.866485
result.12  11 310.5256 432.4688 1.976827
result.13  12 296.6297 427.9285 1.974109
result.14  13 240.8441 381.4009 1.720472
result.15  14 235.4221 385.1372 1.875902
result.16  15 224.8008 383.5731 1.973916
result.17  16 214.4320 382.1584 2.069752
result.18  17 201.9359 378.5113 2.378993

[[99]]
          Lag      AIC      BIC     KZIC
result.1    0 663.0344 676.0602 3.217857
result.2    1 629.2169 652.5729 3.121096
result.3    2 587.9422 621.5468 2.944530
result.4    3 547.0469 590.8170 2.793748
result.5    4 490.5612 544.4125 2.543515
result.6    5 435.1230 498.9699 2.291299
result.7    6 403.9575 477.7130 2.190022
result.8    7 375.1604 458.7362 2.060709
result.9    8 348.2095 441.5156 1.931752
result.10   9 322.0124 424.9576 1.844704
result.11  10 321.2092 433.7007 1.917148
result.12  11 313.0018 434.9450 1.968762
result.13  12 303.2394 434.5383 2.016547
result.14  13 275.5717 416.1285 1.930872
result.15  14 266.6501 416.3653 2.008871
result.16  15 258.1201 416.8924 2.149924
result.17  16 250.7300 418.4564 2.280301
result.18  17 221.2321 397.8075 2.412245

[[100]]
          Lag      AIC      BIC     KZIC
result.1    0 685.2701 698.2959 3.275126
result.2    1 642.3602 665.7163 3.128771
result.3    2 591.6791 625.2837 2.893350
result.4    3 542.6258 586.3959 2.702117
result.5    4 492.9365 546.7878 2.491477
result.6    5 448.1171 511.9640 2.313714
result.7    6 405.6814 479.4369 2.172634
result.8    7 371.0700 454.6458 2.041115
result.9    8 347.1927 440.4989 1.977816
result.10   9 339.6859 442.6312 2.024501
result.11  10 334.5471 447.0385 2.050171
result.12  11 319.2960 441.2392 1.997062
result.13  12 319.0894 450.3882 2.059171
result.14  13 305.4246 445.9814 2.059735
result.15  14 303.0854 452.8006 2.138313
result.16  15 301.0001 459.7725 2.265172
result.17  16 285.4077 453.1341 2.424229
result.18  17 238.2716 414.8470 2.394171

> object.size(modl4.100)
240840 bytes
> IC4.100 <- modl4.100
> sapply(IC4.100,function(l)which.min(l[,1]))
result.1 result.1 result.1 result.1 result.1 result.1 result.1 result.1 
       1        1        1        1        1        1        1        1 
result.1 result.1 result.1 result.1 result.1 result.1 result.1 result.1 
       1        1        1        1        1        1        1        1 
result.1 result.1 result.1 result.1 result.1 result.1 result.1 result.1 
       1        1        1        1        1        1        1        1 
result.1 result.1 result.1 result.1 result.1 result.1 result.1 result.1 
       1        1        1        1        1        1        1        1 
result.1 result.1 result.1 result.1 result.1 result.1 result.1 result.1 
       1        1        1        1        1        1        1        1 
result.1 result.1 result.1 result.1 result.1 result.1 result.1 result.1 
       1        1        1        1        1        1        1        1 
result.1 result.1 result.1 result.1 result.1 result.1 result.1 result.1 
       1        1        1        1        1        1        1        1 
result.1 result.1 result.1 result.1 result.1 result.1 result.1 result.1 
       1        1        1        1        1        1        1        1 
result.1 result.1 result.1 result.1 result.1 result.1 result.1 result.1 
       1        1        1        1        1        1        1        1 
result.1 result.1 result.1 result.1 result.1 result.1 result.1 result.1 
       1        1        1        1        1        1        1        1 
result.1 result.1 result.1 result.1 result.1 result.1 result.1 result.1 
       1        1        1        1        1        1        1        1 
result.1 result.1 result.1 result.1 result.1 result.1 result.1 result.1 
       1        1        1        1        1        1        1        1 
result.1 result.1 result.1 result.1 
       1        1        1        1 
> sapply(IC4.100,function(l)which.min(l[,2]))
result.18 result.18 result.18 result.18 result.18 result.18 result.18 result.18 
       18        18        18        18        18        18        18        18 
result.18 result.18 result.18 result.18 result.18 result.18 result.18 result.18 
       18        18        18        18        18        18        18        18 
result.18 result.18 result.18 result.18 result.17 result.18 result.18 result.18 
       18        18        18        18        17        18        18        18 
result.18 result.18 result.18 result.18 result.18 result.18 result.18 result.18 
       18        18        18        18        18        18        18        18 
result.18 result.18 result.18 result.18 result.18 result.18 result.18 result.18 
       18        18        18        18        18        18        18        18 
result.18 result.18 result.18 result.18 result.18 result.18 result.17 result.18 
       18        18        18        18        18        18        17        18 
result.18 result.18 result.18 result.18 result.18 result.18 result.18 result.18 
       18        18        18        18        18        18        18        18 
result.18 result.18 result.18 result.18 result.18 result.18 result.18 result.18 
       18        18        18        18        18        18        18        18 
result.18 result.18 result.18 result.18 result.18 result.18 result.18 result.18 
       18        18        18        18        18        18        18        18 
result.18 result.18 result.18 result.18 result.18 result.18 result.18 result.18 
       18        18        18        18        18        18        18        18 
result.18 result.18 result.18 result.18 result.18 result.18 result.18 result.18 
       18        18        18        18        18        18        18        18 
result.18 result.18 result.18 result.18 result.17 result.18 result.18 result.18 
       18        18        18        18        17        18        18        18 
result.18 result.18 result.18 result.18 
       18        18        18        18 
> sapply(IC4.100,function(l)which.min(l[,3]))
result.18 result.10 result.14 result.18 result.11 result.18 result.18 result.11 
       18        10        14        18        11        18        18        11 
result.10 result.10 result.18 result.18 result.18 result.18 result.18 result.18 
       10        10        18        18        18        18        18        18 
result.11 result.18 result.18 result.18 result.17 result.18 result.18 result.18 
       11        18        18        18        17        18        18        18 
result.18 result.12 result.18 result.18 result.16 result.12 result.18 result.18 
       18        12        18        18        16        12        18        18 
result.18 result.18 result.11 result.18 result.18 result.18 result.17 result.18 
       18        18        11        18        18        18        17        18 
result.10 result.18 result.17 result.10 result.14 result.10 result.17 result.18 
       10        18        17        10        14        10        17        18 
result.10 result.10 result.14 result.13 result.18 result.18 result.17 result.18 
       10        10        14        13        18        18        17        18 
result.18 result.13 result.18 result.18 result.10 result.18 result.18 result.12 
       18        13        18        18        10        18        18        12 
result.18 result.12 result.11 result.18 result.10 result.18 result.18 result.18 
       18        12        11        18        10        18        18        18 
result.16 result.18 result.18 result.11 result.18 result.17 result.12 result.18 
       16        18        18        11        18        17        12        18 
result.18 result.18 result.18 result.10 result.15 result.18 result.10  result.9 
       18        18        18        10        15        18        10         9 
result.18 result.18  result.9 result.18 result.11 result.18 result.17 result.18 
       18        18         9        18        11        18        17        18 
result.17 result.18 result.18 result.18 
       17        18        18        18 
> table(which.min(IC4.100[[1]][,1]))

1 
1 
> which.min(IC4.100[[1]][,1])
result.1 
       1 
> IC4.100[[1]]
          Lag      AIC      BIC     KZIC
result.1    0 630.9793 644.0052 3.098286
result.2    1 601.6004 624.9564 3.049878
result.3    2 566.0042 599.6088 2.934963
result.4    3 528.4324 572.2025 2.774307
result.5    4 490.6404 544.4917 2.605846
result.6    5 448.4598 512.3067 2.423737
result.7    6 409.6606 483.4162 2.272102
result.8    7 349.2145 432.7903 1.994404
result.9    8 315.9890 409.2952 1.841265
result.10   9 301.8869 404.8322 1.806394
result.11  10 299.3546 411.8461 1.854882
result.12  11 299.7773 421.7205 1.944706
result.13  12 285.7654 417.0642 1.954411
result.14  13 276.8568 417.4136 2.063374
result.15  14 262.4697 412.1849 2.100275
result.16  15 248.9450 407.7173 2.151266
result.17  16 227.8453 395.5716 2.242711
result.18  17 214.0652 390.6406 2.453610
> table(which.min(IC4.100[[1]][,2]))

18 
 1 
> 
> 
> 
> sapply(IC4.100,function(l)which.min(l[,2]))
result.18 result.18 result.18 result.18 result.18 result.18 result.18 result.18 
       18        18        18        18        18        18        18        18 
result.18 result.18 result.18 result.18 result.18 result.18 result.18 result.18 
       18        18        18        18        18        18        18        18 
result.18 result.18 result.18 result.18 result.17 result.18 result.18 result.18 
       18        18        18        18        17        18        18        18 
result.18 result.18 result.18 result.18 result.18 result.18 result.18 result.18 
       18        18        18        18        18        18        18        18 
result.18 result.18 result.18 result.18 result.18 result.18 result.18 result.18 
       18        18        18        18        18        18        18        18 
result.18 result.18 result.18 result.18 result.18 result.18 result.17 result.18 
       18        18        18        18        18        18        17        18 
result.18 result.18 result.18 result.18 result.18 result.18 result.18 result.18 
       18        18        18        18        18        18        18        18 
result.18 result.18 result.18 result.18 result.18 result.18 result.18 result.18 
       18        18        18        18        18        18        18        18 
result.18 result.18 result.18 result.18 result.18 result.18 result.18 result.18 
       18        18        18        18        18        18        18        18 
result.18 result.18 result.18 result.18 result.18 result.18 result.18 result.18 
       18        18        18        18        18        18        18        18 
result.18 result.18 result.18 result.18 result.18 result.18 result.18 result.18 
       18        18        18        18        18        18        18        18 
result.18 result.18 result.18 result.18 result.17 result.18 result.18 result.18 
       18        18        18        18        17        18        18        18 
result.18 result.18 result.18 result.18 
       18        18        18        18 
> sapply(IC4.100,function(l)which.min(l[,3]))
result.18 result.10 result.14 result.18 result.11 result.18 result.18 result.11 
       18        10        14        18        11        18        18        11 
result.10 result.10 result.18 result.18 result.18 result.18 result.18 result.18 
       10        10        18        18        18        18        18        18 
result.11 result.18 result.18 result.18 result.17 result.18 result.18 result.18 
       11        18        18        18        17        18        18        18 
result.18 result.12 result.18 result.18 result.16 result.12 result.18 result.18 
       18        12        18        18        16        12        18        18 
result.18 result.18 result.11 result.18 result.18 result.18 result.17 result.18 
       18        18        11        18        18        18        17        18 
result.10 result.18 result.17 result.10 result.14 result.10 result.17 result.18 
       10        18        17        10        14        10        17        18 
result.10 result.10 result.14 result.13 result.18 result.18 result.17 result.18 
       10        10        14        13        18        18        17        18 
result.18 result.13 result.18 result.18 result.10 result.18 result.18 result.12 
       18        13        18        18        10        18        18        12 
result.18 result.12 result.11 result.18 result.10 result.18 result.18 result.18 
       18        12        11        18        10        18        18        18 
result.16 result.18 result.18 result.11 result.18 result.17 result.12 result.18 
       16        18        18        11        18        17        12        18 
result.18 result.18 result.18 result.10 result.15 result.18 result.10  result.9 
       18        18        18        10        15        18        10         9 
result.18 result.18  result.9 result.18 result.11 result.18 result.17 result.18 
       18        18         9        18        11        18        17        18 
result.17 result.18 result.18 result.18 
       17        18        18        18 
> sapply(IC4.100,function(l)which.min(l[,4]))
result.10 result.10 result.13  result.9 result.11 result.10 result.10 result.11 
       10        10        13         9        11        10        10        11 
result.10 result.10 result.10 result.14 result.13 result.11 result.10 result.10 
       10        10        10        14        13        11        10        10 
result.11 result.10 result.12 result.11 result.11 result.11 result.13 result.10 
       11        10        12        11        11        11        13        10 
result.11 result.10  result.9 result.12 result.13 result.12 result.10 result.10 
       11        10         9        12        13        12        10        10 
result.10 result.12 result.11 result.12 result.10 result.10 result.12 result.13 
       10        12        11        12        10        10        12        13 
result.10 result.11 result.11 result.10 result.13 result.10 result.15 result.10 
       10        11        11        10        13        10        15        10 
result.10  result.9 result.13 result.13 result.10 result.11 result.13 result.10 
       10         9        13        13        10        11        13        10 
result.13 result.11 result.10 result.12 result.10 result.12 result.11 result.12 
       13        11        10        12        10        12        11        12 
result.10 result.12 result.11 result.11 result.10 result.10 result.11 result.11 
       10        12        11        11        10        10        11        11 
result.11 result.14 result.11 result.11 result.11 result.12 result.12 result.10 
       11        14        11        11        11        12        12        10 
result.11 result.10  result.9 result.10 result.13 result.10 result.10  result.9 
       11        10         9        10        13        10        10         9 
result.11 result.13  result.9 result.11 result.11 result.11 result.12 result.10 
       11        13         9        11        11        11        12        10 
result.16 result.14 result.10  result.9 
       16        14        10         9 
> table(sapply(IC4.100,function(l)which.min(l[,4])))

 9 10 11 12 13 14 15 16 
 7 36 27 13 12  3  1  1 
> table(sapply(IC4.100,function(l)which.min(l[,2])))

17 18 
 3 97 
> table(sapply(IC4.100,function(l)which.min(l[,3])))

 9 10 11 12 13 14 15 16 17 18 
 2 12  7  5  2  3  1  2  8 58 
> 17*4
[1] 68
> table(sapply(IC4.100,function(l)which.min(l[1:15,3])))

 9 10 11 12 13 14 15 
 4 27 23 14  8 13 11 
> table(sapply(IC4.100,function(l)which.min(l[1:15,2])))

12 13 14 15 
 6  7  7 80 
> table(sapply(IC4.100,function(l)which.min(l[1:15,3])))

 9 10 11 12 13 14 15 
 4 27 23 14  8 13 11 
> table(sapply(IC4.100,function(l)which.min(l[1:15,3])))

 9 10 11 12 13 14 15 
 4 27 23 14  8 13 11 
> table(sapply(IC4.100,function(l)which.min(l[1:15,4])))

 9 10 11 12 13 14 15 
 7 36 27 13 13  3  1 
> save.image()
> ls()
 [1] "aa"                  "bb"                  "calc.with.best"     
 [4] "calc.with.fixed"     "cc"                  "cr"                 
 [7] "cu"                  "dd"                  "ee"                 
[10] "gen.k"               "i"                   "IC4.100"            
[13] "k"                   "k3.100"              "kk"                 
[16] "KZ.k"                "modl"                "modl3.100"          
[19] "modl4.100"           "nls3.100.1"          "pnls3.100.1"        
[22] "prep.nls.finite"     "prep.nls.finite.old" "prep.nls.infty"     
[25] "rcppreflow"          "reflow"              "reflow.midas_sim"   
[28] "reflowcc.midas_sim"  "reflowold.midas_sim" "rr"                 
[31] "sim.X"               "sim.Y.finite"        "sim.Y.infty"        
[34] "sim3"                "sim3.100"            "sim4"               
[37] "sim4.100"            "sim4dif"             "sim4dif.5"          
[40] "sim4ur"              "sim4ur.5"            "sim4urr"            
[43] "sim4urr.5"           "sn4"                 "sn4r"               
[46] "sn4u"                "src"                 "theta.214"          
[49] "theta.216"           "theta.ar"            "theta.mid"          
[52] "theta.mid2"          "theta.r214"          "theta.sin"          
[55] "theta.u214"          "v1"                  "v2"                 
[58] "vv"                 
> sapply(ls(),function(r)eval(parse(text=paste("object.size(",r,")",sep="")))
+ )
                 aa                  bb      calc.with.best     calc.with.fixed 
              73392               11496               24512               22168 
                 cc                  cr                  cu                  dd 
              18384                2960                2960                3400 
                 ee               gen.k                   i             IC4.100 
               2960               12440                  48              240840 
                  k              k3.100                  kk                KZ.k 
                 48                5640           250774440               13160 
               modl           modl3.100           modl4.100          nls3.100.1 
            2507736           250774440              240840             3636040 
        pnls3.100.1     prep.nls.finite prep.nls.finite.old      prep.nls.infty 
              99240                9152                9792                9168 
         rcppreflow              reflow    reflow.midas_sim  reflowcc.midas_sim 
               2360                 904               11560               11560 
reflowold.midas_sim                  rr               sim.X        sim.Y.finite 
              16960                2960                8168               25088 
        sim.Y.infty                sim3            sim3.100                sim4 
              25392               55776              802440               55776 
           sim4.100             sim4dif           sim4dif.5              sim4ur 
            7340040               91560               52312             7795080 
           sim4ur.5             sim4urr           sim4urr.5                 sn4 
            7584464             7711168             7544632               36856 
               sn4r                sn4u                 src           theta.214 
              36856               36856                 384                7360 
          theta.216            theta.ar           theta.mid          theta.mid2 
               5976                3856                7712                8048 
         theta.r214           theta.sin          theta.u214                  v1 
               7536                9608                5784               18424 
                 v2                  vv 
              12160                 840 
> aa <- sapply(ls(),function(r)eval(parse(text=paste("object.size(",r,")",sep=""))))
> aa/1024^2
                 aa                  bb      calc.with.best     calc.with.fixed 
       6.999207e-02        1.096344e-02        2.337646e-02        2.114105e-02 
                 cc                  cr                  cu                  dd 
       1.753235e-02        2.822876e-03        2.822876e-03        3.242493e-03 
                 ee               gen.k                   i             IC4.100 
       2.822876e-03        1.186371e-02        4.577637e-05        2.296829e-01 
                  k              k3.100                  kk                KZ.k 
       4.577637e-05        5.378723e-03        2.391571e+02        1.255035e-02 
               modl           modl3.100           modl4.100          nls3.100.1 
       2.391563e+00        2.391571e+02        2.296829e-01        3.467598e+00 
        pnls3.100.1     prep.nls.finite prep.nls.finite.old      prep.nls.infty 
       9.464264e-02        8.728027e-03        9.338379e-03        8.743286e-03 
         rcppreflow              reflow    reflow.midas_sim  reflowcc.midas_sim 
       2.250671e-03        8.621216e-04        1.102448e-02        1.102448e-02 
reflowold.midas_sim                  rr               sim.X        sim.Y.finite 
       1.617432e-02        2.822876e-03        7.789612e-03        2.392578e-02 
        sim.Y.infty                sim3            sim3.100                sim4 
       2.421570e-02        5.319214e-02        7.652664e-01        5.319214e-02 
           sim4.100             sim4dif           sim4dif.5              sim4ur 
       7.000008e+00        8.731842e-02        4.988861e-02        7.433968e+00 
           sim4ur.5             sim4urr           sim4urr.5                 sn4 
       7.233109e+00        7.353943e+00        7.195122e+00        3.514862e-02 
               sn4r                sn4u                 src           theta.214 
       3.514862e-02        3.514862e-02        3.662109e-04        7.019043e-03 
          theta.216            theta.ar           theta.mid          theta.mid2 
       5.699158e-03        3.677368e-03        7.354736e-03        7.675171e-03 
         theta.r214           theta.sin          theta.u214                  v1 
       7.186890e-03        9.162903e-03        5.516052e-03        1.757050e-02 
                 v2                  vv 
       1.159668e-02        8.010864e-04 
> sort(round(aa/1024^2,0))
                 aa                  bb      calc.with.best     calc.with.fixed 
                  0                   0                   0                   0 
                 cc                  cr                  cu                  dd 
                  0                   0                   0                   0 
                 ee               gen.k                   i             IC4.100 
                  0                   0                   0                   0 
                  k              k3.100                KZ.k           modl4.100 
                  0                   0                   0                   0 
        pnls3.100.1     prep.nls.finite prep.nls.finite.old      prep.nls.infty 
                  0                   0                   0                   0 
         rcppreflow              reflow    reflow.midas_sim  reflowcc.midas_sim 
                  0                   0                   0                   0 
reflowold.midas_sim                  rr               sim.X        sim.Y.finite 
                  0                   0                   0                   0 
        sim.Y.infty                sim3                sim4             sim4dif 
                  0                   0                   0                   0 
          sim4dif.5                 sn4                sn4r                sn4u 
                  0                   0                   0                   0 
                src           theta.214           theta.216            theta.ar 
                  0                   0                   0                   0 
          theta.mid          theta.mid2          theta.r214           theta.sin 
                  0                   0                   0                   0 
         theta.u214                  v1                  v2                  vv 
                  0                   0                   0                   0 
           sim3.100                modl          nls3.100.1            sim4.100 
                  1                   2                   3                   7 
             sim4ur            sim4ur.5             sim4urr           sim4urr.5 
                  7                   7                   7                   7 
                 kk           modl3.100 
                239                 239 
> rm(kk)
> rm(modl3.100)
> save.image()
> gc()
          used (Mb) gc trigger  (Mb) max used  (Mb)
Ncells  455496 24.4    3534975 188.8  4418719 236.0
Vcells 1853919 14.2   54042175 412.4 57416973 438.1
> gc()
          used (Mb) gc trigger  (Mb) max used  (Mb)
Ncells  455500 24.4    2827980 151.1  4418719 236.0
Vcells 1853941 14.2   43233740 329.9 57416973 438.1
> gc()
          used (Mb) gc trigger  (Mb) max used  (Mb)
Ncells  455500 24.4    2262384 120.9  4418719 236.0
Vcells 1853941 14.2   34586992 263.9 57416973 438.1
> gc()
          used (Mb) gc trigger  (Mb) max used  (Mb)
Ncells  455500 24.4    1809907  96.7  4418719 236.0
Vcells 1853941 14.2   27669593 211.2 57416973 438.1
> gc()
          used (Mb) gc trigger  (Mb) max used  (Mb)
Ncells  455500 24.4    1447925  77.4  4418719 236.0
Vcells 1853941 14.2   22135674 168.9 57416973 438.1
> gc()
          used (Mb) gc trigger  (Mb) max used  (Mb)
Ncells  455500 24.4    1447925  77.4  4418719 236.0
Vcells 1853941 14.2   17708539 135.2 57416973 438.1
> aa <- sapply(ls(),function(r)eval(parse(text=paste("object.size(",r,")",sep=""))))
> sort(round(aa/1024^2,0))
                 aa                  bb      calc.with.best     calc.with.fixed 
                  0                   0                   0                   0 
                 cc                  cr                  cu                  dd 
                  0                   0                   0                   0 
                 ee               gen.k                   i             IC4.100 
                  0                   0                   0                   0 
                  k              k3.100                KZ.k           modl4.100 
                  0                   0                   0                   0 
        pnls3.100.1     prep.nls.finite prep.nls.finite.old      prep.nls.infty 
                  0                   0                   0                   0 
         rcppreflow              reflow    reflow.midas_sim  reflowcc.midas_sim 
                  0                   0                   0                   0 
reflowold.midas_sim                  rr               sim.X        sim.Y.finite 
                  0                   0                   0                   0 
        sim.Y.infty                sim3                sim4             sim4dif 
                  0                   0                   0                   0 
          sim4dif.5                 sn4                sn4r                sn4u 
                  0                   0                   0                   0 
                src           theta.214           theta.216            theta.ar 
                  0                   0                   0                   0 
          theta.mid          theta.mid2          theta.r214           theta.sin 
                  0                   0                   0                   0 
         theta.u214                  v1                  v2                  vv 
                  0                   0                   0                   0 
           sim3.100                modl          nls3.100.1            sim4.100 
                  1                   2                   3                   7 
             sim4ur            sim4ur.5             sim4urr           sim4urr.5 
                  7                   7                   7                   7 
> save.image()
> gc()
          used (Mb) gc trigger  (Mb) max used  (Mb)
Ncells  455496 24.4    1447925  77.4  4418719 236.0
Vcells 1853915 14.2   14166831 108.1 57416973 438.1
> center
Erreur : objet 'center' introuvable
> ?center
> form <- formula(~a)
> form
~a
> form[[1]]
`~`
> form[[2]]
a
> form[[3]]
Erreur dans form[[3]] : indice hors limites
> form[[1]]
`~`
> form[[3]] <- as.name("y")
> form
a ~ y
> form
a ~ y
> form
a ~ y
> form <- formula(~a)
> form
~a
> (-1)^(1:10)
 [1] -1  1 -1  1 -1  1 -1  1 -1  1
> sim4ur[[1]]$u
Nonlinear regression model
  model:  that ~ theta.u214(index, lambda, beta) 
   data:  bb 
  lambda1   lambda2      beta 
 0.008252 -0.001500  0.866886 
 residual sum-of-squares: 0.7786

Number of iterations to convergence: 4 
Achieved convergence tolerance: 1.378e-06 
> names(sim4ur[[1]]$u)
[1] "m"           "convInfo"    "data"        "call"        "dataClasses"
[6] "control"    
> sim4ur[[1]]$u$m
$resid
function () 
resid
<environment: 0x1404a9f58>

$fitted
function () 
rhs
<environment: 0x1404a9f58>

$formula
function () 
form
<environment: 0x1404a9f58>

$deviance
function () 
dev
<environment: 0x1404a9f58>

$lhs
function () 
lhs
<environment: 0x1404a9f58>

$gradient
function () 
.swts * attr(rhs, "gradient")
<environment: 0x1404a9f58>

$conv
function () 
{
    if (npar == 0) 
        return(0)
    rr <- qr.qty(QR, resid)
    sqrt(sum(rr[1L:npar]^2)/sum(rr[-(1L:npar)]^2))
}
<environment: 0x1404a9f58>

$incr
function () 
qr.coef(QR, resid)
<environment: 0x1404a9f58>

$setVarying
function (vary = rep(TRUE, length(useParams))) 
{
    assign("useParams", if (is.character(vary)) {
        temp <- logical(length(useParams))
        temp[unlist(ind[vary])] <- TRUE
        temp
    }
    else if (is.logical(vary) && length(vary) != length(useParams)) 
        stop("setVarying : 'vary' length must match length of parameters")
    else {
        vary
    }, envir = thisEnv)
    gradCall[[length(gradCall) - 1L]] <<- useParams
    if (all(useParams)) {
        assign("setPars", setPars.noVarying, envir = thisEnv)
        assign("getPars", getPars.noVarying, envir = thisEnv)
        assign("getRHS", getRHS.noVarying, envir = thisEnv)
        assign("npar", length(useParams), envir = thisEnv)
    }
    else {
        assign("setPars", setPars.varying, envir = thisEnv)
        assign("getPars", getPars.varying, envir = thisEnv)
        assign("getRHS", getRHS.varying, envir = thisEnv)
        assign("npar", length(seq_along(useParams)[useParams]), 
            envir = thisEnv)
    }
}
<environment: 0x1404a9f58>

$setPars
function (newPars) 
{
    setPars(newPars)
    assign("resid", .swts * (lhs - assign("rhs", getRHS(), envir = thisEnv)), 
        envir = thisEnv)
    assign("dev", sum(resid^2), envir = thisEnv)
    assign("QR", qr(.swts * attr(rhs, "gradient")), envir = thisEnv)
    return(QR$rank < min(dim(QR$qr)))
}
<environment: 0x1404a9f58>

$getPars
function () 
getPars()
<environment: 0x1404a9f58>

$getAllPars
function () 
getPars()
<environment: 0x1404a9f58>

$getEnv
function () 
env
<environment: 0x1404a9f58>

$trace
function () 
cat(format(dev), ": ", format(getPars()), "\n")
<environment: 0x1404a9f58>

$Rmat
function () 
qr.R(QR)
<environment: 0x1404a9f58>

$predict
function (newdata = list(), qr = FALSE) 
eval(form[[3L]], as.list(newdata), env)
<environment: 0x1404a9f58>

attr(,"class")
[1] "nlsModel"
> ?nlsnls                   package:stats                    R Documentation

Nonlinear Least Squares

Description:

     Determine the nonlinear (weighted) least-squares estimates of the
     parameters of a nonlinear model.

Usage:

     nls(formula, data, start, control, algorithm,
         trace, subset, weights, na.action, model,
         lower, upper, ...)
     
Arguments:

 formula: a nonlinear model formula including variables and parameters.
          Will be coerced to a formula if necessary.

    data: an optional data frame in which to evaluate the variables in
          ‘formula’ and ‘weights’.  Can also be a list or an
          environment, but not a matrix.

   start: a named list or named numeric vector of starting estimates.
          When ‘start’ is missing, a very cheap guess for ‘start’ is
          tried (if ‘algorithm != "plinear"’).

 control: an optional list of control settings.  See ‘nls.control’ for
          the names of the settable control values and their effect.

algorithm: character string specifying the algorithm to use.  The
          default algorithm is a Gauss-Newton algorithm.  Other
          possible values are ‘"plinear"’ for the Golub-Pereyra
          algorithm for partially linear least-squares models and
          ‘"port"’ for the ‘nl2sol’ algorithm from the Port library -
          see the references.

   trace: logical value indicating if a trace of the iteration progress
          should be printed.  Default is ‘FALSE’.  If ‘TRUE’ the
          residual (weighted) sum-of-squares and the parameter values
          are printed at the conclusion of each iteration.  When the
          ‘"plinear"’ algorithm is used, the conditional estimates of
          the linear parameters are printed after the nonlinear
          parameters.  When the ‘"port"’ algorithm is used the
          objective function value printed is half the residual
          (weighted) sum-of-squares.

  subset: an optional vector specifying a subset of observations to be
          used in the fitting process.

 weights: an optional numeric vector of (fixed) weights.  When present,
          the objective function is weighted least squares.

na.action: a function which indicates what should happen when the data
          contain ‘NA’s.  The default is set by the ‘na.action’ setting
          of ‘options’, and is ‘na.fail’ if that is unset.  The
          ‘factory-fresh’ default is ‘na.omit’.  Value ‘na.exclude’ can
          be useful.

   model: logical.  If true, the model frame is returned as part of the
          object. Default is ‘FALSE’.

lower, upper: vectors of lower and upper bounds, replicated to be as
          long as ‘start’.  If unspecified, all parameters are assumed
          to be unconstrained.  Bounds can only be used with the
          ‘"port"’ algorithm.  They are ignored, with a warning, if
          given for other algorithms.

     ...: Additional optional arguments.  None are used at present.

Details:

     An ‘nls’ object is a type of fitted model object.  It has methods
     for the generic functions ‘anova’, ‘coef’, ‘confint’, ‘deviance’,
     ‘df.residual’, ‘fitted’, ‘formula’, ‘logLik’, ‘predict’, ‘print’,
     ‘profile’, ‘residuals’, ‘summary’, ‘vcov’ and ‘weights’.

     Variables in ‘formula’ (and ‘weights’ if not missing) are looked
     for first in ‘data’, then the environment of ‘formula’ and finally
     along the search path.  Functions in ‘formula’ are searched for
     first in the environment of ‘formula’ and then along the search
     path.

     Arguments ‘subset’ and ‘na.action’ are supported only when all the
     variables in the formula taken from ‘data’ are of the same length:
     other cases give a warning.

     Note that the ‘anova’ method does not check that the models are
     nested: this cannot easily be done automatically, so use with
     care.

Value:

     A list of

       m: an ‘nlsModel’ object incorporating the model.

    data: the expression that was passed to ‘nls’ as the data argument.
          The actual data values are present in the environment of the
          ‘m’ component.

    call: the matched call with several components, notably
          ‘algorithm’.

na.action: the ‘"na.action"’ attribute (if any) of the model frame.

dataClasses: the ‘"dataClasses"’ attribute (if any) of the ‘"terms"’
          attribute of the model frame.

   model: if ‘model = TRUE’, the model frame.

 weights: if ‘weights’ is supplied, the weights.

convInfo: when ‘algorithm’ is not "port", a list with convergence
          information.

 control: the control ‘list’ used, see the ‘control’ argument.

convergence, message: for an ‘algorithm = "port"’ fit only, a
          convergence code (‘0’ for convergence) and message.
     *Note* that setting ‘warnOnly = TRUE’ in the ‘control’ argument
     (see ‘nls.control’) returns a non-converged object (since R
     version 2.5.0) which might be useful for further convergence
     analysis, _but *not* for inference_.

Warning:

     *Do not use ‘nls’ on artificial "zero-residual" data.*

     The ‘nls’ function uses a relative-offset convergence criterion
     that compares the numerical imprecision at the current parameter
     estimates to the residual sum-of-squares.  This performs well on
     data of the form

                            y = f(x, theta) + eps                       
     
     (with ‘var(eps) > 0’).  It fails to indicate convergence on data
     of the form

                               y = f(x, theta)                          
     
     because the criterion amounts to comparing two components of the
     round-off error.  If you wish to test ‘nls’ on artificial data
     please add a noise component, as shown in the example below.

     The ‘algorithm = "port"’ code appears unfinished, and does not
     even check that the starting value is within the bounds.  Use with
     caution, especially where bounds are supplied.

Author(s):

     Douglas M. Bates and Saikat DebRoy

References:

     Bates, D. M. and Watts, D. G. (1988) _Nonlinear Regression
     Analysis and Its Applications_, Wiley

     Bates, D. M. and Chambers, J. M. (1992) _Nonlinear models._
     Chapter 10 of _Statistical Models in S_ eds J. M. Chambers and T.
     J. Hastie, Wadsworth & Brooks/Cole.

     <URL: http://www.netlib.org/port/> for the Port library
     documentation.

See Also:

     ‘summary.nls’, ‘predict.nls’, ‘profile.nls’.

Examples:

     require(graphics)
     
     DNase1 <- subset(DNase, Run == 1)
     
     ## using a selfStart model
     fm1DNase1 <- nls(density ~ SSlogis(log(conc), Asym, xmid, scal), DNase1)
     summary(fm1DNase1)
     ## the coefficients only:
     coef(fm1DNase1)
     ## including their SE, etc:
     coef(summary(fm1DNase1))
     
     ## using conditional linearity
     fm2DNase1 <- nls(density ~ 1/(1 + exp((xmid - log(conc))/scal)),
                      data = DNase1,
                      start = list(xmid = 0, scal = 1),
                      algorithm = "plinear", trace = TRUE)
     summary(fm2DNase1)
     
     ## without conditional linearity
     fm3DNase1 <- nls(density ~ Asym/(1 + exp((xmid - log(conc))/scal)),
                      data = DNase1,
                      start = list(Asym = 3, xmid = 0, scal = 1),
                      trace = TRUE)
     summary(fm3DNase1)
     
     ## using Port's nl2sol algorithm
     fm4DNase1 <- nls(density ~ Asym/(1 + exp((xmid - log(conc))/scal)),
                      data = DNase1,
                      start = list(Asym = 3, xmid = 0, scal = 1),
                      trace = TRUE, algorithm = "port")
     summary(fm4DNase1)
     
     ## weighted nonlinear regression
     Treated <- Puromycin[Puromycin$state == "treated", ]
     weighted.MM <- function(resp, conc, Vm, K)
     {
         ## Purpose: exactly as white book p. 451 -- RHS for nls()
         ##  Weighted version of Michaelis-Menten model
         ## ----------------------------------------------------------
         ## Arguments: 'y', 'x' and the two parameters (see book)
         ## ----------------------------------------------------------
         ## Author: Martin Maechler, Date: 23 Mar 2001
     
         pred <- (Vm * conc)/(K + conc)
         (resp - pred) / sqrt(pred)
     }
     
     Pur.wt <- nls( ~ weighted.MM(rate, conc, Vm, K), data = Treated,
                   start = list(Vm = 200, K = 0.1),
                   trace = TRUE)
     summary(Pur.wt)
     
     ## Passing arguments using a list that can not be coerced to a data.frame
     lisTreat <- with(Treated,
                      list(conc1 = conc[1], conc.1 = conc[-1], rate = rate))
     
     weighted.MM1 <- function(resp, conc1, conc.1, Vm, K)
     {
          conc <- c(conc1, conc.1)
          pred <- (Vm * conc)/(K + conc)
         (resp - pred) / sqrt(pred)
     }
     Pur.wt1 <- nls( ~ weighted.MM1(rate, conc1, conc.1, Vm, K),
                    data = lisTreat, start = list(Vm = 200, K = 0.1))
     stopifnot(all.equal(coef(Pur.wt), coef(Pur.wt1)))
     
     ## Chambers and Hastie (1992) Statistical Models in S  (p. 537):
     ## If the value of the right side [of formula] has an attribute called
     ## 'gradient' this should be a matrix with the number of rows equal
     ## to the length of the response and one column for each parameter.
     
     weighted.MM.grad <- function(resp, conc1, conc.1, Vm, K)
     {
       conc <- c(conc1, conc.1)
     
       K.conc <- K+conc
       dy.dV <- conc/K.conc
       dy.dK <- -Vm*dy.dV/K.conc
       pred <- Vm*dy.dV
       pred.5 <- sqrt(pred)
       dev <- (resp - pred) / pred.5
       Ddev <- -0.5*(resp+pred)/(pred.5*pred)
       attr(dev, "gradient") <- Ddev * cbind(Vm = dy.dV, K = dy.dK)
       dev
     }
     
     Pur.wt.grad <- nls( ~ weighted.MM.grad(rate, conc1, conc.1, Vm, K),
                        data = lisTreat, start = list(Vm = 200, K = 0.1))
     
     rbind(coef(Pur.wt), coef(Pur.wt1), coef(Pur.wt.grad))
     
     ## In this example, there seems no advantage to providing the gradient.
     ## In other cases, there might be.
     
     
     ## The two examples below show that you can fit a model to
     ## artificial data with noise but not to artificial data
     ## without noise.
     x <- 1:10
     y <- 2*x + 3                            # perfect fit
     yeps <- y + rnorm(length(y), sd = 0.01) # added noise
     nls(yeps ~ a + b*x, start = list(a = 0.12345, b = 0.54321),
         trace = TRUE)
     ## Not run:
     
     ## terminates in an error, because convergence cannot be confirmed:
     nls(y ~ a + b*x, start = list(a = 0.12345, b = 0.54321),
          trace = TRUE)
     ## End(Not run)
     
     
     ## the nls() internal cheap guess for starting values can be sufficient:
     
     x <- -(1:100)/10
     y <- 100 + 10 * exp(x / 2) + rnorm(x)/10
     nlmod <- nls(y ~  Const + A * exp(B * x), trace=TRUE)
     
     plot(x,y, main = "nls(*), data, true function and fit, n=100")
     curve(100 + 10 * exp(x / 2), col=4, add = TRUE)
     lines(x, predict(nlmod), col=2)
     
     
     ## The muscle dataset in MASS is from an experiment on muscle
     ## contraction on 21 animals.  The observed variables are Strip
     ## (identifier of muscle), Conc (Cacl concentration) and Length
     ## (resulting length of muscle section).
     utils::data(muscle, package = "MASS")
     
     ## The non linear model considered is
     ##       Length = alpha + beta*exp(-Conc/theta) + error
     ## where theta is constant but alpha and beta may vary with Strip.
     
     with(muscle, table(Strip)) # 2,3 or 4 obs per strip
     
     ## We first use the plinear algorithm to fit an overall model,
     ## ignoring that alpha and beta might vary with Strip.
     
     musc.1 <- nls(Length ~ cbind(1, exp(-Conc/th)), muscle,
                   start = list(th=1), algorithm="plinear")
     summary(musc.1)
     
     ## Then we use nls' indexing feature for parameters in non-linear
     ## models to use the conventional algorithm to fit a model in which
     ## alpha and beta vary with Strip.  The starting values are provided
     ## by the previously fitted model.
     ## Note that with indexed parameters, the starting values must be
     ## given in a list (with names):
     b <- coef(musc.1)
     musc.2 <- nls(Length ~ a[Strip] + b[Strip]*exp(-Conc/th),
                   muscle,
                   start = list(a=rep(b[2],21), b=rep(b[3],21), th=b[1]))
     summary(musc.2)
     

> ?nls  ^C ^C
> Save workspace image? [y/n/c]: y

Process R finished at Sat May  7 17:34:22 2011


R version 2.11.1 (2010-05-31)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R est un logiciel libre livr'e sans AUCUNE GARANTIE.
Vous pouvez le redistribuer sous certaines conditions.
Tapez 'license()' ou 'licence()' pour plus de d'etails.

R est un projet collaboratif avec de nombreux contributeurs.
Tapez 'contributors()' pour plus d'information et
'citation()' pour la facon de le citer dans les publications.

Tapez 'demo()' pour des d'emonstrations, 'help()' pour l'aide
en ligne ou 'help.start()' pour obtenir l'aide au format HTML.
Tapez 'q()' pour quitter R.

[1] "fr_FR/fr_FR/fr_FR/C/fr_FR/C"
[Sauvegarde de la session précédente restaurée]


 Started working: Sat May  7 17:34:41 2011 
> .help.ESS <- help
> options(STERM='iESS', editor='emacsclient')
> ?nls
> predict(sim4ur[[1]]$u)
 [1] 0.8727594 0.8760400 0.8766988 0.8747297 0.8701505 0.8630021 0.8533484
 [8] 0.8412749 0.8268876 0.8103116 0.7916890 0.7711773 0.7489466 0.7251778
[15] 0.7000599 0.6737874 0.6465581 0.6185706 0.5900218 0.5611045 0.5320060
[22] 0.5029054 0.4739725 0.4453659 0.4172322 0.3897047 0.3629030 0.3369322
[29] 0.3118828 0.2878308 0.2648380 0.2429519 0.2222067 0.2026242 0.1842138
[36] 0.1669746 0.1508952 0.1359557 0.1221284 0.1093787
> sim4ur[[1]]$u$data
bb
> sim4ur[[1]]$u$data$bb
Erreur dans sim4ur[[1]]$u$data$bb : objet de type 'symbol' non indiçable
> sim4ur[[1]]$u$data
bb
> length(sim4.100)
[1] 100
> 
> sim5 <- sim.Y.finite(100,3,1000,tfun=theta.us214,xfun=sim.X,lambda=c(-0.01,-0.001),beta=1)
Erreur dans sim.Y.finite(100, 3, 1000, tfun = theta.us214, xfun = sim.X,  : 
  impossible de trouver la fonction "%do%"
> 
> library(foreach)
Le chargement a nécessité le package : iterators
Le chargement a nécessité le package : codetools
foreach: simple, scalable parallel programming from REvolution Computing
Use REvolution R for scalability, fault tolerance and more.
http://www.revolution-computing.com
> library(stats4)
> library(ggplot2)
Le chargement a nécessité le package : reshape
Le chargement a nécessité le package : plyr

Attachement du package : 'reshape'

The following object(s) are masked from 'package:plyr':

    round_any

Le chargement a nécessité le package : grid
Le chargement a nécessité le package : proto
> 
> sim5 <- sim.Y.finite(100,3,1000,tfun=theta.us214,xfun=sim.X,lambda=c(-0.01,-0.001),beta=1)
> 
> sn5u <- fit.lambda(sim5,that~theta.us214(index,lambda,beta),k=5,start=list(lambda=c(-0.01,-0.001),beta=5),trace=TRUE)
Erreur dans .Primitive(".Call")(<pointer: 0x0>, x, dims) : 
  valeur NULL passée comme adresse symbolique
> source("10code.R")
> source("11code.R")
Erreur dans eval.with.vis(expr, envir, enclos) : 
  impossible de trouver la fonction "cxxfunction"
> source("10code.R")
> source("11code.R")
> 
> sim5 <- sim.Y.finite(100,3,1000,tfun=theta.us214,xfun=sim.X,lambda=c(-0.01,-0.001),beta=1)
> 
> sn5u <- fit.lambda(sim5,that~theta.us214(index,lambda,beta),k=5,start=list(lambda=c(-0.01,-0.001),beta=5),trace=TRUE)
216.2056 :  -0.010 -0.001  5.000 
0.4648269 :  -0.0167673643 -0.0006657676  0.9349825249 
0.3260982 :  -0.047565913  0.000854682  0.936577796 
0.3255465 :  -0.0505029792  0.0009942408  0.9400215902 
0.3255465 :  -0.0504943462  0.0009931343  0.9400234067 
> sim5$theta
                  [,1]
   [1,]   9.890603e-01
   [2,]  -9.762857e-01
   [3,]   9.617507e-01
   [4,]  -9.455391e-01
   [5,]   9.277435e-01
   [6,]  -9.084640e-01
   [7,]   8.878078e-01
   [8,]  -8.658877e-01
   [9,]   8.428216e-01
  [10,]  -8.187308e-01
  [11,]   7.937395e-01
  [12,]  -7.679735e-01
  [13,]   7.415594e-01
  [14,]  -7.146231e-01
  [15,]   6.872893e-01
  [16,]  -6.596803e-01
  [17,]   6.319152e-01
  [18,]  -6.041094e-01
  [19,]   5.763731e-01
  [20,]  -5.488116e-01
  [21,]   5.215240e-01
  [22,]  -4.946029e-01
  [23,]   4.681343e-01
  [24,]  -4.421969e-01
  [25,]   4.168620e-01
  [26,]  -3.921935e-01
  [27,]   3.682475e-01
  [28,]  -3.450728e-01
  [29,]   3.227104e-01
  [30,]  -3.011942e-01
  [31,]   2.805509e-01
  [32,]  -2.608004e-01
  [33,]   2.419559e-01
  [34,]  -2.240245e-01
  [35,]   2.070076e-01
  [36,]  -1.909011e-01
  [37,]   1.756960e-01
  [38,]  -1.613789e-01
  [39,]   1.479324e-01
  [40,]  -1.353353e-01
  [41,]   1.235635e-01
  [42,]  -1.125903e-01
  [43,]   1.023865e-01
  [44,]  -9.292152e-02
  [45,]   8.416299e-02
  [46,]  -7.607771e-02
  [47,]   6.863175e-02
  [48,]  -6.179085e-02
  [49,]   5.552066e-02
  [50,]  -4.978707e-02
  [51,]   4.455638e-02
  [52,]  -3.979556e-02
  [53,]   3.547241e-02
  [54,]  -3.155573e-02
  [55,]   2.801543e-02
  [56,]  -2.482262e-02
  [57,]   2.194974e-02
  [58,]  -1.937058e-02
  [59,]   1.706032e-02
  [60,]  -1.499558e-02
  [61,]   1.315439e-02
  [62,]  -1.151621e-02
  [63,]   1.006189e-02
  [64,]  -8.773671e-03
  [65,]   7.635094e-03
  [66,]  -6.630998e-03
  [67,]   5.747444e-03
  [68,]  -4.971667e-03
  [69,]   4.292011e-03
  [70,]  -3.697864e-03
  [71,]   3.179600e-03
  [72,]  -2.728509e-03
  [73,]   2.336736e-03
  [74,]  -1.997218e-03
  [75,]   1.703620e-03
  [76,]  -1.450278e-03
  [77,]   1.232143e-03
  [78,]  -1.044727e-03
  [79,]   8.840473e-04
  [80,]  -7.465858e-04
  [81,]   6.292386e-04
  [82,]  -5.292763e-04
  [83,]   4.443047e-04
  [84,]  -3.722295e-04
  [85,]   3.112233e-04
  [86,]  -2.596957e-04
  [87,]   2.162663e-04
  [88,]  -1.797399e-04
  [89,]   1.490841e-04
  [90,]  -1.234098e-04
  [91,]   1.019529e-04
  [92,]  -8.405830e-05
  [93,]   6.916608e-05
  [94,]  -5.679854e-05
  [95,]   4.654923e-05
  [96,]  -3.807320e-05
  [97,]   3.107832e-05
  [98,]  -2.531787e-05
  [99,]   2.058393e-05
 [100,]  -1.670170e-05
 [getOption("max.print") est atteint -- 2903 lignes omises ]]
> 
> IC5 <- gen.IC(sim5)
Erreur dans eval(expr, envir, enclos) : 
  l'argument "kmax" est manquant, avec aucune valeur par défaut
> 
> IC5 <- gen.IC(sim5,kmax=15)
> IC5
          Lag      AIC      BIC     KZIC
result.1    0 424.6748 435.0955 2.025539
result.2    1 409.8566 428.0224 1.994111
result.3    2 388.6787 414.5284 1.922217
result.4    3 383.0789 416.5502 1.918470
result.5    4 371.8033 412.8329 1.881241
result.6    5 352.6990 401.2227 1.798764
result.7    6 332.5645 388.5170 1.725857
result.8    7 307.4293 370.7443 1.626204
result.9    8 294.7413 365.3514 1.573197
result.10   9 293.9970 371.8336 1.584067
result.11  10 287.1254 372.1189 1.608099
result.12  11 274.5372 366.6167 1.572128
result.13  12 268.8349 367.9284 1.603448
result.14  13 269.2296 375.2637 1.631758
result.15  14 253.9481 366.8480 1.571803
result.16  15 255.2867 374.9766 1.610532
> apply(IC5[,-1],2,which.max)
 AIC  BIC KZIC 
   1    1    1 
> apply(IC5[,-1],2,which.min)
 AIC  BIC KZIC 
  15    9   15 
> 
> sim5 <- sim.Y.finite(100,3,1000,tfun=theta.us214,xfun=sim.X,lambda=c(-0.01,-0.001),beta=1)
> 
> IC5 <- gen.IC(sim5,kmax=15)
> apply(IC5[,-1],2,which.min)
 AIC  BIC KZIC 
  15   12   12 
> 
> sn5u <- fit.lambda(sim5,that~theta.us214(index,lambda,beta),k=12,start=list(lambda=c(-0.01,-0.001),beta=5),trace=TRUE)
238.9142 :  -0.010 -0.001  5.000 
1.225610 :  -0.006798810 -0.001106498  0.950601545 
1.150194 :   0.006468368 -0.001550529  0.951379344 
1.150003 :   0.005749369 -0.001534145  0.953612953 
1.150003 :   0.005779489 -0.001534997  0.953439866 
1.150003 :   0.005778713 -0.001534981  0.953445316 
> predict(sn5u)
 [1]  0.9575001 -0.9586246  0.9568086 -0.9520687  0.9444484 -0.9340174
 [7]  0.9208701 -0.9051249  0.8869220 -0.8664211  0.8437997 -0.8192500
[13]  0.7929764 -0.7651927  0.7361191 -0.7059795  0.6749986 -0.6433989
[19]  0.6113987 -0.5792092  0.5470325 -0.5150597  0.4834690 -0.4524249
[25]  0.4220765 -0.3925568  0.3639825 -0.3364537  0.3100536 -0.2848493
[31]  0.2608916 -0.2382165  0.2168454 -0.1967866  0.1780358 -0.1605780
[37]  0.1443881 -0.1294326  0.1156704
> predict(sn5u)-sim5$theta
                 [,1]
   [1,] -0.0315601993
   [2,]  0.0176610872
   [3,] -0.0049421032
   [4,] -0.0065295870
   [5,]  0.0167049573
   [6,] -0.0255533358
   [7,]  0.0330622860
   [8,] -0.0392371655
   [9,]  0.0441003789
  [10,] -0.0476903501
  [11,]  0.0500602427
  [12,] -0.0512764650
  [13,]  0.0514169973
  [14,] -0.0505695825
  [15,]  0.0488298256
  [16,] -0.0462992430
  [17,]  0.0430833056
  [18,] -0.0392895169
  [19,]  0.0350255632
  [20,] -0.0303975717
  [21,]  0.0255085054
  [22,] -0.0204567206
  [23,]  0.0153347064
  [24,] -0.0102280214
  [25,]  0.0052144355
  [26,] -0.0003632803
  [27,] -0.0042649923
  [28,]  0.0086190522
  [29,] -0.0126567417
  [30,]  0.0163449513
  [31,] -0.0196593364
  [32,]  0.0225838948
  [33,] -0.0251104273
  [34,]  0.0272379014
  [35,] -0.0289717417
  [36,]  0.0303230691
  [37,] -0.0313079094
  [38,]  0.0319463904
  [39,] -0.0322619474
  [40,]  1.0928353627
  [41,] -1.0821881331
  [42,]  1.0693988736
  [43,] -1.0544552649
  [44,]  1.0373699648
  [45,] -1.0181803421
  [46,]  0.9969477938
  [47,] -0.9737566652
  [48,]  0.9487128014
  [49,] -0.9219417673
  [50,]  0.8935867771
  [51,] -0.8638063814
  [52,]  0.8327719639
  [53,] -0.8006651007
  [54,]  0.7676748372
  [55,] -0.7339949393
  [56,]  0.6998211692
  [57,] -0.6653486394
  [58,]  0.6307692894
  [59,] -0.5962695274
  [60,]  0.5620280742
  [61,] -0.5282140371
  [62,]  0.4949852399
  [63,] -0.4624868233
  [64,]  0.4308501259
  [65,] -0.4001918505
  [66,]  0.3706135100
  [67,] -0.3422011471
  [68,]  0.3150253103
  [69,] -0.2891412711
  [70,]  0.2645894579
  [71,] -0.2413960827
  [72,]  0.2195739334
  [73,] -0.1991233033
  [74,]  0.1800330292
  [75,] -0.1622816099
  [76,]  0.1458383775
  [77,] -0.1306646955
  [78,]  0.1167151595
  [79,]  0.9566160322
  [80,] -0.9578780368
  [81,]  0.9561793673
  [82,] -0.9515394466
  [83,]  0.9440041389
  [84,] -0.9336451223
  [85,]  0.9205588635
  [86,] -0.9048652179
  [87,]  0.8867056861
  [88,] -0.8662413633
  [89,]  0.8436506246
  [90,] -0.8191265949
  [91,]  0.7928744538
  [92,] -0.7651086300
  [93,]  0.7360499383
  [94,] -0.7059227150
  [95,]  0.6749520013
  [96,] -0.6433608266
  [97,]  0.6113676338
  [98,] -0.5791838899
  [99,]  0.5470119134
 [100,] -0.5150429488
 [getOption("max.print") est atteint -- 2903 lignes omises ]]
> predict(sn5u)-sim5$theta[1:60]
 [1] -0.0315601993  0.0176610872 -0.0049421032 -0.0065295870  0.0167049573
 [6] -0.0255533358  0.0330622860 -0.0392371655  0.0441003789 -0.0476903501
[11]  0.0500602427 -0.0512764650  0.0514169973 -0.0505695825  0.0488298256
[16] -0.0462992430  0.0430833056 -0.0392895169  0.0350255632 -0.0303975717
[21]  0.0255085054 -0.0204567206  0.0153347064 -0.0102280214  0.0052144355
[26] -0.0003632803 -0.0042649923  0.0086190522 -0.0126567417  0.0163449513
[31] -0.0196593364  0.0225838948 -0.0251104273  0.0272379014 -0.0289717417
[36]  0.0303230691 -0.0313079094  0.0319463904 -0.0322619474  1.0928353627
[41] -1.0821881331  1.0693988736 -1.0544552649  1.0373699648 -1.0181803421
[46]  0.9969477938 -0.9737566652  0.9487128014 -0.9219417673  0.8935867771
[51] -0.8638063814  0.8327719639 -0.8006651007  0.7676748372 -0.7339949393
[56]  0.6998211692 -0.6653486394  0.6307692894 -0.5962695274  0.5620280742
Message d'avis :
In predict(sn5u) - sim5$theta[1:60] :
  la taille d'un objet plus long n'est pas multiple de la taille d'un objet plus court
> length(predict(sn5u))
[1] 39
> predict(sn5u)-sim5$theta[1:39]
 [1] -0.0315601993  0.0176610872 -0.0049421032 -0.0065295870  0.0167049573
 [6] -0.0255533358  0.0330622860 -0.0392371655  0.0441003789 -0.0476903501
[11]  0.0500602427 -0.0512764650  0.0514169973 -0.0505695825  0.0488298256
[16] -0.0462992430  0.0430833056 -0.0392895169  0.0350255632 -0.0303975717
[21]  0.0255085054 -0.0204567206  0.0153347064 -0.0102280214  0.0052144355
[26] -0.0003632803 -0.0042649923  0.0086190522 -0.0126567417  0.0163449513
[31] -0.0196593364  0.0225838948 -0.0251104273  0.0272379014 -0.0289717417
[36]  0.0303230691 -0.0313079094  0.0319463904 -0.0322619474
> sum(abs(predict(sn5u)-sim5$theta[1:39]))
[1] 1.081684
> 
> sn5r <- fit.lambda(sim5,that~theta.ur214(index,lambda,beta),k=12,start=list(lambda=c(-0.01,-0.001),beta=5),trace=TRUE)
Error in eval(expr, envir, enclos) : 
  impossible de trouver la fonction "theta.ur214"
> 
> sn5r <- fit.lambda(sim5,that~theta.rs214(index,lambda,beta),k=12,start=list(lambda=c(-0.01,-0.001),beta=5),trace=TRUE)
911.1042 :  -0.010 -0.001  5.000 
1.278936 :  -0.008181050 -0.001060513  0.530071318 
1.150274 :   0.006870194 -0.001562823  0.530591092 
1.150003 :   0.005742492 -0.001534065  0.532758611 
1.150003 :   0.005780055 -0.001535016  0.532637930 
1.150003 :   0.005778705 -0.001534981  0.532642261 
> predict(sn5r)
 [1]  0.9575002 -0.9586247  0.9568087 -0.9520688  0.9444485 -0.9340174
 [7]  0.9208701 -0.9051249  0.8869220 -0.8664211  0.8437997 -0.8192500
[13]  0.7929764 -0.7651927  0.7361191 -0.7059795  0.6749985 -0.6433989
[19]  0.6113987 -0.5792092  0.5470325 -0.5150596  0.4834690 -0.4524249
[25]  0.4220764 -0.3925567  0.3639825 -0.3364537  0.3100536 -0.2848492
[31]  0.2608916 -0.2382165  0.2168454 -0.1967865  0.1780358 -0.1605780
[37]  0.1443881 -0.1294325  0.1156704
> summary(sn5u)

Formula: that ~ theta.us214(index, lambda, beta)

Parameters:
          Estimate Std. Error t value Pr(>|t|)    
lambda1  0.0057787  0.0182459   0.317   0.7533    
lambda2 -0.0015350  0.0006005  -2.556   0.0149 *  
beta     0.9534453  0.1080640   8.823 1.58e-10 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 0.1787 on 36 degrees of freedom

Number of iterations to convergence: 5 
Achieved convergence tolerance: 2.844e-07 

> summary(sn5r)

Formula: that ~ theta.rs214(index, lambda, beta)

Parameters:
          Estimate Std. Error t value Pr(>|t|)    
lambda1  0.0057787  0.0182459   0.317   0.7533    
lambda2 -0.0015350  0.0006005  -2.556   0.0149 *  
beta     0.5326423  0.0619286   8.601 2.96e-10 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 0.1787 on 36 degrees of freedom

Number of iterations to convergence: 5 
Achieved convergence tolerance: 4.733e-07 

> sum(abs(predict(sn5u)-predict(sn5r)))
[1] 1.240235e-06
> 
> sn5un <- fit.lambda(sim5,that~theta.r214(index,lambda,beta),k=12,start=list(lambda=c(-0.01,-0.001),beta=5),trace=TRUE)
17.29372 :  -0.010 -0.001  5.000 
16.83618 :  -0.184408982  0.004019092  1.804664938 
16.54761 :  -0.59866718  0.01431472  1.43231158 
16.46206 :  -1.46351743  0.03582038  0.71781845 
16.13477 :  -4.8622262  0.1205345  0.7944382 
Error in nls(formula, data = bb, ...) : gradient singulier
> 
> sn5un <- fit.lambda(sim5,that~theta.r214(index,lambda,beta),k=12,start=list(lambda=c(-0.01,-0.001),beta=0.5),trace=TRUE)
17.02157 :  -0.010 -0.001  0.500 
16.87021 :  -0.44602240  0.01154773  0.82616624 
16.43359 :  -0.99381868  0.02365882  1.00696149 
16.29810 :  -2.59794652  0.06452764  0.85748198 
16.17870 :  -10.6374052   0.2647565   0.6892035 
Error in numericDeriv(form[[3L]], names(ind), env) : 
  Valeur manquante ou infinie obtenue au cours du calcul du modèle
> 